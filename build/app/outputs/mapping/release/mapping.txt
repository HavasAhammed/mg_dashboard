# compiler: R8
# compiler_version: 8.1.56
# min_api: 21
# common_typos_disable
# {"id":"com.android.tools.r8.mapping","version":"2.2"}
# pg_map_id: 6cabe24
# pg_map_hash: SHA-256 6cabe248754e8dfe230ae2f928f4ac37fd50c9b5ccf662f32d0c6358db7b5ea3
android.support.v4.app.RemoteActionCompatParcelizer -> android.support.v4.app.RemoteActionCompatParcelizer:
    1:1:androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel):0:0 -> read
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li/b;)Landroidx/core/app/RemoteActionCompat;"}
    1:1:void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel):0:0 -> write
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/app/RemoteActionCompat;Li/b;)V"}
android.support.v4.graphics.drawable.IconCompatParcelizer -> android.support.v4.graphics.drawable.IconCompatParcelizer:
    1:1:androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel):0:0 -> read
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li/b;)Landroidx/core/graphics/drawable/IconCompat;"}
    1:1:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel):0:0 -> write
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/graphics/drawable/IconCompat;Li/b;)V"}
androidx.arch.core.executor.ArchTaskExecutor -> a.b:
    androidx.arch.core.executor.TaskExecutor mDelegate -> r
    androidx.arch.core.executor.ArchTaskExecutor sInstance -> s
    1:1:void <init>():0:0 -> <init>
    1:1:androidx.arch.core.executor.ArchTaskExecutor getInstance():0:0 -> G
      # {"id":"com.android.tools.r8.residualsignature","signature":"()La/b;"}
androidx.arch.core.executor.ArchTaskExecutor$$ExternalSyntheticLambda0 -> a.a:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    int androidx.arch.core.executor.ArchTaskExecutor$$InternalSyntheticLambda$2$0cd99cbb60de02b88cedd941efa6ec8920ea8ed67fbe5be81367346cb3187fdb$0.$r8$classId -> a
    1:6:void androidx.arch.core.executor.ArchTaskExecutor$$InternalSyntheticLambda$2$0cd99cbb60de02b88cedd941efa6ec8920ea8ed67fbe5be81367346cb3187fdb$0.<init>():0:0 -> <init>
    1:6:void androidx.arch.core.executor.ArchTaskExecutor$$InternalSyntheticLambda$2$0cd99cbb60de02b88cedd941efa6ec8920ea8ed67fbe5be81367346cb3187fdb$0.$r8$init$synthetic(int):0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void androidx.arch.core.executor.ArchTaskExecutor$$InternalSyntheticLambda$2$0cd99cbb60de02b88cedd941efa6ec8920ea8ed67fbe5be81367346cb3187fdb$0.execute$bridge(java.lang.Runnable):0:0 -> execute
      # {"id":"com.android.tools.r8.synthesized"}
androidx.arch.core.executor.DefaultTaskExecutor -> a.d:
    java.lang.Object mLock -> r
    1:1:void <init>():0:0 -> <init>
androidx.arch.core.executor.DefaultTaskExecutor$1 -> a.c:
    java.util.concurrent.atomic.AtomicInteger mThreadId -> a
    1:1:void <init>(androidx.arch.core.executor.DefaultTaskExecutor):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"()V"}
    1:1:java.lang.Thread newThread(java.lang.Runnable):0:0 -> newThread
androidx.arch.core.internal.FastSafeIterableMap -> b.a:
    java.util.WeakHashMap androidx.arch.core.internal.SafeIterableMap.mIterators -> a
    1:10:void androidx.arch.core.internal.SafeIterableMap.<init>():0:0 -> <init>
    1:10:void <init>():0 -> <init>
    11:16:void <init>():0:0 -> <init>
    16:22:boolean androidx.arch.core.internal.SafeIterableMap.equals(java.lang.Object):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.util.Iterator androidx.arch.core.internal.SafeIterableMap.iterator():0:0 -> b
    1:6:java.lang.String androidx.arch.core.internal.SafeIterableMap.toString():0:0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
    1:5:boolean equals(java.lang.Object):0:0 -> equals
      # {"id":"com.android.tools.r8.synthesized"}
    1:5:int androidx.arch.core.internal.SafeIterableMap.hashCode():0:0 -> hashCode
    1:5:int hashCode():0 -> hashCode
      # {"id":"com.android.tools.r8.synthesized"}
    1:5:java.util.Iterator iterator():0:0 -> iterator
      # {"id":"com.android.tools.r8.synthesized"}
    1:5:java.lang.String toString():0:0 -> toString
      # {"id":"com.android.tools.r8.synthesized"}
androidx.arch.core.internal.SafeIterableMap$AscendingIterator -> b.b:
    1:4:void androidx.arch.core.internal.SafeIterableMap$AscendingIterator.<init>(androidx.arch.core.internal.SafeIterableMap$Entry,androidx.arch.core.internal.SafeIterableMap$Entry):0:0 -> <init>
    1:4:void $r8$init$synthetic(androidx.arch.core.internal.SafeIterableMap$Entry,androidx.arch.core.internal.SafeIterableMap$Entry,int):0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)V"}
androidx.arch.core.internal.SafeIterableMap$ListIterator -> b.c:
    1:1:boolean hasNext():0:0 -> hasNext
    1:1:java.lang.Object next():0:0 -> next
androidx.collection.ArrayMap -> c.b:
    int[] androidx.collection.SimpleArrayMap.mHashes -> a
    java.lang.Object[] androidx.collection.SimpleArrayMap.mArray -> b
    int androidx.collection.SimpleArrayMap.mSize -> c
    androidx.collection.MapCollections mCollections -> d
    java.lang.Object[] androidx.collection.SimpleArrayMap.mBaseCache -> e
    int androidx.collection.SimpleArrayMap.mBaseCacheSize -> f
    java.lang.Object[] androidx.collection.SimpleArrayMap.mTwiceBaseCache -> g
    int androidx.collection.SimpleArrayMap.mTwiceBaseCacheSize -> h
    1:15:void androidx.collection.SimpleArrayMap.<init>():0:0 -> <init>
    1:15:void <init>():0 -> <init>
    8:94:void androidx.collection.SimpleArrayMap.allocArrays(int):0:0 -> a
    8:94:void allocArrays(int):0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
    10:21:int androidx.collection.ContainerHelpers.binarySearch(int[],int,int):0:0 -> b
    10:21:int androidx.collection.SimpleArrayMap.binarySearchHashes(int[],int,int):0 -> b
    22:29:int androidx.collection.SimpleArrayMap.binarySearchHashes(int[],int,int):0:0 -> b
    1:1:void androidx.collection.SimpleArrayMap.clear():0:0 -> c
    1:4:void clear():0:0 -> clear
      # {"id":"com.android.tools.r8.synthesized"}
    1:5:boolean containsKey(java.lang.Object):0:0 -> containsKey
      # {"id":"com.android.tools.r8.synthesized"}
    1:5:boolean containsValue(java.lang.Object):0:0 -> containsValue
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean androidx.collection.SimpleArrayMap.containsKey(java.lang.Object):0:0 -> d
    1:1:boolean androidx.collection.SimpleArrayMap.containsValue(java.lang.Object):0:0 -> e
    1:13:androidx.collection.MapCollections androidx.collection.ArrayMap.getCollection():0:0 -> entrySet
    1:13:java.util.Set entrySet():0 -> entrySet
    14:17:java.util.Set androidx.collection.MapCollections.getEntrySet():0:0 -> entrySet
    14:17:java.util.Set entrySet():0 -> entrySet
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    18:28:java.util.Set androidx.collection.MapCollections.getEntrySet():0:0 -> entrySet
    18:28:java.util.Set entrySet():0 -> entrySet
    1:5:boolean equals(java.lang.Object):0:0 -> equals
      # {"id":"com.android.tools.r8.synthesized"}
    12:13:int androidx.collection.SimpleArrayMap.size():0:0 -> f
    12:13:boolean androidx.collection.SimpleArrayMap.equals(java.lang.Object):0 -> f
    14:19:int androidx.collection.SimpleArrayMap.size():0:0 -> f
    14:19:boolean androidx.collection.SimpleArrayMap.equals(java.lang.Object):0 -> f
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    20:23:boolean androidx.collection.SimpleArrayMap.equals(java.lang.Object):0:0 -> f
    24:31:java.lang.Object androidx.collection.SimpleArrayMap.keyAt(int):0:0 -> f
    24:31:boolean androidx.collection.SimpleArrayMap.equals(java.lang.Object):0 -> f
    32:34:java.lang.Object androidx.collection.SimpleArrayMap.valueAt(int):0:0 -> f
    32:34:boolean androidx.collection.SimpleArrayMap.equals(java.lang.Object):0 -> f
    35:42:java.lang.Object androidx.collection.SimpleArrayMap.get(java.lang.Object):0:0 -> f
    35:42:boolean androidx.collection.SimpleArrayMap.equals(java.lang.Object):0 -> f
    43:49:boolean androidx.collection.SimpleArrayMap.equals(java.lang.Object):0:0 -> f
    50:67:boolean androidx.collection.SimpleArrayMap.equals(java.lang.Object):0:0 -> f
    68:69:int androidx.collection.SimpleArrayMap.size():0:0 -> f
    68:69:boolean androidx.collection.SimpleArrayMap.equals(java.lang.Object):0 -> f
    70:81:boolean androidx.collection.SimpleArrayMap.equals(java.lang.Object):0:0 -> f
    82:89:java.lang.Object androidx.collection.SimpleArrayMap.keyAt(int):0:0 -> f
    82:89:boolean androidx.collection.SimpleArrayMap.equals(java.lang.Object):0 -> f
    90:91:java.lang.Object androidx.collection.SimpleArrayMap.valueAt(int):0:0 -> f
    90:91:boolean androidx.collection.SimpleArrayMap.equals(java.lang.Object):0 -> f
    92:118:boolean androidx.collection.SimpleArrayMap.equals(java.lang.Object):0:0 -> f
    1:1:void androidx.collection.SimpleArrayMap.freeArrays(int[],java.lang.Object[],int):0:0 -> g
    2:6:java.lang.Object androidx.collection.SimpleArrayMap.get(java.lang.Object):0:0 -> get
    2:6:java.lang.Object get(java.lang.Object):0 -> get
      # {"id":"com.android.tools.r8.synthesized"}
    1:5:java.lang.Object getOrDefault(java.lang.Object,java.lang.Object):0:0 -> getOrDefault
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.lang.Object androidx.collection.SimpleArrayMap.getOrDefault(java.lang.Object,java.lang.Object):0:0 -> h
    1:5:int hashCode():0:0 -> hashCode
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:int androidx.collection.SimpleArrayMap.hashCode():0:0 -> i
    1:5:boolean isEmpty():0:0 -> isEmpty
      # {"id":"com.android.tools.r8.synthesized"}
    1:81:int androidx.collection.SimpleArrayMap.indexOf(java.lang.Object,int):0:0 -> j
    1:81:int indexOf(java.lang.Object,int):0 -> j
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILjava/lang/Object;)I"}
    3:16:int androidx.collection.SimpleArrayMap.indexOfKey(java.lang.Object):0:0 -> k
    3:16:int indexOfKey(java.lang.Object):0 -> k
      # {"id":"com.android.tools.r8.synthesized"}
    1:13:androidx.collection.MapCollections androidx.collection.ArrayMap.getCollection():0:0 -> keySet
    1:13:java.util.Set keySet():0 -> keySet
    14:17:java.util.Set androidx.collection.MapCollections.getKeySet():0:0 -> keySet
    14:17:java.util.Set keySet():0 -> keySet
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    18:28:java.util.Set androidx.collection.MapCollections.getKeySet():0:0 -> keySet
    18:28:java.util.Set keySet():0 -> keySet
    1:74:int androidx.collection.SimpleArrayMap.indexOfNull():0:0 -> l
    1:74:int indexOfNull():0 -> l
      # {"id":"com.android.tools.r8.synthesized"}
    1:40:int androidx.collection.SimpleArrayMap.indexOfValue(java.lang.Object):0:0 -> m
    1:40:int indexOfValue(java.lang.Object):0 -> m
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean androidx.collection.SimpleArrayMap.isEmpty():0:0 -> n
    1:1:java.lang.Object androidx.collection.SimpleArrayMap.put(java.lang.Object,java.lang.Object):0:0 -> o
    2:7:java.lang.Object androidx.collection.SimpleArrayMap.get(java.lang.Object):0:0 -> p
    2:7:java.lang.Object androidx.collection.SimpleArrayMap.putIfAbsent(java.lang.Object,java.lang.Object):0 -> p
      # {"id":"com.android.tools.r8.synthesized"}
    8:12:java.lang.Object androidx.collection.SimpleArrayMap.putIfAbsent(java.lang.Object,java.lang.Object):0:0 -> p
    1:5:java.lang.Object put(java.lang.Object,java.lang.Object):0:0 -> put
      # {"id":"com.android.tools.r8.synthesized"}
    8:43:void androidx.collection.SimpleArrayMap.ensureCapacity(int):0:0 -> putAll
    8:43:void putAll(java.util.Map):0 -> putAll
    44:71:void putAll(java.util.Map):0:0 -> putAll
    72:76:void putAll(java.util.Map):0:0 -> putAll
    77:82:void androidx.collection.SimpleArrayMap.ensureCapacity(int):0:0 -> putAll
    77:82:void putAll(java.util.Map):0 -> putAll
    1:5:java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object):0:0 -> putIfAbsent
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.lang.Object androidx.collection.SimpleArrayMap.remove(java.lang.Object):0:0 -> q
    7:18:java.lang.Object androidx.collection.SimpleArrayMap.valueAt(int):0:0 -> r
    7:18:boolean androidx.collection.SimpleArrayMap.remove(java.lang.Object,java.lang.Object):0 -> r
    19:30:boolean androidx.collection.SimpleArrayMap.remove(java.lang.Object,java.lang.Object):0:0 -> r
    1:1:java.lang.Object remove(java.lang.Object):0:0 -> remove
      # {"id":"com.android.tools.r8.synthesized"}
    2:2:boolean remove(java.lang.Object,java.lang.Object):0:0 -> remove
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.lang.Object replace(java.lang.Object,java.lang.Object):0:0 -> replace
      # {"id":"com.android.tools.r8.synthesized"}
    2:2:boolean replace(java.lang.Object,java.lang.Object,java.lang.Object):0:0 -> replace
      # {"id":"com.android.tools.r8.synthesized"}
    1:134:java.lang.Object androidx.collection.SimpleArrayMap.removeAt(int):0:0 -> s
    1:134:java.lang.Object removeAt(int):0 -> s
      # {"id":"com.android.tools.r8.synthesized"}
    1:3:int androidx.collection.SimpleArrayMap.size():0:0 -> size
    1:3:int size():0 -> size
      # {"id":"com.android.tools.r8.synthesized"}
    11:19:java.lang.Object androidx.collection.SimpleArrayMap.setValueAt(int,java.lang.Object):0:0 -> t
    11:19:java.lang.Object androidx.collection.SimpleArrayMap.replace(java.lang.Object,java.lang.Object):0 -> t
    1:5:java.lang.String toString():0:0 -> toString
      # {"id":"com.android.tools.r8.synthesized"}
    7:17:java.lang.Object androidx.collection.SimpleArrayMap.valueAt(int):0:0 -> u
    7:17:boolean androidx.collection.SimpleArrayMap.replace(java.lang.Object,java.lang.Object,java.lang.Object):0 -> u
    18:23:boolean androidx.collection.SimpleArrayMap.replace(java.lang.Object,java.lang.Object,java.lang.Object):0:0 -> u
    24:32:java.lang.Object androidx.collection.SimpleArrayMap.setValueAt(int,java.lang.Object):0:0 -> u
    24:32:boolean androidx.collection.SimpleArrayMap.replace(java.lang.Object,java.lang.Object,java.lang.Object):0 -> u
    1:9:java.lang.String androidx.collection.SimpleArrayMap.toString():0:0 -> v
      # {"id":"com.android.tools.r8.synthesized"}
    10:35:java.lang.String androidx.collection.SimpleArrayMap.toString():0:0 -> v
    36:45:java.lang.Object androidx.collection.SimpleArrayMap.keyAt(int):0:0 -> v
    36:45:java.lang.String androidx.collection.SimpleArrayMap.toString():0 -> v
    46:57:java.lang.String androidx.collection.SimpleArrayMap.toString():0:0 -> v
    58:65:java.lang.Object androidx.collection.SimpleArrayMap.valueAt(int):0:0 -> v
    58:65:java.lang.String androidx.collection.SimpleArrayMap.toString():0 -> v
    66:85:java.lang.String androidx.collection.SimpleArrayMap.toString():0:0 -> v
    1:13:androidx.collection.MapCollections androidx.collection.ArrayMap.getCollection():0:0 -> values
    1:13:java.util.Collection values():0 -> values
    14:17:java.util.Collection androidx.collection.MapCollections.getValues():0:0 -> values
    14:17:java.util.Collection values():0 -> values
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    18:27:java.util.Collection androidx.collection.MapCollections.getValues():0:0 -> values
    18:27:java.util.Collection values():0 -> values
androidx.collection.ArrayMap$1 -> c.a:
    androidx.collection.MapCollections$EntrySet androidx.collection.MapCollections.mEntrySet -> a
    androidx.collection.MapCollections$KeySet androidx.collection.MapCollections.mKeySet -> b
    androidx.collection.MapCollections$ValuesCollection androidx.collection.MapCollections.mValues -> c
    androidx.collection.ArrayMap this$0 -> d
    3:6:void androidx.collection.MapCollections.<init>():0:0 -> <init>
    3:6:void <init>(androidx.collection.ArrayMap):0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc/b;)V"}
    1:1:java.lang.Object colGetEntry(int,int):0:0 -> a
    1:1:void colRemoveAt(int):0:0 -> b
    1:1:boolean androidx.collection.MapCollections.equalsSetHelper(java.util.Set,java.lang.Object):0:0 -> c
    1:4:int androidx.collection.ArrayMap$1.colGetSize():0:0 -> d
    1:4:java.lang.Object[] androidx.collection.MapCollections.toArrayHelper(java.lang.Object[],int):0 -> d
    1:4:java.lang.Object[] toArrayHelper(java.lang.Object[],int):0 -> d
      # {"id":"com.android.tools.r8.synthesized"}
    5:40:java.lang.Object[] androidx.collection.MapCollections.toArrayHelper(java.lang.Object[],int):0:0 -> d
    5:40:java.lang.Object[] toArrayHelper(java.lang.Object[],int):0 -> d
androidx.collection.MapCollections$ArrayIterator -> c.c:
    int mOffset -> a
    int mSize -> b
    int mIndex -> c
    boolean mCanRemove -> d
    androidx.collection.MapCollections this$0 -> e
    11:12:int androidx.collection.ArrayMap$1.colGetSize():0:0 -> <init>
    11:12:void <init>(androidx.collection.MapCollections,int):0 -> <init>
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc/a;I)V"}
    13:14:int androidx.collection.ArrayMap$1.colGetSize():0:0 -> <init>
    13:14:void <init>(androidx.collection.MapCollections,int):0 -> <init>
    15:17:void <init>(androidx.collection.MapCollections,int):0:0 -> <init>
    1:1:boolean hasNext():0:0 -> hasNext
    1:1:java.lang.Object next():0:0 -> next
    1:1:void remove():0:0 -> remove
androidx.collection.MapCollections$EntrySet -> c.d:
    int $r8$classId -> a
    androidx.collection.MapCollections this$0 -> b
    1:8:void androidx.collection.MapCollections$EntrySet.<init>(androidx.collection.MapCollections):0:0 -> <init>
    1:8:void $r8$init$synthetic(androidx.collection.ArrayMap$1,int):0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc/a;I)V"}
    7:8:boolean androidx.collection.MapCollections$EntrySet.add(java.lang.Object):0:0 -> add
    7:8:boolean add$bridge(java.lang.Object):0 -> add
      # {"id":"com.android.tools.r8.synthesized"}
    9:14:boolean androidx.collection.MapCollections$EntrySet.add(java.util.Map$Entry):0:0 -> add
    9:14:boolean androidx.collection.MapCollections$EntrySet.add(java.lang.Object):0 -> add
    9:14:boolean add$bridge(java.lang.Object):0 -> add
    15:20:boolean androidx.collection.MapCollections$KeySet.add(java.lang.Object):0:0 -> add
    15:20:boolean add$bridge(java.lang.Object):0 -> add
    7:10:int androidx.collection.ArrayMap$1.colGetSize():0:0 -> addAll
    7:10:boolean androidx.collection.MapCollections$EntrySet.addAll(java.util.Collection):0 -> addAll
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    7:10:boolean addAll$bridge(java.util.Collection):0 -> addAll
      # {"id":"com.android.tools.r8.synthesized"}
    11:12:int androidx.collection.ArrayMap$1.colGetSize():0:0 -> addAll
    11:12:boolean androidx.collection.MapCollections$EntrySet.addAll(java.util.Collection):0 -> addAll
    11:12:boolean addAll$bridge(java.util.Collection):0 -> addAll
    13:38:boolean androidx.collection.MapCollections$EntrySet.addAll(java.util.Collection):0:0 -> addAll
    13:38:boolean addAll$bridge(java.util.Collection):0 -> addAll
    39:42:void androidx.collection.ArrayMap$1.colPut(java.lang.Object,java.lang.Object):0:0 -> addAll
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(0)"]}
    39:42:boolean androidx.collection.MapCollections$EntrySet.addAll(java.util.Collection):0 -> addAll
    39:42:boolean addAll$bridge(java.util.Collection):0 -> addAll
    43:50:int androidx.collection.ArrayMap$1.colGetSize():0:0 -> addAll
    43:50:boolean androidx.collection.MapCollections$EntrySet.addAll(java.util.Collection):0 -> addAll
    43:50:boolean addAll$bridge(java.util.Collection):0 -> addAll
    51:56:boolean androidx.collection.MapCollections$KeySet.addAll(java.util.Collection):0:0 -> addAll
    51:56:boolean addAll$bridge(java.util.Collection):0 -> addAll
    9:10:void androidx.collection.ArrayMap$1.colClear():0:0 -> clear
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(0)"]}
    9:10:void androidx.collection.MapCollections$EntrySet.clear():0 -> clear
    9:10:void clear$bridge():0 -> clear
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(2)"]}
      # {"id":"com.android.tools.r8.synthesized"}
    11:14:void androidx.collection.ArrayMap$1.colClear():0:0 -> clear
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(0)"]}
    11:14:void androidx.collection.MapCollections$EntrySet.clear():0 -> clear
    11:14:void clear$bridge():0 -> clear
    15:16:void androidx.collection.ArrayMap$1.colClear():0:0 -> clear
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(0)"]}
    15:16:void androidx.collection.MapCollections$KeySet.clear():0 -> clear
    15:16:void clear$bridge():0 -> clear
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(2)"]}
    17:20:void androidx.collection.ArrayMap$1.colClear():0:0 -> clear
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(0)"]}
    17:20:void androidx.collection.MapCollections$KeySet.clear():0 -> clear
    17:20:void clear$bridge():0 -> clear
    11:21:boolean androidx.collection.MapCollections$EntrySet.contains(java.lang.Object):0:0 -> contains
    11:21:boolean contains$bridge(java.lang.Object):0 -> contains
      # {"id":"com.android.tools.r8.synthesized"}
    22:23:int androidx.collection.ArrayMap$1.colIndexOfKey(java.lang.Object):0:0 -> contains
    22:23:boolean androidx.collection.MapCollections$EntrySet.contains(java.lang.Object):0 -> contains
    22:23:boolean contains$bridge(java.lang.Object):0 -> contains
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(2)"]}
    24:30:int androidx.collection.ArrayMap$1.colIndexOfKey(java.lang.Object):0:0 -> contains
    24:30:boolean androidx.collection.MapCollections$EntrySet.contains(java.lang.Object):0 -> contains
    24:30:boolean contains$bridge(java.lang.Object):0 -> contains
    31:42:boolean androidx.collection.MapCollections$EntrySet.contains(java.lang.Object):0:0 -> contains
    31:42:boolean contains$bridge(java.lang.Object):0 -> contains
    43:52:boolean androidx.collection.ContainerHelpers.equal(java.lang.Object,java.lang.Object):0:0 -> contains
    43:52:boolean androidx.collection.MapCollections$EntrySet.contains(java.lang.Object):0 -> contains
    43:52:boolean contains$bridge(java.lang.Object):0 -> contains
    53:54:int androidx.collection.ArrayMap$1.colIndexOfKey(java.lang.Object):0:0 -> contains
    53:54:boolean androidx.collection.MapCollections$KeySet.contains(java.lang.Object):0 -> contains
    53:54:boolean contains$bridge(java.lang.Object):0 -> contains
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(2)"]}
    55:64:int androidx.collection.ArrayMap$1.colIndexOfKey(java.lang.Object):0:0 -> contains
    55:64:boolean androidx.collection.MapCollections$KeySet.contains(java.lang.Object):0 -> contains
    55:64:boolean contains$bridge(java.lang.Object):0 -> contains
    9:30:boolean androidx.collection.MapCollections$EntrySet.containsAll(java.util.Collection):0:0 -> containsAll
    9:30:boolean containsAll$bridge(java.util.Collection):0 -> containsAll
      # {"id":"com.android.tools.r8.synthesized"}
    31:34:java.util.Map androidx.collection.ArrayMap$1.colGetMap():0:0 -> containsAll
    31:34:boolean androidx.collection.MapCollections$KeySet.containsAll(java.util.Collection):0 -> containsAll
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    31:34:boolean containsAll$bridge(java.util.Collection):0 -> containsAll
    35:48:boolean androidx.collection.MapCollections.containsAllHelper(java.util.Map,java.util.Collection):0:0 -> containsAll
    35:48:boolean androidx.collection.MapCollections$KeySet.containsAll(java.util.Collection):0 -> containsAll
    35:48:boolean containsAll$bridge(java.util.Collection):0 -> containsAll
    49:56:boolean androidx.collection.MapCollections.containsAllHelper(java.util.Map,java.util.Collection):0:0 -> containsAll
    49:56:boolean androidx.collection.MapCollections$KeySet.containsAll(java.util.Collection):0 -> containsAll
    49:56:boolean containsAll$bridge(java.util.Collection):0 -> containsAll
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(2)"]}
    7:11:boolean androidx.collection.MapCollections$EntrySet.equals(java.lang.Object):0:0 -> equals
    7:11:boolean equals$bridge(java.lang.Object):0 -> equals
      # {"id":"com.android.tools.r8.synthesized"}
    12:16:boolean androidx.collection.MapCollections$KeySet.equals(java.lang.Object):0:0 -> equals
    12:16:boolean equals$bridge(java.lang.Object):0 -> equals
    10:11:int androidx.collection.ArrayMap$1.colGetSize():0:0 -> hashCode
    10:11:int androidx.collection.MapCollections$EntrySet.hashCode():0 -> hashCode
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    10:11:int hashCode$bridge():0 -> hashCode
      # {"id":"com.android.tools.r8.synthesized"}
    12:18:int androidx.collection.ArrayMap$1.colGetSize():0:0 -> hashCode
    12:18:int androidx.collection.MapCollections$EntrySet.hashCode():0 -> hashCode
    12:18:int hashCode$bridge():0 -> hashCode
    19:48:int androidx.collection.MapCollections$EntrySet.hashCode():0:0 -> hashCode
    19:48:int hashCode$bridge():0 -> hashCode
    49:50:int androidx.collection.ArrayMap$1.colGetSize():0:0 -> hashCode
    49:50:int androidx.collection.MapCollections$KeySet.hashCode():0 -> hashCode
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    49:50:int hashCode$bridge():0 -> hashCode
    51:57:int androidx.collection.ArrayMap$1.colGetSize():0:0 -> hashCode
    51:57:int androidx.collection.MapCollections$KeySet.hashCode():0 -> hashCode
    51:57:int hashCode$bridge():0 -> hashCode
    58:74:int androidx.collection.MapCollections$KeySet.hashCode():0:0 -> hashCode
    58:74:int hashCode$bridge():0 -> hashCode
    11:12:int androidx.collection.ArrayMap$1.colGetSize():0:0 -> isEmpty
    11:12:boolean androidx.collection.MapCollections$EntrySet.isEmpty():0 -> isEmpty
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    11:12:boolean isEmpty$bridge():0 -> isEmpty
      # {"id":"com.android.tools.r8.synthesized"}
    13:18:int androidx.collection.ArrayMap$1.colGetSize():0:0 -> isEmpty
    13:18:boolean androidx.collection.MapCollections$EntrySet.isEmpty():0 -> isEmpty
    13:18:boolean isEmpty$bridge():0 -> isEmpty
    19:20:int androidx.collection.ArrayMap$1.colGetSize():0:0 -> isEmpty
    19:20:boolean androidx.collection.MapCollections$KeySet.isEmpty():0 -> isEmpty
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    19:20:boolean isEmpty$bridge():0 -> isEmpty
    21:26:int androidx.collection.ArrayMap$1.colGetSize():0:0 -> isEmpty
    21:26:boolean androidx.collection.MapCollections$KeySet.isEmpty():0 -> isEmpty
    21:26:boolean isEmpty$bridge():0 -> isEmpty
    9:14:java.util.Iterator androidx.collection.MapCollections$EntrySet.iterator():0:0 -> iterator
    9:14:java.util.Iterator iterator$bridge():0 -> iterator
      # {"id":"com.android.tools.r8.synthesized"}
    15:22:java.util.Iterator androidx.collection.MapCollections$KeySet.iterator():0:0 -> iterator
    15:22:java.util.Iterator iterator$bridge():0 -> iterator
    7:12:boolean androidx.collection.MapCollections$EntrySet.remove(java.lang.Object):0:0 -> remove
    7:12:boolean remove$bridge(java.lang.Object):0 -> remove
      # {"id":"com.android.tools.r8.synthesized"}
    13:16:int androidx.collection.ArrayMap$1.colIndexOfKey(java.lang.Object):0:0 -> remove
    13:16:boolean androidx.collection.MapCollections$KeySet.remove(java.lang.Object):0 -> remove
    13:16:boolean remove$bridge(java.lang.Object):0 -> remove
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(2)"]}
    17:22:int androidx.collection.ArrayMap$1.colIndexOfKey(java.lang.Object):0:0 -> remove
    17:22:boolean androidx.collection.MapCollections$KeySet.remove(java.lang.Object):0 -> remove
    17:22:boolean remove$bridge(java.lang.Object):0 -> remove
    23:30:boolean androidx.collection.MapCollections$KeySet.remove(java.lang.Object):0:0 -> remove
    23:30:boolean remove$bridge(java.lang.Object):0 -> remove
    7:12:boolean androidx.collection.MapCollections$EntrySet.removeAll(java.util.Collection):0:0 -> removeAll
    7:12:boolean removeAll$bridge(java.util.Collection):0 -> removeAll
      # {"id":"com.android.tools.r8.synthesized"}
    13:16:java.util.Map androidx.collection.ArrayMap$1.colGetMap():0:0 -> removeAll
    13:16:boolean androidx.collection.MapCollections$KeySet.removeAll(java.util.Collection):0 -> removeAll
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    13:16:boolean removeAll$bridge(java.util.Collection):0 -> removeAll
    17:18:int androidx.collection.SimpleArrayMap.size():0:0 -> removeAll
    17:18:boolean androidx.collection.MapCollections.removeAllHelper(java.util.Map,java.util.Collection):0 -> removeAll
    17:18:boolean androidx.collection.MapCollections$KeySet.removeAll(java.util.Collection):0 -> removeAll
    17:18:boolean removeAll$bridge(java.util.Collection):0 -> removeAll
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(3)"]}
    19:32:boolean androidx.collection.MapCollections.removeAllHelper(java.util.Map,java.util.Collection):0:0 -> removeAll
    19:32:boolean androidx.collection.MapCollections$KeySet.removeAll(java.util.Collection):0 -> removeAll
    19:32:boolean removeAll$bridge(java.util.Collection):0 -> removeAll
    33:36:boolean androidx.collection.MapCollections.removeAllHelper(java.util.Map,java.util.Collection):0:0 -> removeAll
    33:36:boolean androidx.collection.MapCollections$KeySet.removeAll(java.util.Collection):0 -> removeAll
    33:36:boolean removeAll$bridge(java.util.Collection):0 -> removeAll
    37:44:int androidx.collection.SimpleArrayMap.size():0:0 -> removeAll
    37:44:boolean androidx.collection.MapCollections.removeAllHelper(java.util.Map,java.util.Collection):0 -> removeAll
    37:44:boolean androidx.collection.MapCollections$KeySet.removeAll(java.util.Collection):0 -> removeAll
    37:44:boolean removeAll$bridge(java.util.Collection):0 -> removeAll
    7:12:boolean androidx.collection.MapCollections$EntrySet.retainAll(java.util.Collection):0:0 -> retainAll
    7:12:boolean retainAll$bridge(java.util.Collection):0 -> retainAll
      # {"id":"com.android.tools.r8.synthesized"}
    13:16:java.util.Map androidx.collection.ArrayMap$1.colGetMap():0:0 -> retainAll
    13:16:boolean androidx.collection.MapCollections$KeySet.retainAll(java.util.Collection):0 -> retainAll
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    13:16:boolean retainAll$bridge(java.util.Collection):0 -> retainAll
    17:18:int androidx.collection.SimpleArrayMap.size():0:0 -> retainAll
    17:18:boolean androidx.collection.MapCollections.retainAllHelper(java.util.Map,java.util.Collection):0 -> retainAll
    17:18:boolean androidx.collection.MapCollections$KeySet.retainAll(java.util.Collection):0 -> retainAll
    17:18:boolean retainAll$bridge(java.util.Collection):0 -> retainAll
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(3)"]}
    19:48:boolean androidx.collection.MapCollections.retainAllHelper(java.util.Map,java.util.Collection):0:0 -> retainAll
    19:48:boolean androidx.collection.MapCollections$KeySet.retainAll(java.util.Collection):0 -> retainAll
    19:48:boolean retainAll$bridge(java.util.Collection):0 -> retainAll
    49:56:int androidx.collection.SimpleArrayMap.size():0:0 -> retainAll
    49:56:boolean androidx.collection.MapCollections.retainAllHelper(java.util.Map,java.util.Collection):0 -> retainAll
    49:56:boolean androidx.collection.MapCollections$KeySet.retainAll(java.util.Collection):0 -> retainAll
    49:56:boolean retainAll$bridge(java.util.Collection):0 -> retainAll
    9:10:int androidx.collection.ArrayMap$1.colGetSize():0:0 -> size
    9:10:int androidx.collection.MapCollections$EntrySet.size():0 -> size
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    9:10:int size$bridge():0 -> size
      # {"id":"com.android.tools.r8.synthesized"}
    11:13:int androidx.collection.ArrayMap$1.colGetSize():0:0 -> size
    11:13:int androidx.collection.MapCollections$EntrySet.size():0 -> size
    11:13:int size$bridge():0 -> size
    14:15:int androidx.collection.ArrayMap$1.colGetSize():0:0 -> size
    14:15:int androidx.collection.MapCollections$KeySet.size():0 -> size
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    14:15:int size$bridge():0 -> size
    16:18:int androidx.collection.ArrayMap$1.colGetSize():0:0 -> size
    16:18:int androidx.collection.MapCollections$KeySet.size():0 -> size
    16:18:int size$bridge():0 -> size
    1:1:java.lang.Object[] androidx.collection.MapCollections$EntrySet.toArray():0:0 -> toArray
    1:1:java.lang.Object[] toArray$bridge():0 -> toArray
      # {"id":"com.android.tools.r8.synthesized"}
    2:2:int androidx.collection.ArrayMap$1.colGetSize():0:0 -> toArray
    2:2:java.lang.Object[] androidx.collection.MapCollections.toArrayHelper(int):0 -> toArray
    2:2:java.lang.Object[] androidx.collection.MapCollections$KeySet.toArray():0 -> toArray
    2:2:java.lang.Object[] toArray$bridge():0 -> toArray
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(3)"]}
    3:3:int androidx.collection.ArrayMap$1.colGetSize():0:0 -> toArray
    3:3:java.lang.Object[] androidx.collection.MapCollections.toArrayHelper(int):0 -> toArray
    3:3:java.lang.Object[] androidx.collection.MapCollections$KeySet.toArray():0 -> toArray
    3:3:java.lang.Object[] toArray$bridge():0 -> toArray
    4:4:java.lang.Object[] androidx.collection.MapCollections.toArrayHelper(int):0:0 -> toArray
    4:4:java.lang.Object[] androidx.collection.MapCollections$KeySet.toArray():0 -> toArray
    4:4:java.lang.Object[] toArray$bridge():0 -> toArray
    5:5:java.lang.Object[] androidx.collection.MapCollections$EntrySet.toArray(java.lang.Object[]):0:0 -> toArray
    5:5:java.lang.Object[] toArray$bridge(java.lang.Object[]):0 -> toArray
      # {"id":"com.android.tools.r8.synthesized"}
    6:6:java.lang.Object[] androidx.collection.MapCollections$KeySet.toArray(java.lang.Object[]):0:0 -> toArray
    6:6:java.lang.Object[] toArray$bridge(java.lang.Object[]):0 -> toArray
androidx.collection.MapCollections$MapIterator -> c.e:
    int mEnd -> a
    int mIndex -> b
    boolean mEntryValid -> c
    androidx.collection.MapCollections this$0 -> d
    9:10:int androidx.collection.ArrayMap$1.colGetSize():0:0 -> <init>
    9:10:void <init>(androidx.collection.MapCollections):0 -> <init>
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc/a;)V"}
    11:14:int androidx.collection.ArrayMap$1.colGetSize():0:0 -> <init>
    11:14:void <init>(androidx.collection.MapCollections):0 -> <init>
    15:20:void <init>(androidx.collection.MapCollections):0:0 -> <init>
    30:41:boolean androidx.collection.ContainerHelpers.equal(java.lang.Object,java.lang.Object):0:0 -> equals
    30:41:boolean equals(java.lang.Object):0 -> equals
    42:55:boolean equals(java.lang.Object):0:0 -> equals
    56:69:boolean androidx.collection.ContainerHelpers.equal(java.lang.Object,java.lang.Object):0:0 -> equals
    56:69:boolean equals(java.lang.Object):0 -> equals
    70:77:boolean equals(java.lang.Object):0:0 -> equals
    1:1:java.lang.Object getKey():0:0 -> getKey
    1:1:java.lang.Object getValue():0:0 -> getValue
    1:1:boolean hasNext():0:0 -> hasNext
    1:1:int hashCode():0:0 -> hashCode
    1:21:java.util.Map$Entry androidx.collection.MapCollections$MapIterator.next():0:0 -> next
    1:21:java.lang.Object next():0 -> next
    1:1:void remove():0:0 -> remove
    7:14:java.lang.Object androidx.collection.ArrayMap$1.colSetValue(int,java.lang.Object):0:0 -> setValue
    7:14:java.lang.Object setValue(java.lang.Object):0 -> setValue
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    15:16:java.lang.Object androidx.collection.SimpleArrayMap.setValueAt(int,java.lang.Object):0:0 -> setValue
    15:16:java.lang.Object androidx.collection.ArrayMap$1.colSetValue(int,java.lang.Object):0 -> setValue
    15:16:java.lang.Object setValue(java.lang.Object):0 -> setValue
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(2)"]}
    17:21:java.lang.Object androidx.collection.SimpleArrayMap.setValueAt(int,java.lang.Object):0:0 -> setValue
    17:21:java.lang.Object androidx.collection.ArrayMap$1.colSetValue(int,java.lang.Object):0 -> setValue
    17:21:java.lang.Object setValue(java.lang.Object):0 -> setValue
    22:29:java.lang.Object setValue(java.lang.Object):0:0 -> setValue
    1:1:java.lang.String toString():0:0 -> toString
androidx.collection.MapCollections$ValuesCollection -> c.f:
    androidx.collection.MapCollections this$0 -> a
    1:1:void <init>(androidx.collection.MapCollections):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc/a;)V"}
    1:1:boolean add(java.lang.Object):0:0 -> add
    1:1:boolean addAll(java.util.Collection):0:0 -> addAll
    1:4:void androidx.collection.ArrayMap$1.colClear():0:0 -> clear
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(0)"]}
    1:4:void clear():0 -> clear
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
      # {"id":"com.android.tools.r8.synthesized"}
    5:8:void androidx.collection.ArrayMap$1.colClear():0:0 -> clear
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(0)"]}
    5:8:void clear():0 -> clear
    1:4:int androidx.collection.ArrayMap$1.colIndexOfValue(java.lang.Object):0:0 -> contains
    1:4:boolean contains(java.lang.Object):0 -> contains
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    5:14:int androidx.collection.ArrayMap$1.colIndexOfValue(java.lang.Object):0:0 -> contains
    5:14:boolean contains(java.lang.Object):0 -> contains
    1:1:boolean containsAll(java.util.Collection):0:0 -> containsAll
    1:4:int androidx.collection.ArrayMap$1.colGetSize():0:0 -> isEmpty
    1:4:boolean isEmpty():0 -> isEmpty
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    5:12:int androidx.collection.ArrayMap$1.colGetSize():0:0 -> isEmpty
    5:12:boolean isEmpty():0 -> isEmpty
    1:1:java.util.Iterator iterator():0:0 -> iterator
    1:4:int androidx.collection.ArrayMap$1.colIndexOfValue(java.lang.Object):0:0 -> remove
    1:4:boolean remove(java.lang.Object):0 -> remove
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    5:10:int androidx.collection.ArrayMap$1.colIndexOfValue(java.lang.Object):0:0 -> remove
    5:10:boolean remove(java.lang.Object):0 -> remove
    11:17:boolean remove(java.lang.Object):0:0 -> remove
    1:4:int androidx.collection.ArrayMap$1.colGetSize():0:0 -> removeAll
    1:4:boolean removeAll(java.util.Collection):0 -> removeAll
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    5:11:int androidx.collection.ArrayMap$1.colGetSize():0:0 -> removeAll
    5:11:boolean removeAll(java.util.Collection):0 -> removeAll
    12:32:boolean removeAll(java.util.Collection):0:0 -> removeAll
    1:4:int androidx.collection.ArrayMap$1.colGetSize():0:0 -> retainAll
    1:4:boolean retainAll(java.util.Collection):0 -> retainAll
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    5:11:int androidx.collection.ArrayMap$1.colGetSize():0:0 -> retainAll
    5:11:boolean retainAll(java.util.Collection):0 -> retainAll
    12:32:boolean retainAll(java.util.Collection):0:0 -> retainAll
    1:4:int androidx.collection.ArrayMap$1.colGetSize():0:0 -> size
    1:4:int size():0 -> size
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    5:7:int androidx.collection.ArrayMap$1.colGetSize():0:0 -> size
    5:7:int size():0 -> size
    1:1:int androidx.collection.ArrayMap$1.colGetSize():0:0 -> toArray
    1:1:java.lang.Object[] androidx.collection.MapCollections.toArrayHelper(int):0 -> toArray
    1:1:java.lang.Object[] toArray():0 -> toArray
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(2)"]}
    2:2:int androidx.collection.ArrayMap$1.colGetSize():0:0 -> toArray
    2:2:java.lang.Object[] androidx.collection.MapCollections.toArrayHelper(int):0 -> toArray
    2:2:java.lang.Object[] toArray():0 -> toArray
    3:3:java.lang.Object[] androidx.collection.MapCollections.toArrayHelper(int):0:0 -> toArray
    3:3:java.lang.Object[] toArray():0 -> toArray
    4:4:java.lang.Object[] toArray(java.lang.Object[]):0:0 -> toArray
androidx.concurrent.futures.AbstractResolvableFuture -> d.h:
    java.lang.Object value -> a
    androidx.concurrent.futures.AbstractResolvableFuture$Listener listeners -> b
    androidx.concurrent.futures.AbstractResolvableFuture$Waiter waiters -> c
    boolean GENERATE_CANCELLATION_CAUSES -> d
    java.util.logging.Logger log -> e
    androidx.concurrent.futures.AbstractResolvableFuture$AtomicHelper ATOMIC_HELPER -> f
    java.lang.Object NULL -> g
    1:1:void <clinit>():0:0 -> <clinit>
    4:18:java.lang.Object androidx.concurrent.futures.AbstractResolvableFuture.getUninterruptibly(java.util.concurrent.Future):0:0 -> a
    4:18:void addDoneString(java.lang.StringBuilder):0 -> a
    19:26:void addDoneString(java.lang.StringBuilder):0:0 -> a
    27:30:java.lang.String androidx.concurrent.futures.AbstractResolvableFuture.userObjectToString(java.lang.Object):0:0 -> a
    27:30:void addDoneString(java.lang.StringBuilder):0 -> a
    31:44:void addDoneString(java.lang.StringBuilder):0:0 -> a
    45:54:java.lang.Object androidx.concurrent.futures.AbstractResolvableFuture.getUninterruptibly(java.util.concurrent.Future):0:0 -> a
    45:54:void addDoneString(java.lang.StringBuilder):0 -> a
    55:88:void addDoneString(java.lang.StringBuilder):0:0 -> a
    1:2:void androidx.concurrent.futures.AbstractResolvableFuture.releaseWaiters():0:0 -> b
    1:2:void complete(androidx.concurrent.futures.AbstractResolvableFuture):0 -> b
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld/h;)V"}
    3:15:void androidx.concurrent.futures.AbstractResolvableFuture.releaseWaiters():0:0 -> b
    3:15:void complete(androidx.concurrent.futures.AbstractResolvableFuture):0 -> b
    16:24:void androidx.concurrent.futures.AbstractResolvableFuture$Waiter.unpark():0:0 -> b
    16:24:void androidx.concurrent.futures.AbstractResolvableFuture.releaseWaiters():0 -> b
    16:24:void complete(androidx.concurrent.futures.AbstractResolvableFuture):0 -> b
    25:27:void androidx.concurrent.futures.AbstractResolvableFuture.releaseWaiters():0:0 -> b
    25:27:void complete(androidx.concurrent.futures.AbstractResolvableFuture):0 -> b
    28:50:androidx.concurrent.futures.AbstractResolvableFuture$Listener androidx.concurrent.futures.AbstractResolvableFuture.clearListeners(androidx.concurrent.futures.AbstractResolvableFuture$Listener):0:0 -> b
    28:50:void complete(androidx.concurrent.futures.AbstractResolvableFuture):0 -> b
    51:52:void complete(androidx.concurrent.futures.AbstractResolvableFuture):0:0 -> b
    53:64:void androidx.concurrent.futures.AbstractResolvableFuture.executeListener(java.lang.Runnable,java.util.concurrent.Executor):0:0 -> b
    53:64:void complete(androidx.concurrent.futures.AbstractResolvableFuture):0 -> b
    31:40:java.util.concurrent.CancellationException androidx.concurrent.futures.AbstractResolvableFuture.cancellationExceptionWithCause(java.lang.String,java.lang.Throwable):0:0 -> c
    31:40:java.lang.Object getDoneValue(java.lang.Object):0 -> c
    41:41:java.lang.Object getDoneValue(java.lang.Object):0:0 -> c
    1:1:boolean cancel(boolean):0:0 -> cancel
    1:1:void removeWaiter(androidx.concurrent.futures.AbstractResolvableFuture$Waiter):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld/g;)V"}
    1:1:void androidx.concurrent.futures.AbstractResolvableFuture$Waiter.setNext(androidx.concurrent.futures.AbstractResolvableFuture$Waiter):0:0 -> get
    1:1:java.lang.Object get():0 -> get
    2:2:java.lang.Object get():0:0 -> get
    3:3:void androidx.concurrent.futures.AbstractResolvableFuture$Waiter.setNext(androidx.concurrent.futures.AbstractResolvableFuture$Waiter):0:0 -> get
    3:3:java.lang.Object get(long,java.util.concurrent.TimeUnit):0 -> get
    4:4:java.lang.Object get(long,java.util.concurrent.TimeUnit):0:0 -> get
    1:1:boolean isCancelled():0:0 -> isCancelled
    1:1:boolean isDone():0:0 -> isDone
    18:27:boolean androidx.concurrent.futures.AbstractResolvableFuture.isCancelled():0:0 -> toString
    18:27:java.lang.String toString():0 -> toString
    28:41:java.lang.String toString():0:0 -> toString
    42:78:java.lang.String androidx.concurrent.futures.AbstractResolvableFuture.pendingToString():0:0 -> toString
    42:78:java.lang.String toString():0 -> toString
    79:134:java.lang.String toString():0:0 -> toString
androidx.concurrent.futures.AbstractResolvableFuture$1 -> d.a:
    long androidx.tracing.Trace.sTraceTagApp -> a
    java.lang.reflect.Method androidx.tracing.Trace.sIsTagEnabledMethod -> b
    int[] androidx.collection.ContainerHelpers.EMPTY_INTS -> c
    java.lang.Object[] androidx.collection.ContainerHelpers.EMPTY_OBJECTS -> d
    androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback androidx.profileinstaller.ProfileInstaller.EMPTY_DIAGNOSTICS -> e
    androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback androidx.profileinstaller.ProfileInstaller.LOG_DIAGNOSTICS -> f
    byte[] androidx.profileinstaller.ProfileTranscoder.MAGIC_PROF -> g
    byte[] androidx.profileinstaller.ProfileTranscoder.MAGIC_PROFM -> h
    byte[] androidx.profileinstaller.ProfileVersion.V015_S -> i
    byte[] androidx.profileinstaller.ProfileVersion.V010_P -> j
    byte[] androidx.profileinstaller.ProfileVersion.V009_O_MR1 -> k
    byte[] androidx.profileinstaller.ProfileVersion.V005_O -> l
    byte[] androidx.profileinstaller.ProfileVersion.V001_N -> m
    byte[] androidx.profileinstaller.ProfileVersion.METADATA_V001_N -> n
    byte[] androidx.profileinstaller.ProfileVersion.METADATA_V002 -> o
    java.lang.Object[] kotlin.jvm.internal.CollectionToArray.EMPTY -> p
    kotlinx.coroutines.internal.Symbol kotlinx.coroutines.flow.internal.NullSurrogateKt.NULL -> q
    4:9:void androidx.collection.ContainerHelpers.<clinit>():0:0 -> <clinit>
    4:9:void d.AbstractResolvableFuture$1.$r8$clinit$synthetic():0 -> <clinit>
      # {"id":"com.android.tools.r8.synthesized"}
    10:28:void androidx.profileinstaller.ProfileInstaller.<clinit>():0:0 -> <clinit>
    10:28:void d.AbstractResolvableFuture$1.$r8$clinit$synthetic():0 -> <clinit>
    29:43:void androidx.profileinstaller.ProfileTranscoder.<clinit>():0:0 -> <clinit>
    29:43:void d.AbstractResolvableFuture$1.$r8$clinit$synthetic():0 -> <clinit>
    44:93:void androidx.profileinstaller.ProfileVersion.<clinit>():0:0 -> <clinit>
    44:93:void d.AbstractResolvableFuture$1.$r8$clinit$synthetic():0 -> <clinit>
    94:95:void kotlin.jvm.internal.CollectionToArray.<clinit>():0:0 -> <clinit>
    94:95:void d.AbstractResolvableFuture$1.$r8$clinit$synthetic():0 -> <clinit>
    96:106:void kotlinx.coroutines.flow.internal.NullSurrogateKt.<clinit>():0:0 -> <clinit>
    96:106:void d.AbstractResolvableFuture$1.$r8$clinit$synthetic():0 -> <clinit>
    1:4:void androidx.arch.core.executor.TaskExecutor.<init>():0:0 -> <init>
    1:4:void androidx.concurrent.futures.AbstractResolvableFuture$AtomicHelper.<init>(androidx.concurrent.futures.AbstractResolvableFuture$1):0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)V"}
    1:7:int androidx.profileinstaller.Encoding.utf8Length(java.lang.String):0:0 -> A
    1:7:void androidx.profileinstaller.ProfileTranscoder.writeLineHeader(java.io.OutputStream,androidx.profileinstaller.DexProfileData,java.lang.String):0 -> A
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/ByteArrayOutputStream;Lf/d;Ljava/lang/String;)V"}
    8:19:void androidx.profileinstaller.ProfileTranscoder.writeLineHeader(java.io.OutputStream,androidx.profileinstaller.DexProfileData,java.lang.String):0:0 -> A
    20:27:void androidx.profileinstaller.Encoding.writeUInt32(java.io.OutputStream,long):0:0 -> A
    20:27:void androidx.profileinstaller.ProfileTranscoder.writeLineHeader(java.io.OutputStream,androidx.profileinstaller.DexProfileData,java.lang.String):0 -> A
    28:30:void androidx.profileinstaller.ProfileTranscoder.writeLineHeader(java.io.OutputStream,androidx.profileinstaller.DexProfileData,java.lang.String):0:0 -> A
    31:33:void androidx.profileinstaller.Encoding.writeUInt32(java.io.OutputStream,long):0:0 -> A
    31:33:void androidx.profileinstaller.ProfileTranscoder.writeLineHeader(java.io.OutputStream,androidx.profileinstaller.DexProfileData,java.lang.String):0 -> A
    34:43:void androidx.profileinstaller.Encoding.writeString(java.io.OutputStream,java.lang.String):0:0 -> A
    34:43:void androidx.profileinstaller.ProfileTranscoder.writeLineHeader(java.io.OutputStream,androidx.profileinstaller.DexProfileData,java.lang.String):0 -> A
    12:13:int androidx.profileinstaller.ProfileTranscoder.getMethodBitmapStorageSize(int):0:0 -> B
    12:13:void androidx.profileinstaller.ProfileTranscoder.writeMethodBitmap(java.io.OutputStream,androidx.profileinstaller.DexProfileData):0 -> B
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/ByteArrayOutputStream;Lf/d;)V"}
    14:64:void androidx.profileinstaller.ProfileTranscoder.writeMethodBitmap(java.io.OutputStream,androidx.profileinstaller.DexProfileData):0:0 -> B
    65:102:void androidx.profileinstaller.ProfileTranscoder.setMethodBitmapBit(byte[],int,int,androidx.profileinstaller.DexProfileData):0:0 -> B
    65:102:void androidx.profileinstaller.ProfileTranscoder.writeMethodBitmap(java.io.OutputStream,androidx.profileinstaller.DexProfileData):0 -> B
    103:106:void androidx.profileinstaller.ProfileTranscoder.writeMethodBitmap(java.io.OutputStream,androidx.profileinstaller.DexProfileData):0:0 -> B
    1:1:void androidx.profileinstaller.ProfileTranscoder.writeMethodsWithInlineCaches(java.io.OutputStream,androidx.profileinstaller.DexProfileData):0:0 -> C
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/ByteArrayOutputStream;Lf/d;)V"}
    1:1:boolean androidx.profileinstaller.ProfileInstaller.hasAlreadyWrittenProfileForThisInstall(android.content.pm.PackageInfo,java.io.File,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0:0 -> D
    1:1:void androidx.profileinstaller.ProfileInstaller.writeProfile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,boolean):0 -> D
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;La/a;Lf/g;Z)V"}
    2:2:void androidx.profileinstaller.ProfileInstaller.writeProfile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,boolean):0:0 -> D
    3:3:boolean androidx.profileinstaller.ProfileInstaller.transcodeAndWrite(android.content.res.AssetManager,java.lang.String,android.content.pm.PackageInfo,java.io.File,java.lang.String,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0:0 -> D
    3:3:void androidx.profileinstaller.ProfileInstaller.writeProfile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,boolean):0 -> D
    4:4:boolean androidx.profileinstaller.DeviceProfileWriter.deviceAllowsProfileInstallerAotWrites():0:0 -> D
    4:4:boolean androidx.profileinstaller.ProfileInstaller.transcodeAndWrite(android.content.res.AssetManager,java.lang.String,android.content.pm.PackageInfo,java.io.File,java.lang.String,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0 -> D
    4:4:void androidx.profileinstaller.ProfileInstaller.writeProfile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,boolean):0 -> D
    5:5:androidx.profileinstaller.DeviceProfileWriter androidx.profileinstaller.DeviceProfileWriter.read():0:0 -> D
    5:5:boolean androidx.profileinstaller.ProfileInstaller.transcodeAndWrite(android.content.res.AssetManager,java.lang.String,android.content.pm.PackageInfo,java.io.File,java.lang.String,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0 -> D
    5:5:void androidx.profileinstaller.ProfileInstaller.writeProfile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,boolean):0 -> D
    6:6:void androidx.profileinstaller.DeviceProfileWriter.assertDeviceAllowsProfileInstallerAotWritesCalled():0:0 -> D
    6:6:androidx.profileinstaller.DeviceProfileWriter androidx.profileinstaller.DeviceProfileWriter.read():0 -> D
    6:6:boolean androidx.profileinstaller.ProfileInstaller.transcodeAndWrite(android.content.res.AssetManager,java.lang.String,android.content.pm.PackageInfo,java.io.File,java.lang.String,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0 -> D
    6:6:void androidx.profileinstaller.ProfileInstaller.writeProfile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,boolean):0 -> D
    7:7:androidx.profileinstaller.DeviceProfileWriter androidx.profileinstaller.DeviceProfileWriter.read():0:0 -> D
    7:7:boolean androidx.profileinstaller.ProfileInstaller.transcodeAndWrite(android.content.res.AssetManager,java.lang.String,android.content.pm.PackageInfo,java.io.File,java.lang.String,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0 -> D
    7:7:void androidx.profileinstaller.ProfileInstaller.writeProfile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,boolean):0 -> D
    8:8:java.io.InputStream androidx.profileinstaller.DeviceProfileWriter.getProfileInputStream(android.content.res.AssetManager):0:0 -> D
    8:8:androidx.profileinstaller.DeviceProfileWriter androidx.profileinstaller.DeviceProfileWriter.read():0 -> D
    8:8:boolean androidx.profileinstaller.ProfileInstaller.transcodeAndWrite(android.content.res.AssetManager,java.lang.String,android.content.pm.PackageInfo,java.io.File,java.lang.String,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0 -> D
    8:8:void androidx.profileinstaller.ProfileInstaller.writeProfile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,boolean):0 -> D
    9:9:byte[] androidx.profileinstaller.ProfileTranscoder.readHeader(java.io.InputStream,byte[]):0:0 -> D
    9:9:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.DeviceProfileWriter.readProfileInternal(java.io.InputStream):0 -> D
    9:9:androidx.profileinstaller.DeviceProfileWriter androidx.profileinstaller.DeviceProfileWriter.read():0 -> D
    9:9:boolean androidx.profileinstaller.ProfileInstaller.transcodeAndWrite(android.content.res.AssetManager,java.lang.String,android.content.pm.PackageInfo,java.io.File,java.lang.String,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0 -> D
    9:9:void androidx.profileinstaller.ProfileInstaller.writeProfile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,boolean):0 -> D
    10:10:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.DeviceProfileWriter.readProfileInternal(java.io.InputStream):0:0 -> D
    10:10:androidx.profileinstaller.DeviceProfileWriter androidx.profileinstaller.DeviceProfileWriter.read():0 -> D
    10:10:boolean androidx.profileinstaller.ProfileInstaller.transcodeAndWrite(android.content.res.AssetManager,java.lang.String,android.content.pm.PackageInfo,java.io.File,java.lang.String,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0 -> D
    10:10:void androidx.profileinstaller.ProfileInstaller.writeProfile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,boolean):0 -> D
    11:11:java.lang.RuntimeException androidx.profileinstaller.Encoding.error(java.lang.String):0:0 -> D
    11:11:byte[] androidx.profileinstaller.ProfileTranscoder.readHeader(java.io.InputStream,byte[]):0 -> D
    11:11:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.DeviceProfileWriter.readProfileInternal(java.io.InputStream):0 -> D
    11:11:androidx.profileinstaller.DeviceProfileWriter androidx.profileinstaller.DeviceProfileWriter.read():0 -> D
    11:11:boolean androidx.profileinstaller.ProfileInstaller.transcodeAndWrite(android.content.res.AssetManager,java.lang.String,android.content.pm.PackageInfo,java.io.File,java.lang.String,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0 -> D
    11:11:void androidx.profileinstaller.ProfileInstaller.writeProfile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,boolean):0 -> D
    12:12:byte[] androidx.profileinstaller.ProfileTranscoder.readHeader(java.io.InputStream,byte[]):0:0 -> D
    12:12:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.DeviceProfileWriter.readProfileInternal(java.io.InputStream):0 -> D
    12:12:androidx.profileinstaller.DeviceProfileWriter androidx.profileinstaller.DeviceProfileWriter.read():0 -> D
    12:12:boolean androidx.profileinstaller.ProfileInstaller.transcodeAndWrite(android.content.res.AssetManager,java.lang.String,android.content.pm.PackageInfo,java.io.File,java.lang.String,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0 -> D
    12:12:void androidx.profileinstaller.ProfileInstaller.writeProfile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,boolean):0 -> D
    13:13:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.DeviceProfileWriter.readProfileInternal(java.io.InputStream):0:0 -> D
    13:13:androidx.profileinstaller.DeviceProfileWriter androidx.profileinstaller.DeviceProfileWriter.read():0 -> D
    13:13:boolean androidx.profileinstaller.ProfileInstaller.transcodeAndWrite(android.content.res.AssetManager,java.lang.String,android.content.pm.PackageInfo,java.io.File,java.lang.String,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0 -> D
    13:13:void androidx.profileinstaller.ProfileInstaller.writeProfile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,boolean):0 -> D
    14:14:androidx.profileinstaller.DeviceProfileWriter androidx.profileinstaller.DeviceProfileWriter.read():0:0 -> D
    14:14:boolean androidx.profileinstaller.ProfileInstaller.transcodeAndWrite(android.content.res.AssetManager,java.lang.String,android.content.pm.PackageInfo,java.io.File,java.lang.String,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0 -> D
    14:14:void androidx.profileinstaller.ProfileInstaller.writeProfile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,boolean):0 -> D
    15:15:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.DeviceProfileWriter.readProfileInternal(java.io.InputStream):0:0 -> D
    15:15:androidx.profileinstaller.DeviceProfileWriter androidx.profileinstaller.DeviceProfileWriter.read():0 -> D
    15:15:boolean androidx.profileinstaller.ProfileInstaller.transcodeAndWrite(android.content.res.AssetManager,java.lang.String,android.content.pm.PackageInfo,java.io.File,java.lang.String,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0 -> D
    15:15:void androidx.profileinstaller.ProfileInstaller.writeProfile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,boolean):0 -> D
    16:16:androidx.profileinstaller.DeviceProfileWriter androidx.profileinstaller.DeviceProfileWriter.read():0:0 -> D
    16:16:boolean androidx.profileinstaller.ProfileInstaller.transcodeAndWrite(android.content.res.AssetManager,java.lang.String,android.content.pm.PackageInfo,java.io.File,java.lang.String,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0 -> D
    16:16:void androidx.profileinstaller.ProfileInstaller.writeProfile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,boolean):0 -> D
    17:17:boolean androidx.profileinstaller.DeviceProfileWriter.requiresMetadata():0:0 -> D
    17:17:androidx.profileinstaller.DeviceProfileWriter androidx.profileinstaller.DeviceProfileWriter.read():0 -> D
    17:17:boolean androidx.profileinstaller.ProfileInstaller.transcodeAndWrite(android.content.res.AssetManager,java.lang.String,android.content.pm.PackageInfo,java.io.File,java.lang.String,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0 -> D
    17:17:void androidx.profileinstaller.ProfileInstaller.writeProfile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,boolean):0 -> D
    18:18:androidx.profileinstaller.DeviceProfileWriter androidx.profileinstaller.DeviceProfileWriter.addMetadata(androidx.profileinstaller.DexProfileData[],byte[]):0:0 -> D
    18:18:androidx.profileinstaller.DeviceProfileWriter androidx.profileinstaller.DeviceProfileWriter.read():0 -> D
    18:18:boolean androidx.profileinstaller.ProfileInstaller.transcodeAndWrite(android.content.res.AssetManager,java.lang.String,android.content.pm.PackageInfo,java.io.File,java.lang.String,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0 -> D
    18:18:void androidx.profileinstaller.ProfileInstaller.writeProfile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,boolean):0 -> D
    19:19:byte[] androidx.profileinstaller.ProfileTranscoder.readHeader(java.io.InputStream,byte[]):0:0 -> D
    19:19:androidx.profileinstaller.DeviceProfileWriter androidx.profileinstaller.DeviceProfileWriter.addMetadata(androidx.profileinstaller.DexProfileData[],byte[]):0 -> D
    19:19:androidx.profileinstaller.DeviceProfileWriter androidx.profileinstaller.DeviceProfileWriter.read():0 -> D
    19:19:boolean androidx.profileinstaller.ProfileInstaller.transcodeAndWrite(android.content.res.AssetManager,java.lang.String,android.content.pm.PackageInfo,java.io.File,java.lang.String,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0 -> D
    19:19:void androidx.profileinstaller.ProfileInstaller.writeProfile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,boolean):0 -> D
    20:20:androidx.profileinstaller.DeviceProfileWriter androidx.profileinstaller.DeviceProfileWriter.addMetadata(androidx.profileinstaller.DexProfileData[],byte[]):0:0 -> D
    20:20:androidx.profileinstaller.DeviceProfileWriter androidx.profileinstaller.DeviceProfileWriter.read():0 -> D
    20:20:boolean androidx.profileinstaller.ProfileInstaller.transcodeAndWrite(android.content.res.AssetManager,java.lang.String,android.content.pm.PackageInfo,java.io.File,java.lang.String,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0 -> D
    20:20:void androidx.profileinstaller.ProfileInstaller.writeProfile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,boolean):0 -> D
    21:21:java.lang.RuntimeException androidx.profileinstaller.Encoding.error(java.lang.String):0:0 -> D
    21:21:byte[] androidx.profileinstaller.ProfileTranscoder.readHeader(java.io.InputStream,byte[]):0 -> D
    21:21:androidx.profileinstaller.DeviceProfileWriter androidx.profileinstaller.DeviceProfileWriter.addMetadata(androidx.profileinstaller.DexProfileData[],byte[]):0 -> D
    21:21:androidx.profileinstaller.DeviceProfileWriter androidx.profileinstaller.DeviceProfileWriter.read():0 -> D
    21:21:boolean androidx.profileinstaller.ProfileInstaller.transcodeAndWrite(android.content.res.AssetManager,java.lang.String,android.content.pm.PackageInfo,java.io.File,java.lang.String,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0 -> D
    21:21:void androidx.profileinstaller.ProfileInstaller.writeProfile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,boolean):0 -> D
    22:22:byte[] androidx.profileinstaller.ProfileTranscoder.readHeader(java.io.InputStream,byte[]):0:0 -> D
    22:22:androidx.profileinstaller.DeviceProfileWriter androidx.profileinstaller.DeviceProfileWriter.addMetadata(androidx.profileinstaller.DexProfileData[],byte[]):0 -> D
    22:22:androidx.profileinstaller.DeviceProfileWriter androidx.profileinstaller.DeviceProfileWriter.read():0 -> D
    22:22:boolean androidx.profileinstaller.ProfileInstaller.transcodeAndWrite(android.content.res.AssetManager,java.lang.String,android.content.pm.PackageInfo,java.io.File,java.lang.String,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0 -> D
    22:22:void androidx.profileinstaller.ProfileInstaller.writeProfile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,boolean):0 -> D
    23:23:androidx.profileinstaller.DeviceProfileWriter androidx.profileinstaller.DeviceProfileWriter.addMetadata(androidx.profileinstaller.DexProfileData[],byte[]):0:0 -> D
    23:23:androidx.profileinstaller.DeviceProfileWriter androidx.profileinstaller.DeviceProfileWriter.read():0 -> D
    23:23:boolean androidx.profileinstaller.ProfileInstaller.transcodeAndWrite(android.content.res.AssetManager,java.lang.String,android.content.pm.PackageInfo,java.io.File,java.lang.String,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0 -> D
    23:23:void androidx.profileinstaller.ProfileInstaller.writeProfile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,boolean):0 -> D
    24:24:androidx.profileinstaller.DeviceProfileWriter androidx.profileinstaller.DeviceProfileWriter.transcodeIfNeeded():0:0 -> D
    24:24:boolean androidx.profileinstaller.ProfileInstaller.transcodeAndWrite(android.content.res.AssetManager,java.lang.String,android.content.pm.PackageInfo,java.io.File,java.lang.String,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0 -> D
    24:24:void androidx.profileinstaller.ProfileInstaller.writeProfile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,boolean):0 -> D
    25:25:void androidx.profileinstaller.DeviceProfileWriter.assertDeviceAllowsProfileInstallerAotWritesCalled():0:0 -> D
    25:25:androidx.profileinstaller.DeviceProfileWriter androidx.profileinstaller.DeviceProfileWriter.transcodeIfNeeded():0 -> D
    25:25:boolean androidx.profileinstaller.ProfileInstaller.transcodeAndWrite(android.content.res.AssetManager,java.lang.String,android.content.pm.PackageInfo,java.io.File,java.lang.String,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0 -> D
    25:25:void androidx.profileinstaller.ProfileInstaller.writeProfile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,boolean):0 -> D
    26:26:androidx.profileinstaller.DeviceProfileWriter androidx.profileinstaller.DeviceProfileWriter.transcodeIfNeeded():0:0 -> D
    26:26:boolean androidx.profileinstaller.ProfileInstaller.transcodeAndWrite(android.content.res.AssetManager,java.lang.String,android.content.pm.PackageInfo,java.io.File,java.lang.String,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0 -> D
    26:26:void androidx.profileinstaller.ProfileInstaller.writeProfile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,boolean):0 -> D
    27:27:void androidx.profileinstaller.ProfileTranscoder.writeHeader(java.io.OutputStream,byte[]):0:0 -> D
    27:27:androidx.profileinstaller.DeviceProfileWriter androidx.profileinstaller.DeviceProfileWriter.transcodeIfNeeded():0 -> D
    27:27:boolean androidx.profileinstaller.ProfileInstaller.transcodeAndWrite(android.content.res.AssetManager,java.lang.String,android.content.pm.PackageInfo,java.io.File,java.lang.String,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0 -> D
    27:27:void androidx.profileinstaller.ProfileInstaller.writeProfile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,boolean):0 -> D
    28:28:androidx.profileinstaller.DeviceProfileWriter androidx.profileinstaller.DeviceProfileWriter.transcodeIfNeeded():0:0 -> D
    28:28:boolean androidx.profileinstaller.ProfileInstaller.transcodeAndWrite(android.content.res.AssetManager,java.lang.String,android.content.pm.PackageInfo,java.io.File,java.lang.String,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0 -> D
    28:28:void androidx.profileinstaller.ProfileInstaller.writeProfile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,boolean):0 -> D
    29:29:void androidx.profileinstaller.DeviceProfileWriter.assertDeviceAllowsProfileInstallerAotWritesCalled():0:0 -> D
    29:29:androidx.profileinstaller.DeviceProfileWriter androidx.profileinstaller.DeviceProfileWriter.transcodeIfNeeded():0 -> D
    29:29:boolean androidx.profileinstaller.ProfileInstaller.transcodeAndWrite(android.content.res.AssetManager,java.lang.String,android.content.pm.PackageInfo,java.io.File,java.lang.String,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0 -> D
    29:29:void androidx.profileinstaller.ProfileInstaller.writeProfile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,boolean):0 -> D
    30:30:boolean androidx.profileinstaller.DeviceProfileWriter.write():0:0 -> D
    30:30:boolean androidx.profileinstaller.ProfileInstaller.transcodeAndWrite(android.content.res.AssetManager,java.lang.String,android.content.pm.PackageInfo,java.io.File,java.lang.String,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0 -> D
    30:30:void androidx.profileinstaller.ProfileInstaller.writeProfile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,boolean):0 -> D
    31:31:void androidx.profileinstaller.DeviceProfileWriter.assertDeviceAllowsProfileInstallerAotWritesCalled():0:0 -> D
    31:31:boolean androidx.profileinstaller.DeviceProfileWriter.write():0 -> D
    31:31:boolean androidx.profileinstaller.ProfileInstaller.transcodeAndWrite(android.content.res.AssetManager,java.lang.String,android.content.pm.PackageInfo,java.io.File,java.lang.String,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0 -> D
    31:31:void androidx.profileinstaller.ProfileInstaller.writeProfile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,boolean):0 -> D
    32:32:boolean androidx.profileinstaller.DeviceProfileWriter.write():0:0 -> D
    32:32:boolean androidx.profileinstaller.ProfileInstaller.transcodeAndWrite(android.content.res.AssetManager,java.lang.String,android.content.pm.PackageInfo,java.io.File,java.lang.String,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0 -> D
    32:32:void androidx.profileinstaller.ProfileInstaller.writeProfile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,boolean):0 -> D
    33:33:void androidx.profileinstaller.Encoding.writeAll(java.io.InputStream,java.io.OutputStream):0:0 -> D
    33:33:boolean androidx.profileinstaller.DeviceProfileWriter.write():0 -> D
    33:33:boolean androidx.profileinstaller.ProfileInstaller.transcodeAndWrite(android.content.res.AssetManager,java.lang.String,android.content.pm.PackageInfo,java.io.File,java.lang.String,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0 -> D
    33:33:void androidx.profileinstaller.ProfileInstaller.writeProfile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,boolean):0 -> D
    34:34:boolean androidx.profileinstaller.DeviceProfileWriter.write():0:0 -> D
    34:34:boolean androidx.profileinstaller.ProfileInstaller.transcodeAndWrite(android.content.res.AssetManager,java.lang.String,android.content.pm.PackageInfo,java.io.File,java.lang.String,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0 -> D
    34:34:void androidx.profileinstaller.ProfileInstaller.writeProfile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,boolean):0 -> D
    35:35:boolean androidx.profileinstaller.ProfileInstaller.transcodeAndWrite(android.content.res.AssetManager,java.lang.String,android.content.pm.PackageInfo,java.io.File,java.lang.String,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0:0 -> D
    35:35:void androidx.profileinstaller.ProfileInstaller.writeProfile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,boolean):0 -> D
    36:36:void androidx.profileinstaller.ProfileInstaller.writeProfile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,boolean):0:0 -> D
    37:37:boolean androidx.profileinstaller.DeviceProfileWriter.write():0:0 -> D
    37:37:boolean androidx.profileinstaller.ProfileInstaller.transcodeAndWrite(android.content.res.AssetManager,java.lang.String,android.content.pm.PackageInfo,java.io.File,java.lang.String,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0 -> D
    37:37:void androidx.profileinstaller.ProfileInstaller.writeProfile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,boolean):0 -> D
    38:38:void androidx.profileinstaller.DeviceProfileWriter.assertDeviceAllowsProfileInstallerAotWritesCalled():0:0 -> D
    38:38:boolean androidx.profileinstaller.DeviceProfileWriter.write():0 -> D
    38:38:boolean androidx.profileinstaller.ProfileInstaller.transcodeAndWrite(android.content.res.AssetManager,java.lang.String,android.content.pm.PackageInfo,java.io.File,java.lang.String,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0 -> D
    38:38:void androidx.profileinstaller.ProfileInstaller.writeProfile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,boolean):0 -> D
    39:39:void androidx.profileinstaller.DeviceProfileWriter.assertDeviceAllowsProfileInstallerAotWritesCalled():0:0 -> D
    39:39:androidx.profileinstaller.DeviceProfileWriter androidx.profileinstaller.DeviceProfileWriter.read():0 -> D
    39:39:boolean androidx.profileinstaller.ProfileInstaller.transcodeAndWrite(android.content.res.AssetManager,java.lang.String,android.content.pm.PackageInfo,java.io.File,java.lang.String,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0 -> D
    39:39:void androidx.profileinstaller.ProfileInstaller.writeProfile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,boolean):0 -> D
    40:40:void androidx.profileinstaller.ProfileInstaller.writeProfile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,boolean):0:0 -> D
    1:1:void androidx.profileinstaller.Encoding.writeUInt(java.io.OutputStream,long,int):0:0 -> E
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/ByteArrayOutputStream;JI)V"}
    1:1:void androidx.profileinstaller.Encoding.writeUInt16(java.io.OutputStream,int):0:0 -> F
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/ByteArrayOutputStream;I)V"}
    boolean androidx.concurrent.futures.AbstractResolvableFuture$AtomicHelper.casListeners(androidx.concurrent.futures.AbstractResolvableFuture,androidx.concurrent.futures.AbstractResolvableFuture$Listener,androidx.concurrent.futures.AbstractResolvableFuture$Listener) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld/h;Ld/d;)Z"}
    boolean androidx.concurrent.futures.AbstractResolvableFuture$AtomicHelper.casValue(androidx.concurrent.futures.AbstractResolvableFuture,java.lang.Object,java.lang.Object) -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld/h;Ljava/lang/Object;Ljava/lang/Object;)Z"}
    boolean androidx.concurrent.futures.AbstractResolvableFuture$AtomicHelper.casWaiters(androidx.concurrent.futures.AbstractResolvableFuture,androidx.concurrent.futures.AbstractResolvableFuture$Waiter,androidx.concurrent.futures.AbstractResolvableFuture$Waiter) -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld/h;Ld/g;Ld/g;)Z"}
    1:1:void kotlin.jvm.internal.Intrinsics.checkNotNullExpressionValue(java.lang.Object,java.lang.String):0:0 -> d
    3:4:void kotlin.jvm.internal.Intrinsics.throwParameterIsNullNPE(java.lang.String):0:0 -> e
    3:4:void kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object,java.lang.String):0 -> e
    5:89:java.lang.String kotlin.jvm.internal.Intrinsics.createParameterIsNullExceptionMessage(java.lang.String):0:0 -> e
    5:89:void kotlin.jvm.internal.Intrinsics.throwParameterIsNullNPE(java.lang.String):0 -> e
    5:89:void kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object,java.lang.String):0 -> e
    90:97:void kotlin.jvm.internal.Intrinsics.throwParameterIsNullNPE(java.lang.String):0:0 -> e
    90:97:void kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object,java.lang.String):0 -> e
    1:1:byte[] androidx.profileinstaller.Encoding.compress(byte[]):0:0 -> f
    17:25:int androidx.profileinstaller.Encoding.utf8Length(java.lang.String):0:0 -> g
    17:25:byte[] androidx.profileinstaller.ProfileTranscoder.createCompressibleBody(androidx.profileinstaller.DexProfileData[],byte[]):0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Lf/d;[B)[B"}
    26:33:byte[] androidx.profileinstaller.ProfileTranscoder.createCompressibleBody(androidx.profileinstaller.DexProfileData[],byte[]):0:0 -> g
    34:50:int androidx.profileinstaller.ProfileTranscoder.getMethodBitmapStorageSize(int):0:0 -> g
    34:50:byte[] androidx.profileinstaller.ProfileTranscoder.createCompressibleBody(androidx.profileinstaller.DexProfileData[],byte[]):0 -> g
    51:79:byte[] androidx.profileinstaller.ProfileTranscoder.createCompressibleBody(androidx.profileinstaller.DexProfileData[],byte[]):0:0 -> g
    80:91:void androidx.profileinstaller.ProfileTranscoder.writeLineData(java.io.OutputStream,androidx.profileinstaller.DexProfileData):0:0 -> g
    80:91:byte[] androidx.profileinstaller.ProfileTranscoder.createCompressibleBody(androidx.profileinstaller.DexProfileData[],byte[]):0 -> g
    92:116:byte[] androidx.profileinstaller.ProfileTranscoder.createCompressibleBody(androidx.profileinstaller.DexProfileData[],byte[]):0:0 -> g
    117:128:void androidx.profileinstaller.ProfileTranscoder.writeLineData(java.io.OutputStream,androidx.profileinstaller.DexProfileData):0:0 -> g
    117:128:byte[] androidx.profileinstaller.ProfileTranscoder.createCompressibleBody(androidx.profileinstaller.DexProfileData[],byte[]):0 -> g
    129:165:byte[] androidx.profileinstaller.ProfileTranscoder.createCompressibleBody(androidx.profileinstaller.DexProfileData[],byte[]):0:0 -> g
    166:170:java.lang.RuntimeException androidx.profileinstaller.Encoding.error(java.lang.String):0:0 -> g
    166:170:byte[] androidx.profileinstaller.ProfileTranscoder.createCompressibleBody(androidx.profileinstaller.DexProfileData[],byte[]):0 -> g
    171:171:byte[] androidx.profileinstaller.ProfileTranscoder.createCompressibleBody(androidx.profileinstaller.DexProfileData[],byte[]):0:0 -> g
    1:1:boolean androidx.profileinstaller.BenchmarkOperation.deleteFilesRecursively(java.io.File):0:0 -> h
    1:24:java.lang.String androidx.profileinstaller.ProfileVersion.dexKeySeparator(byte[]):0:0 -> i
    1:24:java.lang.String androidx.profileinstaller.ProfileTranscoder.generateDexKey(java.lang.String,java.lang.String,byte[]):0 -> i
    25:30:java.lang.String androidx.profileinstaller.ProfileTranscoder.generateDexKey(java.lang.String,java.lang.String,byte[]):0:0 -> i
    31:55:java.lang.String androidx.profileinstaller.ProfileTranscoder.enforceSeparator(java.lang.String,java.lang.String):0:0 -> i
    31:55:java.lang.String androidx.profileinstaller.ProfileTranscoder.generateDexKey(java.lang.String,java.lang.String,byte[]):0 -> i
    56:92:java.lang.String androidx.profileinstaller.ProfileTranscoder.generateDexKey(java.lang.String,java.lang.String,byte[]):0:0 -> i
    93:107:java.lang.String androidx.profileinstaller.ProfileVersion.dexKeySeparator(byte[]):0:0 -> i
    93:107:java.lang.String androidx.profileinstaller.ProfileTranscoder.generateDexKey(java.lang.String,java.lang.String,byte[]):0 -> i
    108:118:java.lang.String androidx.profileinstaller.ProfileTranscoder.generateDexKey(java.lang.String,java.lang.String,byte[]):0:0 -> i
    119:141:java.lang.String androidx.profileinstaller.ProfileTranscoder.enforceSeparator(java.lang.String,java.lang.String):0:0 -> i
    119:141:java.lang.String androidx.profileinstaller.ProfileTranscoder.generateDexKey(java.lang.String,java.lang.String,byte[]):0 -> i
    26:30:java.lang.RuntimeException androidx.profileinstaller.Encoding.error(java.lang.String):0:0 -> j
    26:30:int androidx.profileinstaller.ProfileTranscoder.methodFlagBitmapIndex(int,int,int):0 -> j
    31:32:int androidx.profileinstaller.ProfileTranscoder.methodFlagBitmapIndex(int,int,int):0:0 -> j
    33:39:java.lang.RuntimeException androidx.profileinstaller.Encoding.error(java.lang.String):0:0 -> j
    33:39:int androidx.profileinstaller.ProfileTranscoder.methodFlagBitmapIndex(int,int,int):0 -> j
    40:40:int androidx.profileinstaller.ProfileTranscoder.methodFlagBitmapIndex(int,int,int):0:0 -> j
    1:1:void androidx.profileinstaller.ProfileInstaller.noteProfileWrittenFor(android.content.pm.PackageInfo,java.io.File):0:0 -> k
    void androidx.concurrent.futures.AbstractResolvableFuture$AtomicHelper.putNext(androidx.concurrent.futures.AbstractResolvableFuture$Waiter,androidx.concurrent.futures.AbstractResolvableFuture$Waiter) -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld/g;Ld/g;)V"}
    void androidx.concurrent.futures.AbstractResolvableFuture$AtomicHelper.putThread(androidx.concurrent.futures.AbstractResolvableFuture$Waiter,java.lang.Thread) -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld/g;Ljava/lang/Thread;)V"}
    30:34:java.lang.RuntimeException androidx.profileinstaller.Encoding.error(java.lang.String):0:0 -> n
    30:34:byte[] androidx.profileinstaller.Encoding.read(java.io.InputStream,int):0 -> n
    35:36:byte[] androidx.profileinstaller.Encoding.read(java.io.InputStream,int):0:0 -> n
    1:1:int[] androidx.profileinstaller.ProfileTranscoder.readClasses(java.io.InputStream,int):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/ByteArrayInputStream;I)[I"}
    52:56:java.lang.RuntimeException androidx.profileinstaller.Encoding.error(java.lang.String):0:0 -> p
    52:56:byte[] androidx.profileinstaller.Encoding.readCompressed(java.io.InputStream,int,int):0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/FileInputStream;II)[B"}
    57:79:byte[] androidx.profileinstaller.Encoding.readCompressed(java.io.InputStream,int,int):0:0 -> p
    80:84:java.lang.RuntimeException androidx.profileinstaller.Encoding.error(java.lang.String):0:0 -> p
    80:84:byte[] androidx.profileinstaller.Encoding.readCompressed(java.io.InputStream,int,int):0 -> p
    85:99:byte[] androidx.profileinstaller.Encoding.readCompressed(java.io.InputStream,int,int):0:0 -> p
    100:104:java.lang.RuntimeException androidx.profileinstaller.Encoding.error(java.lang.String):0:0 -> p
    100:104:byte[] androidx.profileinstaller.Encoding.readCompressed(java.io.InputStream,int,int):0 -> p
    105:130:byte[] androidx.profileinstaller.Encoding.readCompressed(java.io.InputStream,int,int):0:0 -> p
    131:135:java.lang.RuntimeException androidx.profileinstaller.Encoding.error(java.lang.String):0:0 -> p
    131:135:byte[] androidx.profileinstaller.Encoding.readCompressed(java.io.InputStream,int,int):0 -> p
    136:141:byte[] androidx.profileinstaller.Encoding.readCompressed(java.io.InputStream,int,int):0:0 -> p
    1:1:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMetadata001(java.io.InputStream,byte[],androidx.profileinstaller.DexProfileData[]):0:0 -> q
    1:1:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMeta(java.io.InputStream,byte[],byte[],androidx.profileinstaller.DexProfileData[]):0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/FileInputStream;[B[B[Lf/d;)[Lf/d;"}
    2:2:int androidx.profileinstaller.Encoding.readUInt8(java.io.InputStream):0:0 -> q
    2:2:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMetadata001(java.io.InputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> q
    2:2:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMeta(java.io.InputStream,byte[],byte[],androidx.profileinstaller.DexProfileData[]):0 -> q
    3:3:long androidx.profileinstaller.Encoding.readUInt32(java.io.InputStream):0:0 -> q
    3:3:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMetadata001(java.io.InputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> q
    3:3:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMeta(java.io.InputStream,byte[],byte[],androidx.profileinstaller.DexProfileData[]):0 -> q
    4:4:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMetadata001(java.io.InputStream,byte[],androidx.profileinstaller.DexProfileData[]):0:0 -> q
    4:4:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMeta(java.io.InputStream,byte[],byte[],androidx.profileinstaller.DexProfileData[]):0 -> q
    5:5:java.lang.RuntimeException androidx.profileinstaller.Encoding.error(java.lang.String):0:0 -> q
    5:5:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMetadata001(java.io.InputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> q
    5:5:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMeta(java.io.InputStream,byte[],byte[],androidx.profileinstaller.DexProfileData[]):0 -> q
    6:6:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMetadata001(java.io.InputStream,byte[],androidx.profileinstaller.DexProfileData[]):0:0 -> q
    6:6:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMeta(java.io.InputStream,byte[],byte[],androidx.profileinstaller.DexProfileData[]):0 -> q
    7:7:java.lang.RuntimeException androidx.profileinstaller.Encoding.error(java.lang.String):0:0 -> q
    7:7:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMetadata001(java.io.InputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> q
    7:7:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMeta(java.io.InputStream,byte[],byte[],androidx.profileinstaller.DexProfileData[]):0 -> q
    8:8:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMetadata001(java.io.InputStream,byte[],androidx.profileinstaller.DexProfileData[]):0:0 -> q
    8:8:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMeta(java.io.InputStream,byte[],byte[],androidx.profileinstaller.DexProfileData[]):0 -> q
    9:9:java.lang.RuntimeException androidx.profileinstaller.Encoding.error(java.lang.String):0:0 -> q
    9:9:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMeta(java.io.InputStream,byte[],byte[],androidx.profileinstaller.DexProfileData[]):0 -> q
    10:10:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMeta(java.io.InputStream,byte[],byte[],androidx.profileinstaller.DexProfileData[]):0:0 -> q
    11:11:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMetadataV002(java.io.InputStream,byte[],androidx.profileinstaller.DexProfileData[]):0:0 -> q
    11:11:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMeta(java.io.InputStream,byte[],byte[],androidx.profileinstaller.DexProfileData[]):0 -> q
    12:12:long androidx.profileinstaller.Encoding.readUInt32(java.io.InputStream):0:0 -> q
    12:12:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMetadataV002(java.io.InputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> q
    12:12:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMeta(java.io.InputStream,byte[],byte[],androidx.profileinstaller.DexProfileData[]):0 -> q
    13:13:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMetadataV002(java.io.InputStream,byte[],androidx.profileinstaller.DexProfileData[]):0:0 -> q
    13:13:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMeta(java.io.InputStream,byte[],byte[],androidx.profileinstaller.DexProfileData[]):0 -> q
    14:14:java.lang.RuntimeException androidx.profileinstaller.Encoding.error(java.lang.String):0:0 -> q
    14:14:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMetadataV002(java.io.InputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> q
    14:14:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMeta(java.io.InputStream,byte[],byte[],androidx.profileinstaller.DexProfileData[]):0 -> q
    15:15:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMetadataV002(java.io.InputStream,byte[],androidx.profileinstaller.DexProfileData[]):0:0 -> q
    15:15:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMeta(java.io.InputStream,byte[],byte[],androidx.profileinstaller.DexProfileData[]):0 -> q
    16:16:java.lang.RuntimeException androidx.profileinstaller.Encoding.error(java.lang.String):0:0 -> q
    16:16:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMeta(java.io.InputStream,byte[],byte[],androidx.profileinstaller.DexProfileData[]):0 -> q
    17:17:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMeta(java.io.InputStream,byte[],byte[],androidx.profileinstaller.DexProfileData[]):0:0 -> q
    31:41:java.lang.String androidx.profileinstaller.Encoding.readString(java.io.InputStream,int):0:0 -> r
    31:41:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMetadataForNBody(java.io.InputStream,int,androidx.profileinstaller.DexProfileData[]):0 -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/ByteArrayInputStream;I[Lf/d;)[Lf/d;"}
    42:73:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMetadataForNBody(java.io.InputStream,int,androidx.profileinstaller.DexProfileData[]):0:0 -> r
    74:80:java.lang.RuntimeException androidx.profileinstaller.Encoding.error(java.lang.String):0:0 -> r
    74:80:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMetadataForNBody(java.io.InputStream,int,androidx.profileinstaller.DexProfileData[]):0 -> r
    81:82:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMetadataForNBody(java.io.InputStream,int,androidx.profileinstaller.DexProfileData[]):0:0 -> r
    83:89:java.lang.RuntimeException androidx.profileinstaller.Encoding.error(java.lang.String):0:0 -> r
    83:89:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMetadataForNBody(java.io.InputStream,int,androidx.profileinstaller.DexProfileData[]):0 -> r
    90:90:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMetadataForNBody(java.io.InputStream,int,androidx.profileinstaller.DexProfileData[]):0:0 -> r
    1:1:java.lang.String androidx.profileinstaller.Encoding.readString(java.io.InputStream,int):0:0 -> s
    1:1:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMetadataV002Body(java.io.InputStream,byte[],int,androidx.profileinstaller.DexProfileData[]):0 -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/ByteArrayInputStream;[BI[Lf/d;)[Lf/d;"}
    2:2:long androidx.profileinstaller.Encoding.readUInt32(java.io.InputStream):0:0 -> s
    2:2:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMetadataV002Body(java.io.InputStream,byte[],int,androidx.profileinstaller.DexProfileData[]):0 -> s
    3:3:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMetadataV002Body(java.io.InputStream,byte[],int,androidx.profileinstaller.DexProfileData[]):0:0 -> s
    4:4:androidx.profileinstaller.DexProfileData androidx.profileinstaller.ProfileTranscoder.findByDexName(androidx.profileinstaller.DexProfileData[],java.lang.String):0:0 -> s
    4:4:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMetadataV002Body(java.io.InputStream,byte[],int,androidx.profileinstaller.DexProfileData[]):0 -> s
    5:5:java.lang.String androidx.profileinstaller.ProfileTranscoder.extractKey(java.lang.String):0:0 -> s
    5:5:androidx.profileinstaller.DexProfileData androidx.profileinstaller.ProfileTranscoder.findByDexName(androidx.profileinstaller.DexProfileData[],java.lang.String):0 -> s
    5:5:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMetadataV002Body(java.io.InputStream,byte[],int,androidx.profileinstaller.DexProfileData[]):0 -> s
    6:6:androidx.profileinstaller.DexProfileData androidx.profileinstaller.ProfileTranscoder.findByDexName(androidx.profileinstaller.DexProfileData[],java.lang.String):0:0 -> s
    6:6:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMetadataV002Body(java.io.InputStream,byte[],int,androidx.profileinstaller.DexProfileData[]):0 -> s
    7:7:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMetadataV002Body(java.io.InputStream,byte[],int,androidx.profileinstaller.DexProfileData[]):0:0 -> s
    8:8:java.lang.RuntimeException androidx.profileinstaller.Encoding.error(java.lang.String):0:0 -> s
    8:8:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMetadataV002Body(java.io.InputStream,byte[],int,androidx.profileinstaller.DexProfileData[]):0 -> s
    9:9:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMetadataV002Body(java.io.InputStream,byte[],int,androidx.profileinstaller.DexProfileData[]):0:0 -> s
    10:10:java.lang.RuntimeException androidx.profileinstaller.Encoding.error(java.lang.String):0:0 -> s
    10:10:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMetadataV002Body(java.io.InputStream,byte[],int,androidx.profileinstaller.DexProfileData[]):0 -> s
    11:11:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMetadataV002Body(java.io.InputStream,byte[],int,androidx.profileinstaller.DexProfileData[]):0:0 -> s
    10:15:int androidx.profileinstaller.Encoding.readUInt8(java.io.InputStream):0:0 -> t
    10:15:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readProfile(java.io.InputStream,byte[],java.lang.String):0 -> t
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/FileInputStream;[BLjava/lang/String;)[Lf/d;"}
    16:25:long androidx.profileinstaller.Encoding.readUInt32(java.io.InputStream):0:0 -> t
    16:25:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readProfile(java.io.InputStream,byte[],java.lang.String):0 -> t
    26:58:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readProfile(java.io.InputStream,byte[],java.lang.String):0:0 -> t
    59:65:java.lang.RuntimeException androidx.profileinstaller.Encoding.error(java.lang.String):0:0 -> t
    59:65:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readProfile(java.io.InputStream,byte[],java.lang.String):0 -> t
    66:66:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readProfile(java.io.InputStream,byte[],java.lang.String):0:0 -> t
    67:73:java.lang.RuntimeException androidx.profileinstaller.Encoding.error(java.lang.String):0:0 -> t
    67:73:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readProfile(java.io.InputStream,byte[],java.lang.String):0 -> t
    74:74:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readProfile(java.io.InputStream,byte[],java.lang.String):0:0 -> t
    1:1:long androidx.profileinstaller.Encoding.readUInt(java.io.InputStream,int):0:0 -> u
    1:1:int androidx.profileinstaller.Encoding.readUInt16(java.io.InputStream):0:0 -> v
    1:1:long androidx.profileinstaller.Encoding.readUInt32(java.io.InputStream):0:0 -> w
    1:1:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readUncompressedBody(java.io.InputStream,java.lang.String,int):0 -> w
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/ByteArrayInputStream;Ljava/lang/String;I)[Lf/d;"}
    2:2:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readUncompressedBody(java.io.InputStream,java.lang.String,int):0:0 -> w
    3:3:java.lang.String androidx.profileinstaller.Encoding.readString(java.io.InputStream,int):0:0 -> w
    3:3:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readUncompressedBody(java.io.InputStream,java.lang.String,int):0 -> w
    4:4:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readUncompressedBody(java.io.InputStream,java.lang.String,int):0:0 -> w
    5:5:void androidx.profileinstaller.ProfileTranscoder.readHotMethodRegion(java.io.InputStream,androidx.profileinstaller.DexProfileData):0:0 -> w
    5:5:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readUncompressedBody(java.io.InputStream,java.lang.String,int):0 -> w
    6:6:void androidx.profileinstaller.ProfileTranscoder.skipInlineCache(java.io.InputStream):0:0 -> w
    6:6:void androidx.profileinstaller.ProfileTranscoder.readHotMethodRegion(java.io.InputStream,androidx.profileinstaller.DexProfileData):0 -> w
    6:6:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readUncompressedBody(java.io.InputStream,java.lang.String,int):0 -> w
    7:7:int androidx.profileinstaller.Encoding.readUInt8(java.io.InputStream):0:0 -> w
    7:7:void androidx.profileinstaller.ProfileTranscoder.skipInlineCache(java.io.InputStream):0 -> w
    7:7:void androidx.profileinstaller.ProfileTranscoder.readHotMethodRegion(java.io.InputStream,androidx.profileinstaller.DexProfileData):0 -> w
    7:7:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readUncompressedBody(java.io.InputStream,java.lang.String,int):0 -> w
    8:8:void androidx.profileinstaller.ProfileTranscoder.skipInlineCache(java.io.InputStream):0:0 -> w
    8:8:void androidx.profileinstaller.ProfileTranscoder.readHotMethodRegion(java.io.InputStream,androidx.profileinstaller.DexProfileData):0 -> w
    8:8:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readUncompressedBody(java.io.InputStream,java.lang.String,int):0 -> w
    9:9:void androidx.profileinstaller.ProfileTranscoder.readHotMethodRegion(java.io.InputStream,androidx.profileinstaller.DexProfileData):0:0 -> w
    9:9:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readUncompressedBody(java.io.InputStream,java.lang.String,int):0 -> w
    10:10:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readUncompressedBody(java.io.InputStream,java.lang.String,int):0:0 -> w
    11:11:void androidx.profileinstaller.ProfileTranscoder.readMethodBitmap(java.io.InputStream,androidx.profileinstaller.DexProfileData):0:0 -> w
    11:11:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readUncompressedBody(java.io.InputStream,java.lang.String,int):0 -> w
    12:12:int androidx.profileinstaller.Encoding.bitsToBytes(int):0:0 -> w
    12:12:void androidx.profileinstaller.ProfileTranscoder.readMethodBitmap(java.io.InputStream,androidx.profileinstaller.DexProfileData):0 -> w
    12:12:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readUncompressedBody(java.io.InputStream,java.lang.String,int):0 -> w
    13:13:void androidx.profileinstaller.ProfileTranscoder.readMethodBitmap(java.io.InputStream,androidx.profileinstaller.DexProfileData):0:0 -> w
    13:13:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readUncompressedBody(java.io.InputStream,java.lang.String,int):0 -> w
    14:14:int androidx.profileinstaller.ProfileTranscoder.readFlagsFromBitmap(java.util.BitSet,int,int):0:0 -> w
    14:14:void androidx.profileinstaller.ProfileTranscoder.readMethodBitmap(java.io.InputStream,androidx.profileinstaller.DexProfileData):0 -> w
    14:14:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readUncompressedBody(java.io.InputStream,java.lang.String,int):0 -> w
    15:15:void androidx.profileinstaller.ProfileTranscoder.readMethodBitmap(java.io.InputStream,androidx.profileinstaller.DexProfileData):0:0 -> w
    15:15:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readUncompressedBody(java.io.InputStream,java.lang.String,int):0 -> w
    16:16:java.lang.RuntimeException androidx.profileinstaller.Encoding.error(java.lang.String):0:0 -> w
    16:16:void androidx.profileinstaller.ProfileTranscoder.readHotMethodRegion(java.io.InputStream,androidx.profileinstaller.DexProfileData):0 -> w
    16:16:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readUncompressedBody(java.io.InputStream,java.lang.String,int):0 -> w
    17:17:void androidx.profileinstaller.ProfileTranscoder.readHotMethodRegion(java.io.InputStream,androidx.profileinstaller.DexProfileData):0:0 -> w
    17:17:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readUncompressedBody(java.io.InputStream,java.lang.String,int):0 -> w
    7:43:java.lang.Throwable kotlin.jvm.internal.Intrinsics.sanitizeStackTrace(java.lang.Throwable,java.lang.String):0:0 -> x
    7:43:java.lang.Throwable kotlin.jvm.internal.Intrinsics.sanitizeStackTrace(java.lang.Throwable):0 -> x
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/NullPointerException;)V"}
    1:1:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0:0 -> y
    1:1:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> y
    1:1:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> y
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/ByteArrayOutputStream;[B[Lf/d;)Z"}
    2:2:androidx.profileinstaller.WritableFileSection androidx.profileinstaller.ProfileTranscoder.writeDexFileSection(androidx.profileinstaller.DexProfileData[]):0:0 -> y
    2:2:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> y
    2:2:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> y
    2:2:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> y
    3:3:void androidx.profileinstaller.Encoding.writeUInt32(java.io.OutputStream,long):0:0 -> y
    3:3:androidx.profileinstaller.WritableFileSection androidx.profileinstaller.ProfileTranscoder.writeDexFileSection(androidx.profileinstaller.DexProfileData[]):0 -> y
    3:3:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> y
    3:3:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> y
    3:3:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> y
    4:4:androidx.profileinstaller.WritableFileSection androidx.profileinstaller.ProfileTranscoder.writeDexFileSection(androidx.profileinstaller.DexProfileData[]):0:0 -> y
    4:4:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> y
    4:4:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> y
    4:4:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> y
    5:5:void androidx.profileinstaller.Encoding.writeUInt32(java.io.OutputStream,long):0:0 -> y
    5:5:androidx.profileinstaller.WritableFileSection androidx.profileinstaller.ProfileTranscoder.writeDexFileSection(androidx.profileinstaller.DexProfileData[]):0 -> y
    5:5:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> y
    5:5:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> y
    5:5:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> y
    6:6:androidx.profileinstaller.WritableFileSection androidx.profileinstaller.ProfileTranscoder.writeDexFileSection(androidx.profileinstaller.DexProfileData[]):0:0 -> y
    6:6:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> y
    6:6:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> y
    6:6:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> y
    7:7:void androidx.profileinstaller.Encoding.writeUInt32(java.io.OutputStream,long):0:0 -> y
    7:7:androidx.profileinstaller.WritableFileSection androidx.profileinstaller.ProfileTranscoder.writeDexFileSection(androidx.profileinstaller.DexProfileData[]):0 -> y
    7:7:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> y
    7:7:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> y
    7:7:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> y
    8:8:androidx.profileinstaller.WritableFileSection androidx.profileinstaller.ProfileTranscoder.writeDexFileSection(androidx.profileinstaller.DexProfileData[]):0:0 -> y
    8:8:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> y
    8:8:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> y
    8:8:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> y
    9:9:int androidx.profileinstaller.Encoding.utf8Length(java.lang.String):0:0 -> y
    9:9:androidx.profileinstaller.WritableFileSection androidx.profileinstaller.ProfileTranscoder.writeDexFileSection(androidx.profileinstaller.DexProfileData[]):0 -> y
    9:9:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> y
    9:9:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> y
    9:9:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> y
    10:10:androidx.profileinstaller.WritableFileSection androidx.profileinstaller.ProfileTranscoder.writeDexFileSection(androidx.profileinstaller.DexProfileData[]):0:0 -> y
    10:10:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> y
    10:10:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> y
    10:10:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> y
    11:11:void androidx.profileinstaller.Encoding.writeString(java.io.OutputStream,java.lang.String):0:0 -> y
    11:11:androidx.profileinstaller.WritableFileSection androidx.profileinstaller.ProfileTranscoder.writeDexFileSection(androidx.profileinstaller.DexProfileData[]):0 -> y
    11:11:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> y
    11:11:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> y
    11:11:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> y
    12:12:androidx.profileinstaller.WritableFileSection androidx.profileinstaller.ProfileTranscoder.writeDexFileSection(androidx.profileinstaller.DexProfileData[]):0:0 -> y
    12:12:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> y
    12:12:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> y
    12:12:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> y
    13:13:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0:0 -> y
    13:13:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> y
    13:13:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> y
    14:14:androidx.profileinstaller.WritableFileSection androidx.profileinstaller.ProfileTranscoder.createCompressibleClassSection(androidx.profileinstaller.DexProfileData[]):0:0 -> y
    14:14:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> y
    14:14:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> y
    14:14:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> y
    15:15:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0:0 -> y
    15:15:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> y
    15:15:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> y
    16:16:androidx.profileinstaller.WritableFileSection androidx.profileinstaller.ProfileTranscoder.createCompressibleMethodsSection(androidx.profileinstaller.DexProfileData[]):0:0 -> y
    16:16:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> y
    16:16:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> y
    16:16:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> y
    17:17:int androidx.profileinstaller.ProfileTranscoder.computeMethodFlags(androidx.profileinstaller.DexProfileData):0:0 -> y
    17:17:androidx.profileinstaller.WritableFileSection androidx.profileinstaller.ProfileTranscoder.createCompressibleMethodsSection(androidx.profileinstaller.DexProfileData[]):0 -> y
    17:17:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> y
    17:17:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> y
    17:17:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> y
    18:18:byte[] androidx.profileinstaller.ProfileTranscoder.createMethodBitmapRegion(androidx.profileinstaller.DexProfileData):0:0 -> y
    18:18:androidx.profileinstaller.WritableFileSection androidx.profileinstaller.ProfileTranscoder.createCompressibleMethodsSection(androidx.profileinstaller.DexProfileData[]):0 -> y
    18:18:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> y
    18:18:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> y
    18:18:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> y
    19:19:byte[] androidx.profileinstaller.ProfileTranscoder.createMethodsWithInlineCaches(androidx.profileinstaller.DexProfileData):0:0 -> y
    19:19:androidx.profileinstaller.WritableFileSection androidx.profileinstaller.ProfileTranscoder.createCompressibleMethodsSection(androidx.profileinstaller.DexProfileData[]):0 -> y
    19:19:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> y
    19:19:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> y
    19:19:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> y
    20:20:androidx.profileinstaller.WritableFileSection androidx.profileinstaller.ProfileTranscoder.createCompressibleMethodsSection(androidx.profileinstaller.DexProfileData[]):0:0 -> y
    20:20:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> y
    20:20:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> y
    20:20:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> y
    21:21:void androidx.profileinstaller.Encoding.writeUInt32(java.io.OutputStream,long):0:0 -> y
    21:21:androidx.profileinstaller.WritableFileSection androidx.profileinstaller.ProfileTranscoder.createCompressibleMethodsSection(androidx.profileinstaller.DexProfileData[]):0 -> y
    21:21:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> y
    21:21:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> y
    21:21:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> y
    22:22:androidx.profileinstaller.WritableFileSection androidx.profileinstaller.ProfileTranscoder.createCompressibleMethodsSection(androidx.profileinstaller.DexProfileData[]):0:0 -> y
    22:22:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> y
    22:22:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> y
    22:22:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> y
    23:23:byte[] androidx.profileinstaller.ProfileTranscoder.createMethodsWithInlineCaches(androidx.profileinstaller.DexProfileData):0:0 -> y
    23:23:androidx.profileinstaller.WritableFileSection androidx.profileinstaller.ProfileTranscoder.createCompressibleMethodsSection(androidx.profileinstaller.DexProfileData[]):0 -> y
    23:23:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> y
    23:23:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> y
    23:23:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> y
    24:24:byte[] androidx.profileinstaller.ProfileTranscoder.createMethodBitmapRegion(androidx.profileinstaller.DexProfileData):0:0 -> y
    24:24:androidx.profileinstaller.WritableFileSection androidx.profileinstaller.ProfileTranscoder.createCompressibleMethodsSection(androidx.profileinstaller.DexProfileData[]):0 -> y
    24:24:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> y
    24:24:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> y
    24:24:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> y
    25:25:androidx.profileinstaller.WritableFileSection androidx.profileinstaller.ProfileTranscoder.createCompressibleMethodsSection(androidx.profileinstaller.DexProfileData[]):0:0 -> y
    25:25:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> y
    25:25:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> y
    25:25:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> y
    26:26:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0:0 -> y
    26:26:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> y
    26:26:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> y
    27:27:void androidx.profileinstaller.Encoding.writeUInt32(java.io.OutputStream,long):0:0 -> y
    27:27:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> y
    27:27:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> y
    27:27:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> y
    28:28:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0:0 -> y
    28:28:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> y
    28:28:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> y
    29:29:long androidx.profileinstaller.FileSectionType.getValue():0:0 -> y
    29:29:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> y
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    29:29:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> y
    29:29:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> y
    30:30:void androidx.profileinstaller.Encoding.writeUInt32(java.io.OutputStream,long):0:0 -> y
    30:30:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> y
    30:30:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> y
    30:30:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> y
    31:31:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0:0 -> y
    31:31:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> y
    31:31:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> y
    32:32:void androidx.profileinstaller.Encoding.writeUInt32(java.io.OutputStream,long):0:0 -> y
    32:32:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> y
    32:32:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> y
    32:32:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> y
    33:33:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0:0 -> y
    33:33:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> y
    33:33:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> y
    34:34:void androidx.profileinstaller.Encoding.writeUInt32(java.io.OutputStream,long):0:0 -> y
    34:34:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> y
    34:34:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> y
    34:34:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> y
    35:35:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0:0 -> y
    35:35:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> y
    35:35:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> y
    36:36:androidx.profileinstaller.WritableFileSection androidx.profileinstaller.ProfileTranscoder.createCompressibleMethodsSection(androidx.profileinstaller.DexProfileData[]):0:0 -> y
    36:36:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> y
    36:36:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> y
    36:36:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> y
    37:37:java.lang.RuntimeException androidx.profileinstaller.Encoding.error(java.lang.String):0:0 -> y
    37:37:androidx.profileinstaller.WritableFileSection androidx.profileinstaller.ProfileTranscoder.createCompressibleMethodsSection(androidx.profileinstaller.DexProfileData[]):0 -> y
    37:37:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> y
    37:37:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> y
    37:37:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> y
    38:38:androidx.profileinstaller.WritableFileSection androidx.profileinstaller.ProfileTranscoder.createCompressibleMethodsSection(androidx.profileinstaller.DexProfileData[]):0:0 -> y
    38:38:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> y
    38:38:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> y
    38:38:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> y
    39:39:androidx.profileinstaller.WritableFileSection androidx.profileinstaller.ProfileTranscoder.createCompressibleClassSection(androidx.profileinstaller.DexProfileData[]):0:0 -> y
    39:39:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> y
    39:39:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> y
    39:39:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> y
    40:40:java.lang.RuntimeException androidx.profileinstaller.Encoding.error(java.lang.String):0:0 -> y
    40:40:androidx.profileinstaller.WritableFileSection androidx.profileinstaller.ProfileTranscoder.createCompressibleClassSection(androidx.profileinstaller.DexProfileData[]):0 -> y
    40:40:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> y
    40:40:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> y
    40:40:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> y
    41:41:androidx.profileinstaller.WritableFileSection androidx.profileinstaller.ProfileTranscoder.createCompressibleClassSection(androidx.profileinstaller.DexProfileData[]):0:0 -> y
    41:41:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> y
    41:41:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> y
    41:41:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> y
    42:42:androidx.profileinstaller.WritableFileSection androidx.profileinstaller.ProfileTranscoder.writeDexFileSection(androidx.profileinstaller.DexProfileData[]):0:0 -> y
    42:42:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> y
    42:42:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> y
    42:42:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> y
    43:43:java.lang.RuntimeException androidx.profileinstaller.Encoding.error(java.lang.String):0:0 -> y
    43:43:androidx.profileinstaller.WritableFileSection androidx.profileinstaller.ProfileTranscoder.writeDexFileSection(androidx.profileinstaller.DexProfileData[]):0 -> y
    43:43:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> y
    43:43:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> y
    43:43:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> y
    44:44:androidx.profileinstaller.WritableFileSection androidx.profileinstaller.ProfileTranscoder.writeDexFileSection(androidx.profileinstaller.DexProfileData[]):0:0 -> y
    44:44:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> y
    44:44:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> y
    44:44:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> y
    45:45:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0:0 -> y
    46:46:void androidx.profileinstaller.ProfileTranscoder.writeProfileForP(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0:0 -> y
    46:46:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> y
    47:47:void androidx.profileinstaller.Encoding.writeUInt8(java.io.OutputStream,int):0:0 -> y
    47:47:void androidx.profileinstaller.ProfileTranscoder.writeProfileForP(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> y
    47:47:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> y
    48:48:void androidx.profileinstaller.Encoding.writeCompressed(java.io.OutputStream,byte[]):0:0 -> y
    48:48:void androidx.profileinstaller.ProfileTranscoder.writeProfileForP(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> y
    48:48:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> y
    49:49:void androidx.profileinstaller.Encoding.writeUInt32(java.io.OutputStream,long):0:0 -> y
    49:49:void androidx.profileinstaller.Encoding.writeCompressed(java.io.OutputStream,byte[]):0 -> y
    49:49:void androidx.profileinstaller.ProfileTranscoder.writeProfileForP(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> y
    49:49:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> y
    50:50:void androidx.profileinstaller.Encoding.writeCompressed(java.io.OutputStream,byte[]):0:0 -> y
    50:50:void androidx.profileinstaller.ProfileTranscoder.writeProfileForP(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> y
    50:50:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> y
    51:51:void androidx.profileinstaller.Encoding.writeUInt32(java.io.OutputStream,long):0:0 -> y
    51:51:void androidx.profileinstaller.Encoding.writeCompressed(java.io.OutputStream,byte[]):0 -> y
    51:51:void androidx.profileinstaller.ProfileTranscoder.writeProfileForP(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> y
    51:51:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> y
    52:52:void androidx.profileinstaller.Encoding.writeCompressed(java.io.OutputStream,byte[]):0:0 -> y
    52:52:void androidx.profileinstaller.ProfileTranscoder.writeProfileForP(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> y
    52:52:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> y
    53:53:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0:0 -> y
    54:54:void androidx.profileinstaller.ProfileTranscoder.writeProfileForO(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0:0 -> y
    54:54:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> y
    55:55:void androidx.profileinstaller.Encoding.writeUInt8(java.io.OutputStream,int):0:0 -> y
    55:55:void androidx.profileinstaller.ProfileTranscoder.writeProfileForO(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> y
    55:55:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> y
    56:56:void androidx.profileinstaller.ProfileTranscoder.writeProfileForO(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0:0 -> y
    56:56:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> y
    57:57:int androidx.profileinstaller.Encoding.utf8Length(java.lang.String):0:0 -> y
    57:57:void androidx.profileinstaller.ProfileTranscoder.writeProfileForO(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> y
    57:57:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> y
    58:58:void androidx.profileinstaller.ProfileTranscoder.writeProfileForO(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0:0 -> y
    58:58:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> y
    59:59:void androidx.profileinstaller.Encoding.writeUInt32(java.io.OutputStream,long):0:0 -> y
    59:59:void androidx.profileinstaller.ProfileTranscoder.writeProfileForO(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> y
    59:59:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> y
    60:60:void androidx.profileinstaller.Encoding.writeString(java.io.OutputStream,java.lang.String):0:0 -> y
    60:60:void androidx.profileinstaller.ProfileTranscoder.writeProfileForO(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> y
    60:60:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> y
    61:61:void androidx.profileinstaller.ProfileTranscoder.writeProfileForO(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0:0 -> y
    61:61:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> y
    62:62:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0:0 -> y
    63:63:void androidx.profileinstaller.ProfileTranscoder.writeProfileForO_MR1(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0:0 -> y
    63:63:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> y
    64:64:void androidx.profileinstaller.Encoding.writeUInt8(java.io.OutputStream,int):0:0 -> y
    64:64:void androidx.profileinstaller.ProfileTranscoder.writeProfileForO_MR1(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> y
    64:64:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> y
    65:65:void androidx.profileinstaller.Encoding.writeCompressed(java.io.OutputStream,byte[]):0:0 -> y
    65:65:void androidx.profileinstaller.ProfileTranscoder.writeProfileForO_MR1(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> y
    65:65:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> y
    66:66:void androidx.profileinstaller.Encoding.writeUInt32(java.io.OutputStream,long):0:0 -> y
    66:66:void androidx.profileinstaller.Encoding.writeCompressed(java.io.OutputStream,byte[]):0 -> y
    66:66:void androidx.profileinstaller.ProfileTranscoder.writeProfileForO_MR1(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> y
    66:66:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> y
    67:67:void androidx.profileinstaller.Encoding.writeCompressed(java.io.OutputStream,byte[]):0:0 -> y
    67:67:void androidx.profileinstaller.ProfileTranscoder.writeProfileForO_MR1(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> y
    67:67:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> y
    68:68:void androidx.profileinstaller.Encoding.writeUInt32(java.io.OutputStream,long):0:0 -> y
    68:68:void androidx.profileinstaller.Encoding.writeCompressed(java.io.OutputStream,byte[]):0 -> y
    68:68:void androidx.profileinstaller.ProfileTranscoder.writeProfileForO_MR1(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> y
    68:68:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> y
    69:69:void androidx.profileinstaller.Encoding.writeCompressed(java.io.OutputStream,byte[]):0:0 -> y
    69:69:void androidx.profileinstaller.ProfileTranscoder.writeProfileForO_MR1(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> y
    69:69:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> y
    70:70:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0:0 -> y
    71:71:void androidx.profileinstaller.ProfileTranscoder.writeProfileForN(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0:0 -> y
    71:71:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> y
    72:72:int androidx.profileinstaller.Encoding.utf8Length(java.lang.String):0:0 -> y
    72:72:void androidx.profileinstaller.ProfileTranscoder.writeProfileForN(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> y
    72:72:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> y
    73:73:void androidx.profileinstaller.ProfileTranscoder.writeProfileForN(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0:0 -> y
    73:73:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> y
    74:74:void androidx.profileinstaller.Encoding.writeUInt32(java.io.OutputStream,long):0:0 -> y
    74:74:void androidx.profileinstaller.ProfileTranscoder.writeProfileForN(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> y
    74:74:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> y
    75:75:void androidx.profileinstaller.Encoding.writeString(java.io.OutputStream,java.lang.String):0:0 -> y
    75:75:void androidx.profileinstaller.ProfileTranscoder.writeProfileForN(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> y
    75:75:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> y
    76:76:void androidx.profileinstaller.ProfileTranscoder.writeProfileForN(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0:0 -> y
    76:76:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> y
    1:1:void androidx.profileinstaller.ProfileTranscoder.writeClasses(java.io.OutputStream,androidx.profileinstaller.DexProfileData):0:0 -> z
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/ByteArrayOutputStream;Lf/d;)V"}
androidx.concurrent.futures.AbstractResolvableFuture$Cancellation -> d.b:
    java.lang.Throwable cause -> a
    androidx.concurrent.futures.AbstractResolvableFuture$Cancellation CAUSELESS_INTERRUPTED -> b
    androidx.concurrent.futures.AbstractResolvableFuture$Cancellation CAUSELESS_CANCELLED -> c
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(boolean,java.lang.Throwable):0:0 -> <init>
androidx.concurrent.futures.AbstractResolvableFuture$Failure -> d.c:
androidx.concurrent.futures.AbstractResolvableFuture$Listener -> d.d:
    androidx.concurrent.futures.AbstractResolvableFuture$Listener next -> a
    androidx.concurrent.futures.AbstractResolvableFuture$Listener TOMBSTONE -> b
    1:1:void <clinit>():0:0 -> <clinit>
androidx.concurrent.futures.AbstractResolvableFuture$SafeAtomicHelper -> d.e:
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater waiterThreadUpdater -> r
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater waiterNextUpdater -> s
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater waitersUpdater -> t
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater listenersUpdater -> u
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater valueUpdater -> v
    1:1:void <init>(java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.util.concurrent.atomic.AtomicReferenceFieldUpdater):0:0 -> <init>
    1:20:boolean casListeners(androidx.concurrent.futures.AbstractResolvableFuture,androidx.concurrent.futures.AbstractResolvableFuture$Listener,androidx.concurrent.futures.AbstractResolvableFuture$Listener):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld/h;Ld/d;)Z"}
    1:1:boolean casValue(androidx.concurrent.futures.AbstractResolvableFuture,java.lang.Object,java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld/h;Ljava/lang/Object;Ljava/lang/Object;)Z"}
    1:1:boolean casWaiters(androidx.concurrent.futures.AbstractResolvableFuture,androidx.concurrent.futures.AbstractResolvableFuture$Waiter,androidx.concurrent.futures.AbstractResolvableFuture$Waiter):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld/h;Ld/g;Ld/g;)Z"}
    1:1:void putNext(androidx.concurrent.futures.AbstractResolvableFuture$Waiter,androidx.concurrent.futures.AbstractResolvableFuture$Waiter):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld/g;Ld/g;)V"}
    1:1:void putThread(androidx.concurrent.futures.AbstractResolvableFuture$Waiter,java.lang.Thread):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld/g;Ljava/lang/Thread;)V"}
androidx.concurrent.futures.AbstractResolvableFuture$SynchronizedHelper -> d.f:
    1:1:void <init>():0:0 -> <init>
    1:18:boolean casListeners(androidx.concurrent.futures.AbstractResolvableFuture,androidx.concurrent.futures.AbstractResolvableFuture$Listener,androidx.concurrent.futures.AbstractResolvableFuture$Listener):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld/h;Ld/d;)Z"}
    1:1:boolean casValue(androidx.concurrent.futures.AbstractResolvableFuture,java.lang.Object,java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld/h;Ljava/lang/Object;Ljava/lang/Object;)Z"}
    1:1:boolean casWaiters(androidx.concurrent.futures.AbstractResolvableFuture,androidx.concurrent.futures.AbstractResolvableFuture$Waiter,androidx.concurrent.futures.AbstractResolvableFuture$Waiter):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld/h;Ld/g;Ld/g;)Z"}
    1:1:void putNext(androidx.concurrent.futures.AbstractResolvableFuture$Waiter,androidx.concurrent.futures.AbstractResolvableFuture$Waiter):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld/g;Ld/g;)V"}
    1:1:void putThread(androidx.concurrent.futures.AbstractResolvableFuture$Waiter,java.lang.Thread):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld/g;Ljava/lang/Thread;)V"}
androidx.concurrent.futures.AbstractResolvableFuture$Waiter -> d.g:
    java.lang.Thread thread -> a
    androidx.concurrent.futures.AbstractResolvableFuture$Waiter next -> b
    androidx.concurrent.futures.AbstractResolvableFuture$Waiter TOMBSTONE -> c
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    void <init>(boolean) -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)V"}
androidx.concurrent.futures.ResolvableFuture -> d.i:
androidx.core.app.RemoteActionCompat -> androidx.core.app.RemoteActionCompat:
    androidx.core.graphics.drawable.IconCompat mIcon -> a
    java.lang.CharSequence mTitle -> b
    java.lang.CharSequence mContentDescription -> c
    android.app.PendingIntent mActionIntent -> d
    boolean mEnabled -> e
    boolean mShouldShowIcon -> f
androidx.core.app.RemoteActionCompatParcelizer -> androidx.core.app.RemoteActionCompatParcelizer:
    9:15:androidx.versionedparcelable.VersionedParcelable androidx.versionedparcelable.VersionedParcel.readVersionedParcelable(androidx.versionedparcelable.VersionedParcelable,int):0:0 -> read
    9:15:androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel):0 -> read
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li/b;)Landroidx/core/app/RemoteActionCompat;"}
    16:19:androidx.versionedparcelable.VersionedParcelable androidx.versionedparcelable.VersionedParcel.readVersionedParcelable(androidx.versionedparcelable.VersionedParcelable,int):0:0 -> read
    16:19:androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel):0 -> read
    20:26:androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel):0:0 -> read
    27:36:java.lang.CharSequence androidx.versionedparcelable.VersionedParcel.readCharSequence(java.lang.CharSequence,int):0:0 -> read
    27:36:androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel):0 -> read
    37:46:java.lang.CharSequence androidx.versionedparcelable.VersionedParcelParcel.readCharSequence():0:0 -> read
    37:46:java.lang.CharSequence androidx.versionedparcelable.VersionedParcel.readCharSequence(java.lang.CharSequence,int):0 -> read
    37:46:androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel):0 -> read
    47:51:androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel):0:0 -> read
    52:61:java.lang.CharSequence androidx.versionedparcelable.VersionedParcel.readCharSequence(java.lang.CharSequence,int):0:0 -> read
    52:61:androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel):0 -> read
    62:71:java.lang.CharSequence androidx.versionedparcelable.VersionedParcelParcel.readCharSequence():0:0 -> read
    62:71:java.lang.CharSequence androidx.versionedparcelable.VersionedParcel.readCharSequence(java.lang.CharSequence,int):0 -> read
    62:71:androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel):0 -> read
    72:87:androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel):0:0 -> read
    88:98:boolean androidx.versionedparcelable.VersionedParcel.readBoolean(boolean,int):0:0 -> read
    88:98:androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel):0 -> read
    99:109:boolean androidx.versionedparcelable.VersionedParcelParcel.readBoolean():0:0 -> read
    99:109:boolean androidx.versionedparcelable.VersionedParcel.readBoolean(boolean,int):0 -> read
    99:109:androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel):0 -> read
    110:114:androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel):0:0 -> read
    115:123:boolean androidx.versionedparcelable.VersionedParcel.readBoolean(boolean,int):0:0 -> read
    115:123:androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel):0 -> read
    124:134:boolean androidx.versionedparcelable.VersionedParcelParcel.readBoolean():0:0 -> read
    124:134:boolean androidx.versionedparcelable.VersionedParcel.readBoolean(boolean,int):0 -> read
    124:134:androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel):0 -> read
    135:137:androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel):0:0 -> read
    7:12:void androidx.versionedparcelable.VersionedParcel.writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable,int):0:0 -> write
    7:12:void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/app/RemoteActionCompat;Li/b;)V"}
    13:15:void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel):0:0 -> write
    16:21:void androidx.versionedparcelable.VersionedParcel.writeCharSequence(java.lang.CharSequence,int):0:0 -> write
    16:21:void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
    22:27:void androidx.versionedparcelable.VersionedParcelParcel.writeCharSequence(java.lang.CharSequence):0:0 -> write
    22:27:void androidx.versionedparcelable.VersionedParcel.writeCharSequence(java.lang.CharSequence,int):0 -> write
    22:27:void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
    28:30:void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel):0:0 -> write
    31:33:void androidx.versionedparcelable.VersionedParcel.writeCharSequence(java.lang.CharSequence,int):0:0 -> write
    31:33:void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
    34:36:void androidx.versionedparcelable.VersionedParcelParcel.writeCharSequence(java.lang.CharSequence):0:0 -> write
    34:36:void androidx.versionedparcelable.VersionedParcel.writeCharSequence(java.lang.CharSequence,int):0 -> write
    34:36:void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
    37:39:void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel):0:0 -> write
    40:42:void androidx.versionedparcelable.VersionedParcel.writeParcelable(android.os.Parcelable,int):0:0 -> write
    40:42:void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
    43:45:void androidx.versionedparcelable.VersionedParcelParcel.writeParcelable(android.os.Parcelable):0:0 -> write
    43:45:void androidx.versionedparcelable.VersionedParcel.writeParcelable(android.os.Parcelable,int):0 -> write
    43:45:void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
    46:48:void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel):0:0 -> write
    49:51:void androidx.versionedparcelable.VersionedParcel.writeBoolean(boolean,int):0:0 -> write
    49:51:void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
    52:54:void androidx.versionedparcelable.VersionedParcelParcel.writeBoolean(boolean):0:0 -> write
    52:54:void androidx.versionedparcelable.VersionedParcel.writeBoolean(boolean,int):0 -> write
    52:54:void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
    55:57:void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel):0:0 -> write
    58:60:void androidx.versionedparcelable.VersionedParcel.writeBoolean(boolean,int):0:0 -> write
    58:60:void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
    61:64:void androidx.versionedparcelable.VersionedParcelParcel.writeBoolean(boolean):0:0 -> write
    61:64:void androidx.versionedparcelable.VersionedParcel.writeBoolean(boolean,int):0 -> write
    61:64:void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
androidx.core.graphics.drawable.IconCompat -> androidx.core.graphics.drawable.IconCompat:
    int mType -> a
    java.lang.Object mObj1 -> b
    byte[] mData -> c
    android.os.Parcelable mParcelable -> d
    int mInt1 -> e
    int mInt2 -> f
    android.content.res.ColorStateList mTintList -> g
    android.graphics.PorterDuff$Mode mTintMode -> h
    java.lang.String mTintModeStr -> i
    java.lang.String mString1 -> j
    android.graphics.PorterDuff$Mode DEFAULT_TINT_MODE -> k
    108:124:int getResId():0:0 -> toString
    108:124:java.lang.String toString():0 -> toString
    125:171:int androidx.core.graphics.drawable.IconCompat$Api23Impl.getResId(java.lang.Object):0:0 -> toString
    125:171:int getResId():0 -> toString
    125:171:java.lang.String toString():0 -> toString
    172:173:int getResId():0:0 -> toString
    172:173:java.lang.String toString():0 -> toString
    174:189:java.lang.String toString():0:0 -> toString
    190:211:int getResId():0:0 -> toString
    190:211:java.lang.String toString():0 -> toString
    212:282:java.lang.String toString():0:0 -> toString
androidx.core.graphics.drawable.IconCompat$Api28Impl -> e.a:
    1:1:int getResId(java.lang.Object):0:0 -> a
    1:1:java.lang.String getResPackage(java.lang.Object):0:0 -> b
    1:1:int getType(java.lang.Object):0:0 -> c
    1:1:android.net.Uri getUri(java.lang.Object):0:0 -> d
androidx.core.graphics.drawable.IconCompatParcelizer -> androidx.core.graphics.drawable.IconCompatParcelizer:
    18:27:byte[] androidx.versionedparcelable.VersionedParcel.readByteArray(byte[],int):0:0 -> read
    18:27:androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel):0 -> read
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li/b;)Landroidx/core/graphics/drawable/IconCompat;"}
    28:43:byte[] androidx.versionedparcelable.VersionedParcelParcel.readByteArray():0:0 -> read
    28:43:byte[] androidx.versionedparcelable.VersionedParcel.readByteArray(byte[],int):0 -> read
    28:43:androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel):0 -> read
    44:86:androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel):0:0 -> read
    87:96:java.lang.String androidx.versionedparcelable.VersionedParcel.readString(java.lang.String,int):0:0 -> read
    87:96:androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel):0 -> read
    97:102:java.lang.String androidx.versionedparcelable.VersionedParcelParcel.readString():0:0 -> read
    97:102:java.lang.String androidx.versionedparcelable.VersionedParcel.readString(java.lang.String,int):0 -> read
    97:102:androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel):0 -> read
    103:108:androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel):0:0 -> read
    109:117:java.lang.String androidx.versionedparcelable.VersionedParcel.readString(java.lang.String,int):0:0 -> read
    109:117:androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel):0 -> read
    118:123:java.lang.String androidx.versionedparcelable.VersionedParcelParcel.readString():0:0 -> read
    118:123:java.lang.String androidx.versionedparcelable.VersionedParcel.readString(java.lang.String,int):0 -> read
    118:123:androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel):0 -> read
    124:125:androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel):0:0 -> read
    126:214:void androidx.core.graphics.drawable.IconCompat.onPostParceling():0:0 -> read
    126:214:androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel):0 -> read
    4:5:void androidx.core.graphics.drawable.IconCompat.onPreParceling(boolean):0:0 -> write
    4:5:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/graphics/drawable/IconCompat;Li/b;)V"}
    6:64:void androidx.core.graphics.drawable.IconCompat.onPreParceling(boolean):0:0 -> write
    6:64:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
    65:70:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel):0:0 -> write
    71:76:void androidx.versionedparcelable.VersionedParcel.writeInt(int,int):0:0 -> write
    71:76:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
    77:81:void androidx.versionedparcelable.VersionedParcelParcel.writeInt(int):0:0 -> write
    77:81:void androidx.versionedparcelable.VersionedParcel.writeInt(int,int):0 -> write
    77:81:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
    82:86:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel):0:0 -> write
    87:92:void androidx.versionedparcelable.VersionedParcel.writeByteArray(byte[],int):0:0 -> write
    87:92:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
    93:101:void androidx.versionedparcelable.VersionedParcelParcel.writeByteArray(byte[]):0:0 -> write
    93:101:void androidx.versionedparcelable.VersionedParcel.writeByteArray(byte[],int):0 -> write
    93:101:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
    102:107:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel):0:0 -> write
    108:113:void androidx.versionedparcelable.VersionedParcel.writeParcelable(android.os.Parcelable,int):0:0 -> write
    108:113:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
    114:118:void androidx.versionedparcelable.VersionedParcelParcel.writeParcelable(android.os.Parcelable):0:0 -> write
    114:118:void androidx.versionedparcelable.VersionedParcel.writeParcelable(android.os.Parcelable,int):0 -> write
    114:118:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
    119:123:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel):0:0 -> write
    124:129:void androidx.versionedparcelable.VersionedParcel.writeInt(int,int):0:0 -> write
    124:129:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
    130:134:void androidx.versionedparcelable.VersionedParcelParcel.writeInt(int):0:0 -> write
    130:134:void androidx.versionedparcelable.VersionedParcel.writeInt(int,int):0 -> write
    130:134:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
    135:139:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel):0:0 -> write
    140:145:void androidx.versionedparcelable.VersionedParcel.writeInt(int,int):0:0 -> write
    140:145:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
    146:150:void androidx.versionedparcelable.VersionedParcelParcel.writeInt(int):0:0 -> write
    146:150:void androidx.versionedparcelable.VersionedParcel.writeInt(int,int):0 -> write
    146:150:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
    151:155:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel):0:0 -> write
    156:161:void androidx.versionedparcelable.VersionedParcel.writeParcelable(android.os.Parcelable,int):0:0 -> write
    156:161:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
    162:166:void androidx.versionedparcelable.VersionedParcelParcel.writeParcelable(android.os.Parcelable):0:0 -> write
    162:166:void androidx.versionedparcelable.VersionedParcel.writeParcelable(android.os.Parcelable,int):0 -> write
    162:166:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
    167:171:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel):0:0 -> write
    172:177:void androidx.versionedparcelable.VersionedParcel.writeString(java.lang.String,int):0:0 -> write
    172:177:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
    178:182:void androidx.versionedparcelable.VersionedParcelParcel.writeString(java.lang.String):0:0 -> write
    178:182:void androidx.versionedparcelable.VersionedParcel.writeString(java.lang.String,int):0 -> write
    178:182:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
    183:188:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel):0:0 -> write
    189:193:void androidx.versionedparcelable.VersionedParcel.writeString(java.lang.String,int):0:0 -> write
    189:193:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
    194:200:void androidx.versionedparcelable.VersionedParcelParcel.writeString(java.lang.String):0:0 -> write
    194:200:void androidx.versionedparcelable.VersionedParcel.writeString(java.lang.String,int):0 -> write
    194:200:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
androidx.lifecycle.EmptyActivityLifecycleCallbacks -> androidx.lifecycle.a:
androidx.lifecycle.Lifecycle -> androidx.lifecycle.f:
androidx.lifecycle.Lifecycle$Event -> androidx.lifecycle.d:
androidx.lifecycle.Lifecycle$Event$Companion -> androidx.lifecycle.b:
androidx.lifecycle.Lifecycle$Event$WhenMappings -> androidx.lifecycle.c:
    int[] $EnumSwitchMapping$0 -> a
androidx.lifecycle.Lifecycle$State -> androidx.lifecycle.e:
    androidx.lifecycle.Lifecycle$State DESTROYED -> a
    androidx.lifecycle.Lifecycle$State INITIALIZED -> b
    androidx.lifecycle.Lifecycle$State CREATED -> c
    androidx.lifecycle.Lifecycle$State STARTED -> d
    androidx.lifecycle.Lifecycle$State RESUMED -> e
    androidx.lifecycle.Lifecycle$State[] $VALUES -> f
androidx.lifecycle.LifecycleDispatcher -> androidx.lifecycle.h:
    java.util.concurrent.atomic.AtomicBoolean initialized -> a
androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback -> androidx.lifecycle.g:
    8:18:void androidx.lifecycle.ReportFragment$Companion.injectIfNeededIn(android.app.Activity):0:0 -> onActivityCreated
    8:18:void onActivityCreated(android.app.Activity,android.os.Bundle):0 -> onActivityCreated
    19:26:void androidx.lifecycle.ReportFragment$LifecycleCallbacks$Companion.registerIn(android.app.Activity):0:0 -> onActivityCreated
    19:26:void androidx.lifecycle.ReportFragment$Companion.injectIfNeededIn(android.app.Activity):0 -> onActivityCreated
    19:26:void onActivityCreated(android.app.Activity,android.os.Bundle):0 -> onActivityCreated
    27:58:void androidx.lifecycle.ReportFragment$Companion.injectIfNeededIn(android.app.Activity):0:0 -> onActivityCreated
    27:58:void onActivityCreated(android.app.Activity,android.os.Bundle):0 -> onActivityCreated
androidx.lifecycle.LifecycleOwner -> androidx.lifecycle.i:
androidx.lifecycle.LifecycleRegistry -> androidx.lifecycle.k:
    boolean enforceMainThread -> a
    androidx.arch.core.internal.FastSafeIterableMap observerMap -> b
    androidx.lifecycle.Lifecycle$State state -> c
    java.lang.ref.WeakReference lifecycleOwner -> d
    boolean handlingEvent -> e
    kotlinx.coroutines.flow.MutableStateFlow _currentStateFlow -> f
    6:34:void <init>(androidx.lifecycle.LifecycleOwner,boolean):0:0 -> <init>
    6:34:void <init>(androidx.lifecycle.LifecycleOwner):0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/i;)V"}
    35:39:kotlinx.coroutines.flow.MutableStateFlow kotlinx.coroutines.flow.StateFlowKt.MutableStateFlow(java.lang.Object):0:0 -> <init>
    35:39:void <init>(androidx.lifecycle.LifecycleOwner,boolean):0 -> <init>
    35:39:void <init>(androidx.lifecycle.LifecycleOwner):0 -> <init>
    40:42:void <init>(androidx.lifecycle.LifecycleOwner,boolean):0:0 -> <init>
    40:42:void <init>(androidx.lifecycle.LifecycleOwner):0 -> <init>
    6:15:void enforceMainThreadIfNeeded(java.lang.String):0:0 -> a
    6:15:void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event):0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/d;)V"}
    16:17:boolean androidx.arch.core.executor.ArchTaskExecutor.isMainThread():0:0 -> a
    16:17:void enforceMainThreadIfNeeded(java.lang.String):0 -> a
    16:17:void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event):0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(2)"]}
    18:20:boolean androidx.arch.core.executor.ArchTaskExecutor.isMainThread():0:0 -> a
    18:20:void enforceMainThreadIfNeeded(java.lang.String):0 -> a
    18:20:void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event):0 -> a
    21:42:boolean androidx.arch.core.executor.DefaultTaskExecutor.isMainThread():0:0 -> a
    21:42:boolean androidx.arch.core.executor.ArchTaskExecutor.isMainThread():0 -> a
    21:42:void enforceMainThreadIfNeeded(java.lang.String):0 -> a
    21:42:void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event):0 -> a
    43:52:void enforceMainThreadIfNeeded(java.lang.String):0:0 -> a
    43:52:void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event):0 -> a
    53:97:androidx.lifecycle.Lifecycle$State androidx.lifecycle.Lifecycle$Event.getTargetState():0:0 -> a
    53:97:void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event):0 -> a
    98:125:void moveToState(androidx.lifecycle.Lifecycle$State):0:0 -> a
    98:125:void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event):0 -> a
    126:135:void sync():0:0 -> a
    126:135:void moveToState(androidx.lifecycle.Lifecycle$State):0 -> a
    126:135:void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event):0 -> a
    136:140:boolean isSynced():0:0 -> a
    136:140:void sync():0 -> a
    136:140:void moveToState(androidx.lifecycle.Lifecycle$State):0 -> a
    136:140:void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event):0 -> a
    141:142:void sync():0:0 -> a
    141:142:void moveToState(androidx.lifecycle.Lifecycle$State):0 -> a
    141:142:void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event):0 -> a
    143:144:androidx.lifecycle.Lifecycle$State getCurrentState():0:0 -> a
    143:144:void sync():0 -> a
    143:144:void moveToState(androidx.lifecycle.Lifecycle$State):0 -> a
    143:144:void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event):0 -> a
    145:149:void sync():0:0 -> a
    145:149:void moveToState(androidx.lifecycle.Lifecycle$State):0 -> a
    145:149:void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event):0 -> a
    150:151:void kotlinx.coroutines.flow.StateFlowImpl.setValue(java.lang.Object):0:0 -> a
    150:151:void sync():0 -> a
    150:151:void moveToState(androidx.lifecycle.Lifecycle$State):0 -> a
    150:151:void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event):0 -> a
    152:162:boolean kotlinx.coroutines.flow.StateFlowImpl.updateState(java.lang.Object,java.lang.Object):0:0 -> a
    152:162:void kotlinx.coroutines.flow.StateFlowImpl.setValue(java.lang.Object):0 -> a
    152:162:void sync():0 -> a
    152:162:void moveToState(androidx.lifecycle.Lifecycle$State):0 -> a
    152:162:void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event):0 -> a
    163:169:boolean kotlin.jvm.internal.Intrinsics.areEqual(java.lang.Object,java.lang.Object):0:0 -> a
    163:169:boolean kotlinx.coroutines.flow.StateFlowImpl.updateState(java.lang.Object,java.lang.Object):0 -> a
    163:169:void kotlinx.coroutines.flow.StateFlowImpl.setValue(java.lang.Object):0 -> a
    163:169:void sync():0 -> a
    163:169:void moveToState(androidx.lifecycle.Lifecycle$State):0 -> a
    163:169:void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event):0 -> a
    170:202:boolean kotlinx.coroutines.flow.StateFlowImpl.updateState(java.lang.Object,java.lang.Object):0:0 -> a
    170:202:void kotlinx.coroutines.flow.StateFlowImpl.setValue(java.lang.Object):0 -> a
    170:202:void sync():0 -> a
    170:202:void moveToState(androidx.lifecycle.Lifecycle$State):0 -> a
    170:202:void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event):0 -> a
    203:219:void moveToState(androidx.lifecycle.Lifecycle$State):0:0 -> a
    203:219:void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event):0 -> a
    220:221:boolean kotlinx.coroutines.flow.StateFlowImpl.updateState(java.lang.Object,java.lang.Object):0:0 -> a
    220:221:void kotlinx.coroutines.flow.StateFlowImpl.setValue(java.lang.Object):0 -> a
    220:221:void sync():0 -> a
    220:221:void moveToState(androidx.lifecycle.Lifecycle$State):0 -> a
    220:221:void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event):0 -> a
    222:230:void sync():0:0 -> a
    222:230:void moveToState(androidx.lifecycle.Lifecycle$State):0 -> a
    222:230:void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event):0 -> a
    231:270:void moveToState(androidx.lifecycle.Lifecycle$State):0:0 -> a
    231:270:void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event):0 -> a
androidx.lifecycle.LifecycleRegistry$Companion -> androidx.lifecycle.j:
    int $r8$classId -> a
    1:6:void <init>():0:0 -> <init>
    1:6:void $r8$init$synthetic(int):0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    12:16:void androidx.profileinstaller.ProfileInstaller$2.onDiagnosticReceived(int,java.lang.Object):0:0 -> a
    12:16:void androidx.profileinstaller.ProfileInstaller$1.onDiagnosticReceived$bridge(int,java.lang.Object):0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"()V"}
    55:64:void androidx.profileinstaller.ProfileInstaller$2.onResultReceived(int,java.lang.Object):0:0 -> b
    55:64:void androidx.profileinstaller.ProfileInstaller$1.onResultReceived$bridge(int,java.lang.Object):0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void androidx.lifecycle.ReportFragment$Companion.dispatch$lifecycle_runtime_release(android.app.Activity,androidx.lifecycle.Lifecycle$Event):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/app/Activity;Landroidx/lifecycle/d;)V"}
androidx.lifecycle.ProcessLifecycleInitializer -> androidx.lifecycle.ProcessLifecycleInitializer:
    3:5:androidx.lifecycle.LifecycleOwner create(android.content.Context):0:0 -> a
    3:5:java.lang.Object create(android.content.Context):0 -> a
    6:32:androidx.startup.AppInitializer androidx.startup.AppInitializer.getInstance(android.content.Context):0:0 -> a
    6:32:androidx.lifecycle.LifecycleOwner create(android.content.Context):0 -> a
    6:32:java.lang.Object create(android.content.Context):0 -> a
    33:35:androidx.lifecycle.LifecycleOwner create(android.content.Context):0:0 -> a
    33:35:java.lang.Object create(android.content.Context):0 -> a
    36:45:boolean androidx.startup.AppInitializer.isEagerlyInitialized(java.lang.Class):0:0 -> a
    36:45:androidx.lifecycle.LifecycleOwner create(android.content.Context):0 -> a
    36:45:java.lang.Object create(android.content.Context):0 -> a
    46:73:void androidx.lifecycle.LifecycleDispatcher.init(android.content.Context):0:0 -> a
    46:73:androidx.lifecycle.LifecycleOwner create(android.content.Context):0 -> a
    46:73:java.lang.Object create(android.content.Context):0 -> a
    74:75:androidx.lifecycle.ProcessLifecycleOwner androidx.lifecycle.ProcessLifecycleOwner.access$getNewInstance$cp():0:0 -> a
    74:75:void androidx.lifecycle.ProcessLifecycleOwner$Companion.init$lifecycle_process_release(android.content.Context):0 -> a
    74:75:androidx.lifecycle.LifecycleOwner create(android.content.Context):0 -> a
    74:75:java.lang.Object create(android.content.Context):0 -> a
    76:78:void androidx.lifecycle.ProcessLifecycleOwner$Companion.init$lifecycle_process_release(android.content.Context):0:0 -> a
    76:78:androidx.lifecycle.LifecycleOwner create(android.content.Context):0 -> a
    76:78:java.lang.Object create(android.content.Context):0 -> a
    79:109:void androidx.lifecycle.ProcessLifecycleOwner.attach$lifecycle_process_release(android.content.Context):0:0 -> a
    79:109:void androidx.lifecycle.ProcessLifecycleOwner$Companion.init$lifecycle_process_release(android.content.Context):0 -> a
    79:109:androidx.lifecycle.LifecycleOwner create(android.content.Context):0 -> a
    79:109:java.lang.Object create(android.content.Context):0 -> a
    110:118:void kotlin.jvm.internal.Intrinsics.throwJavaNpe(java.lang.String):0:0 -> a
    110:118:void kotlin.jvm.internal.Intrinsics.checkNotNull(java.lang.Object,java.lang.String):0 -> a
    110:118:void androidx.lifecycle.ProcessLifecycleOwner.attach$lifecycle_process_release(android.content.Context):0 -> a
    110:118:void androidx.lifecycle.ProcessLifecycleOwner$Companion.init$lifecycle_process_release(android.content.Context):0 -> a
    110:118:androidx.lifecycle.LifecycleOwner create(android.content.Context):0 -> a
    110:118:java.lang.Object create(android.content.Context):0 -> a
    119:127:void kotlin.jvm.internal.Intrinsics.throwJavaNpe(java.lang.String):0:0 -> a
    119:127:void kotlin.jvm.internal.Intrinsics.checkNotNull(java.lang.Object,java.lang.String):0 -> a
    119:127:void androidx.lifecycle.LifecycleDispatcher.init(android.content.Context):0 -> a
    119:127:androidx.lifecycle.LifecycleOwner create(android.content.Context):0 -> a
    119:127:java.lang.Object create(android.content.Context):0 -> a
    128:139:androidx.lifecycle.LifecycleOwner create(android.content.Context):0:0 -> a
    128:139:java.lang.Object create(android.content.Context):0 -> a
    1:1:java.util.List dependencies():0:0 -> b
androidx.lifecycle.ProcessLifecycleOwner -> androidx.lifecycle.p:
    int startedCounter -> a
    int resumedCounter -> b
    boolean pauseSent -> c
    boolean stopSent -> d
    android.os.Handler handler -> e
    androidx.lifecycle.LifecycleRegistry registry -> f
    java.lang.Runnable delayedPauseRunnable -> g
    androidx.lifecycle.ReportFragment$ActivityInitializationListener initializationListener -> h
    androidx.lifecycle.ProcessLifecycleOwner newInstance -> i
    34:43:void kotlin.jvm.internal.Intrinsics.throwJavaNpe():0:0 -> a
    34:43:void kotlin.jvm.internal.Intrinsics.checkNotNull(java.lang.Object):0 -> a
    34:43:void activityResumed$lifecycle_process_release():0 -> a
androidx.lifecycle.ProcessLifecycleOwner$Api29Impl -> androidx.lifecycle.l:
    1:1:void registerActivityLifecycleCallbacks(android.app.Activity,android.app.Application$ActivityLifecycleCallbacks):0:0 -> a
androidx.lifecycle.ProcessLifecycleOwner$attach$1 -> androidx.lifecycle.n:
    14:27:androidx.lifecycle.ReportFragment androidx.lifecycle.ReportFragment$Companion.get(android.app.Activity):0:0 -> onActivityCreated
    14:27:void onActivityCreated(android.app.Activity,android.os.Bundle):0 -> onActivityCreated
    28:29:void onActivityCreated(android.app.Activity,android.os.Bundle):0:0 -> onActivityCreated
    30:31:androidx.lifecycle.ReportFragment$ActivityInitializationListener androidx.lifecycle.ProcessLifecycleOwner.access$getInitializationListener$p(androidx.lifecycle.ProcessLifecycleOwner):0:0 -> onActivityCreated
    30:31:void onActivityCreated(android.app.Activity,android.os.Bundle):0 -> onActivityCreated
    32:34:void androidx.lifecycle.ReportFragment.setProcessListener(androidx.lifecycle.ReportFragment$ActivityInitializationListener):0:0 -> onActivityCreated
    32:34:void onActivityCreated(android.app.Activity,android.os.Bundle):0 -> onActivityCreated
    35:46:void kotlin.jvm.internal.Intrinsics.throwJavaNpe(java.lang.String):0:0 -> onActivityCreated
    35:46:void kotlin.jvm.internal.Intrinsics.checkNotNull(java.lang.Object,java.lang.String):0 -> onActivityCreated
    35:46:androidx.lifecycle.ReportFragment androidx.lifecycle.ReportFragment$Companion.get(android.app.Activity):0 -> onActivityCreated
    35:46:void onActivityCreated(android.app.Activity,android.os.Bundle):0 -> onActivityCreated
    8:11:void androidx.lifecycle.ProcessLifecycleOwner.activityPaused$lifecycle_process_release():0:0 -> onActivityPaused
    8:11:void onActivityPaused(android.app.Activity):0 -> onActivityPaused
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    12:27:void androidx.lifecycle.ProcessLifecycleOwner.activityPaused$lifecycle_process_release():0:0 -> onActivityPaused
    12:27:void onActivityPaused(android.app.Activity):0 -> onActivityPaused
    28:37:void kotlin.jvm.internal.Intrinsics.throwJavaNpe():0:0 -> onActivityPaused
    28:37:void kotlin.jvm.internal.Intrinsics.checkNotNull(java.lang.Object):0 -> onActivityPaused
    28:37:void androidx.lifecycle.ProcessLifecycleOwner.activityPaused$lifecycle_process_release():0 -> onActivityPaused
    28:37:void onActivityPaused(android.app.Activity):0 -> onActivityPaused
    8:11:void androidx.lifecycle.ProcessLifecycleOwner.activityStopped$lifecycle_process_release():0:0 -> onActivityStopped
    8:11:void onActivityStopped(android.app.Activity):0 -> onActivityStopped
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    12:15:void androidx.lifecycle.ProcessLifecycleOwner.activityStopped$lifecycle_process_release():0:0 -> onActivityStopped
    12:15:void onActivityStopped(android.app.Activity):0 -> onActivityStopped
    16:30:void androidx.lifecycle.ProcessLifecycleOwner.dispatchStopIfNeeded$lifecycle_process_release():0:0 -> onActivityStopped
    16:30:void androidx.lifecycle.ProcessLifecycleOwner.activityStopped$lifecycle_process_release():0 -> onActivityStopped
    16:30:void onActivityStopped(android.app.Activity):0 -> onActivityStopped
androidx.lifecycle.ProcessLifecycleOwner$attach$1$onActivityPreCreated$1 -> androidx.lifecycle.m:
    8:11:void androidx.lifecycle.ProcessLifecycleOwner.activityStarted$lifecycle_process_release():0:0 -> onActivityPostStarted
    8:11:void onActivityPostStarted(android.app.Activity):0 -> onActivityPostStarted
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    12:30:void androidx.lifecycle.ProcessLifecycleOwner.activityStarted$lifecycle_process_release():0:0 -> onActivityPostStarted
    12:30:void onActivityPostStarted(android.app.Activity):0 -> onActivityPostStarted
androidx.lifecycle.ProcessLifecycleOwner$initializationListener$1 -> androidx.lifecycle.o:
    androidx.lifecycle.ProcessLifecycleOwner this$0 -> a
androidx.lifecycle.ReportFragment -> androidx.lifecycle.t:
    androidx.lifecycle.ReportFragment$ActivityInitializationListener processListener -> a
    int $r8$clinit -> b
    1:1:void dispatch(androidx.lifecycle.Lifecycle$Event):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/d;)V"}
    8:12:void androidx.lifecycle.ProcessLifecycleOwner$initializationListener$1.onResume():0:0 -> onResume
    8:12:void dispatchResume(androidx.lifecycle.ReportFragment$ActivityInitializationListener):0 -> onResume
    8:12:void onResume():0 -> onResume
    13:18:void onResume():0:0 -> onResume
    8:13:void androidx.lifecycle.ProcessLifecycleOwner.activityStarted$lifecycle_process_release():0:0 -> onStart
    8:13:void androidx.lifecycle.ProcessLifecycleOwner$initializationListener$1.onStart():0 -> onStart
    8:13:void dispatchStart(androidx.lifecycle.ReportFragment$ActivityInitializationListener):0 -> onStart
    8:13:void onStart():0 -> onStart
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(3)"]}
    14:31:void androidx.lifecycle.ProcessLifecycleOwner.activityStarted$lifecycle_process_release():0:0 -> onStart
    14:31:void androidx.lifecycle.ProcessLifecycleOwner$initializationListener$1.onStart():0 -> onStart
    14:31:void dispatchStart(androidx.lifecycle.ReportFragment$ActivityInitializationListener):0 -> onStart
    14:31:void onStart():0 -> onStart
    32:37:void onStart():0:0 -> onStart
androidx.lifecycle.ReportFragment$LifecycleCallbacks -> androidx.lifecycle.s:
    8:19:void androidx.lifecycle.ReportFragment$LifecycleCallbacks$Companion.registerIn(android.app.Activity):0:0 -> registerIn
    8:19:void registerIn(android.app.Activity):0 -> registerIn
androidx.lifecycle.ReportFragment$LifecycleCallbacks$Companion -> androidx.lifecycle.r:
androidx.lifecycle.ReportFragment$LifecycleCallbacks$Companion$$ExternalSyntheticApiModelOutline0 -> androidx.lifecycle.q:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback$$InternalSyntheticApiModelOutline$1$b71cd158c488321664a8a05513cc1b2518b00c695b826cc4b8c6f88bf5c5e43d$4.m(android.graphics.Insets):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:android.graphics.Insets io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback$$InternalSyntheticApiModelOutline$1$b71cd158c488321664a8a05513cc1b2518b00c695b826cc4b8c6f88bf5c5e43d$7.m(int,int,int,int):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Landroid/graphics/Insets;"}
    1:1:android.media.ImageReader io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$$InternalSyntheticApiModelOutline$1$67794fd1c8ab5a462427a2fbe2bb4c3c6b829e00b33b77f88fa79eddd5c77c68$0.m(int,int,int,int,long):0:0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(II)Landroid/media/ImageReader;"}
    1:1:android.view.WindowInsets$Builder io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback$$InternalSyntheticApiModelOutline$8$b71cd158c488321664a8a05513cc1b2518b00c695b826cc4b8c6f88bf5c5e43d$0.m(android.view.WindowInsets):0:0 -> d
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.WindowInsets io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback$$InternalSyntheticApiModelOutline$1$b71cd158c488321664a8a05513cc1b2518b00c695b826cc4b8c6f88bf5c5e43d$9.m(android.view.WindowInsets$Builder):0:0 -> e
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback$$InternalSyntheticApiModelOutline$8$b71cd158c488321664a8a05513cc1b2518b00c695b826cc4b8c6f88bf5c5e43d$1.m():0:0 -> f
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void androidx.lifecycle.ReportFragment$LifecycleCallbacks$Companion$$InternalSyntheticApiModelOutline$1$697f715c7301ae348f7ba2ab082eb37b64d67d01fe586b84528231ac2d1ce45b$0.m(android.app.Activity,android.app.Application$ActivityLifecycleCallbacks):0:0 -> g
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/app/Activity;Landroidx/lifecycle/s;)V"}
androidx.profileinstaller.BenchmarkOperation$Api24ContextHelper$$ExternalSyntheticApiModelOutline0 -> f.a:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int io.flutter.view.AccessibilityViewEmbedder$$InternalSyntheticApiModelOutline$1$5748db92e5ea0bf57e589b03ebff6c44bee4cdfa760f588503b01ab99cdc139b$2.m(android.view.accessibility.AccessibilityNodeInfo):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:android.content.Context androidx.profileinstaller.BenchmarkOperation$Api24ContextHelper$$InternalSyntheticApiModelOutline$2$cb5cae3fa2bc2f683aac30a765a66d90fae1498f4b209d97105f03875c259c9b$0.m(android.content.Context):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.view.AccessibilityViewEmbedder$$InternalSyntheticApiModelOutline$1$5748db92e5ea0bf57e589b03ebff6c44bee4cdfa760f588503b01ab99cdc139b$3.m(android.view.accessibility.AccessibilityNodeInfo,int):0:0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.view.AccessibilityViewEmbedder$$InternalSyntheticApiModelOutline$1$5748db92e5ea0bf57e589b03ebff6c44bee4cdfa760f588503b01ab99cdc139b$5.m(android.view.accessibility.AccessibilityNodeInfo,boolean):0:0 -> d
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean io.flutter.view.AccessibilityViewEmbedder$$InternalSyntheticApiModelOutline$1$5748db92e5ea0bf57e589b03ebff6c44bee4cdfa760f588503b01ab99cdc139b$4.m(android.view.accessibility.AccessibilityNodeInfo):0:0 -> e
      # {"id":"com.android.tools.r8.synthesized"}
androidx.profileinstaller.DeviceProfileWriter -> f.c:
    android.content.res.AssetManager mAssetManager -> a
    java.util.concurrent.Executor mExecutor -> b
    androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback mDiagnostics -> c
    byte[] mDesiredVersion -> d
    java.io.File mCurProfile -> e
    java.lang.String mApkName -> f
    boolean mDeviceSupportsAotProfile -> g
    androidx.profileinstaller.DexProfileData[] mProfile -> h
    byte[] mTranscodedProfile -> i
    1:1:byte[] androidx.profileinstaller.DeviceProfileWriter.desiredVersion():0:0 -> <init>
    1:1:void <init>(android.content.res.AssetManager,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,java.lang.String,java.lang.String,java.lang.String,java.io.File):0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/res/AssetManager;La/a;Lf/g;Ljava/lang/String;Ljava/io/File;)V"}
    2:2:void <init>(android.content.res.AssetManager,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,java.lang.String,java.lang.String,java.lang.String,java.io.File):0:0 -> <init>
    1:1:java.io.InputStream openStreamFromAssets(android.content.res.AssetManager,java.lang.String):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/res/AssetManager;Ljava/lang/String;)Ljava/io/FileInputStream;"}
    1:1:void result(int,java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILjava/io/Serializable;)V"}
androidx.profileinstaller.DeviceProfileWriter$$ExternalSyntheticLambda0 -> f.b:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    int androidx.profileinstaller.DeviceProfileWriter$$InternalSyntheticLambda$2$ff8c5bd5af23f4910bcb3842df39c45d97ff518106242665abad96f9ce8992ee$0.$r8$classId -> a
    int androidx.profileinstaller.DeviceProfileWriter$$InternalSyntheticLambda$2$ff8c5bd5af23f4910bcb3842df39c45d97ff518106242665abad96f9ce8992ee$0.f$1 -> b
    java.lang.Object androidx.profileinstaller.DeviceProfileWriter$$InternalSyntheticLambda$2$ff8c5bd5af23f4910bcb3842df39c45d97ff518106242665abad96f9ce8992ee$0.f$2 -> c
    androidx.profileinstaller.DeviceProfileWriter androidx.profileinstaller.DeviceProfileWriter$$InternalSyntheticLambda$2$ff8c5bd5af23f4910bcb3842df39c45d97ff518106242665abad96f9ce8992ee$0.f$0 -> d
    1:1:void androidx.profileinstaller.DeviceProfileWriter$$InternalSyntheticLambda$2$ff8c5bd5af23f4910bcb3842df39c45d97ff518106242665abad96f9ce8992ee$0.<init>(androidx.profileinstaller.DeviceProfileWriter,int,java.lang.Object):0:0 -> <init>
    1:1:void androidx.profileinstaller.DeviceProfileWriter$$InternalSyntheticLambda$2$ff8c5bd5af23f4910bcb3842df39c45d97ff518106242665abad96f9ce8992ee$0.$r8$init$synthetic(java.lang.Object,int,java.lang.Object,int):0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;ILjava/io/Serializable;I)V"}
    15:20:void androidx.profileinstaller.DeviceProfileWriter.lambda$result$0(int,java.lang.Object):0:0 -> run
    15:20:void androidx.profileinstaller.DeviceProfileWriter$$InternalSyntheticLambda$2$ff8c5bd5af23f4910bcb3842df39c45d97ff518106242665abad96f9ce8992ee$0.run$bridge():0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
    21:22:void androidx.profileinstaller.DeviceProfileWriter$$InternalSyntheticLambda$2$ff8c5bd5af23f4910bcb3842df39c45d97ff518106242665abad96f9ce8992ee$0.run$bridge():0:0 -> run
    23:26:void androidx.profileinstaller.ProfileInstaller.lambda$result$0(androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,int,java.lang.Object):0:0 -> run
    23:26:void androidx.profileinstaller.DeviceProfileWriter$$InternalSyntheticLambda$2$ff8c5bd5af23f4910bcb3842df39c45d97ff518106242665abad96f9ce8992ee$0.run$bridge():0 -> run
androidx.profileinstaller.DexProfileData -> f.d:
    java.lang.String apkName -> a
    java.lang.String dexName -> b
    long dexChecksum -> c
    long mTypeIdCount -> d
    int classSetSize -> e
    int hotMethodRegionSize -> f
    int numMethodIds -> g
    int[] classes -> h
    java.util.TreeMap methods -> i
    1:1:void <init>(java.lang.String,java.lang.String,long,long,int,int,int,int[],java.util.TreeMap):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Ljava/lang/String;JIII[ILjava/util/TreeMap;)V"}
androidx.profileinstaller.FileSectionType$EnumUnboxingLocalUtility -> f.e:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:long getMValue(int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.embedding.engine.FlutterJNI$$InternalSyntheticThrowCCEIfNotNull$7$0831c66200a5c78ec128225cbbecbb6fc0c1951d78ffc09068cf683a4714eb78$0.m(java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
androidx.profileinstaller.ProfileInstallReceiver -> androidx.profileinstaller.ProfileInstallReceiver:
    70:92:void androidx.profileinstaller.ProfileInstaller.writeSkipFile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0:0 -> onReceive
    70:92:void onReceive(android.content.Context,android.content.Intent):0 -> onReceive
    93:116:void androidx.profileinstaller.ProfileInstaller.result(java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,int,java.lang.Object):0:0 -> onReceive
    93:116:void androidx.profileinstaller.ProfileInstaller.writeSkipFile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0 -> onReceive
    93:116:void onReceive(android.content.Context,android.content.Intent):0 -> onReceive
    117:127:void onReceive(android.content.Context,android.content.Intent):0:0 -> onReceive
    128:131:void androidx.profileinstaller.ProfileInstaller.deleteSkipFile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0:0 -> onReceive
    128:131:void onReceive(android.content.Context,android.content.Intent):0 -> onReceive
    132:141:boolean androidx.profileinstaller.ProfileInstaller.deleteProfileWrittenFor(java.io.File):0:0 -> onReceive
    132:141:void androidx.profileinstaller.ProfileInstaller.deleteSkipFile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0 -> onReceive
    132:141:void onReceive(android.content.Context,android.content.Intent):0 -> onReceive
    142:155:void androidx.profileinstaller.ProfileInstaller.result(java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,int,java.lang.Object):0:0 -> onReceive
    142:155:void androidx.profileinstaller.ProfileInstaller.deleteSkipFile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0 -> onReceive
    142:155:void onReceive(android.content.Context,android.content.Intent):0 -> onReceive
    156:165:void onReceive(android.content.Context,android.content.Intent):0:0 -> onReceive
    166:181:void saveProfile(androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0:0 -> onReceive
    166:181:void onReceive(android.content.Context,android.content.Intent):0 -> onReceive
    182:190:void androidx.profileinstaller.ProfileInstallReceiver$ResultDiagnostics.onResultReceived(int,java.lang.Object):0:0 -> onReceive
    182:190:void saveProfile(androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0 -> onReceive
    182:190:void onReceive(android.content.Context,android.content.Intent):0 -> onReceive
    191:216:void onReceive(android.content.Context,android.content.Intent):0:0 -> onReceive
    217:220:void androidx.profileinstaller.BenchmarkOperation.dropShaderCache(android.content.Context,androidx.profileinstaller.ProfileInstallReceiver$ResultDiagnostics):0:0 -> onReceive
    217:220:void onReceive(android.content.Context,android.content.Intent):0 -> onReceive
    221:233:java.io.File androidx.profileinstaller.BenchmarkOperation$Api24ContextHelper.getDeviceProtectedCodeCacheDir(android.content.Context):0:0 -> onReceive
    221:233:void androidx.profileinstaller.BenchmarkOperation.dropShaderCache(android.content.Context,androidx.profileinstaller.ProfileInstallReceiver$ResultDiagnostics):0 -> onReceive
    221:233:void onReceive(android.content.Context,android.content.Intent):0 -> onReceive
    234:238:java.io.File androidx.profileinstaller.BenchmarkOperation$Api21ContextHelper.getCodeCacheDir(android.content.Context):0:0 -> onReceive
    234:238:void androidx.profileinstaller.BenchmarkOperation.dropShaderCache(android.content.Context,androidx.profileinstaller.ProfileInstallReceiver$ResultDiagnostics):0 -> onReceive
    234:238:void onReceive(android.content.Context,android.content.Intent):0 -> onReceive
    239:253:void androidx.profileinstaller.BenchmarkOperation.dropShaderCache(android.content.Context,androidx.profileinstaller.ProfileInstallReceiver$ResultDiagnostics):0:0 -> onReceive
    239:253:void onReceive(android.content.Context,android.content.Intent):0 -> onReceive
    254:262:void androidx.profileinstaller.ProfileInstallReceiver$ResultDiagnostics.onResultReceived(int,java.lang.Object):0:0 -> onReceive
    254:262:void androidx.profileinstaller.BenchmarkOperation.dropShaderCache(android.content.Context,androidx.profileinstaller.ProfileInstallReceiver$ResultDiagnostics):0 -> onReceive
    254:262:void onReceive(android.content.Context,android.content.Intent):0 -> onReceive
    263:269:void androidx.profileinstaller.ProfileInstallReceiver$ResultDiagnostics.onResultReceived(int,java.lang.Object):0:0 -> onReceive
    263:269:void onReceive(android.content.Context,android.content.Intent):0 -> onReceive
androidx.profileinstaller.ProfileInstallReceiver$ResultDiagnostics -> f.f:
    int $r8$classId -> a
    androidx.profileinstaller.ProfileInstallReceiver this$0 -> b
    1:8:void androidx.profileinstaller.ProfileInstallReceiver$ResultDiagnostics.<init>(androidx.profileinstaller.ProfileInstallReceiver):0:0 -> <init>
    1:8:void $r8$init$synthetic(java.lang.Object,int):0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILjava/lang/Object;)V"}
    5:8:void androidx.profileinstaller.ProfileInstaller$2.onDiagnosticReceived(int,java.lang.Object):0:0 -> a
    5:8:void onDiagnosticReceived(int,java.lang.Object):0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()V"}
    1:1:void onResultReceived(int,java.lang.Object):0:0 -> b
    11:34:java.lang.String kotlinx.coroutines.internal.Symbol.toString():0:0 -> toString
    11:34:java.lang.String kotlinx.coroutines.internal.Symbol.toString$bridge():0 -> toString
      # {"id":"com.android.tools.r8.synthesized"}
androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback -> f.g:
    void onDiagnosticReceived(int,java.lang.Object) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()V"}
    void onResultReceived(int,java.lang.Object) -> b
androidx.profileinstaller.ProfileInstallerInitializer -> androidx.profileinstaller.ProfileInstallerInitializer:
    1:17:androidx.profileinstaller.ProfileInstallerInitializer$Result create(android.content.Context):0:0 -> a
    1:17:java.lang.Object create(android.content.Context):0 -> a
    18:25:void delayAfterFirstFrame(android.content.Context):0:0 -> a
    18:25:androidx.profileinstaller.ProfileInstallerInitializer$Result create(android.content.Context):0 -> a
    18:25:java.lang.Object create(android.content.Context):0 -> a
    26:31:androidx.profileinstaller.ProfileInstallerInitializer$Result create(android.content.Context):0:0 -> a
    26:31:java.lang.Object create(android.content.Context):0 -> a
    1:1:java.util.List dependencies():0:0 -> b
androidx.profileinstaller.ProfileInstallerInitializer$$ExternalSyntheticLambda0 -> f.h:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.profileinstaller.ProfileInstallerInitializer androidx.profileinstaller.ProfileInstallerInitializer$$InternalSyntheticLambda$1$0f795b3312dc1da540aed76dfe7be9153bc2dd822b10dd31dcd76fb9862960b5$0.f$0 -> a
    android.content.Context androidx.profileinstaller.ProfileInstallerInitializer$$InternalSyntheticLambda$1$0f795b3312dc1da540aed76dfe7be9153bc2dd822b10dd31dcd76fb9862960b5$0.f$1 -> b
    1:1:void androidx.profileinstaller.ProfileInstallerInitializer$$InternalSyntheticLambda$1$0f795b3312dc1da540aed76dfe7be9153bc2dd822b10dd31dcd76fb9862960b5$0.<init>(androidx.profileinstaller.ProfileInstallerInitializer,android.content.Context):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    6:60:void androidx.profileinstaller.ProfileInstallerInitializer.installAfterDelay(android.content.Context):0:0 -> run
    6:60:void androidx.profileinstaller.ProfileInstallerInitializer.lambda$delayAfterFirstFrame$0(android.content.Context):0 -> run
    6:60:void androidx.profileinstaller.ProfileInstallerInitializer$$InternalSyntheticLambda$1$0f795b3312dc1da540aed76dfe7be9153bc2dd822b10dd31dcd76fb9862960b5$0.run():0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.profileinstaller.ProfileInstallerInitializer$$ExternalSyntheticLambda1 -> f.i:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    int androidx.profileinstaller.ProfileInstallerInitializer$$InternalSyntheticLambda$2$03a6ae1fad12ddf91cb6ffc3c686c10ad059d5325c1df7cdae6dc2cb5a8d8b96$0.$r8$classId -> a
    android.content.Context androidx.profileinstaller.ProfileInstallerInitializer$$InternalSyntheticLambda$2$03a6ae1fad12ddf91cb6ffc3c686c10ad059d5325c1df7cdae6dc2cb5a8d8b96$0.f$0 -> b
    1:8:void androidx.profileinstaller.ProfileInstallerInitializer$$InternalSyntheticLambda$2$03a6ae1fad12ddf91cb6ffc3c686c10ad059d5325c1df7cdae6dc2cb5a8d8b96$0.<init>(android.content.Context):0:0 -> <init>
    1:8:void androidx.profileinstaller.ProfileInstallerInitializer$$InternalSyntheticLambda$2$03a6ae1fad12ddf91cb6ffc3c686c10ad059d5325c1df7cdae6dc2cb5a8d8b96$0.$r8$init$synthetic(java.lang.Object,int):0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILjava/lang/Object;)V"}
    12:20:void androidx.profileinstaller.ProfileInstaller.writeProfile(android.content.Context):0:0 -> run
    12:20:void androidx.profileinstaller.ProfileInstallerInitializer.lambda$writeInBackground$2(android.content.Context):0 -> run
    12:20:void androidx.profileinstaller.ProfileInstallerInitializer$$InternalSyntheticLambda$2$03a6ae1fad12ddf91cb6ffc3c686c10ad059d5325c1df7cdae6dc2cb5a8d8b96$0.run$bridge():0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
    21:24:void androidx.profileinstaller.ProfileInstaller.writeProfile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0:0 -> run
    21:24:void androidx.profileinstaller.ProfileInstaller.writeProfile(android.content.Context):0 -> run
    21:24:void androidx.profileinstaller.ProfileInstallerInitializer.lambda$writeInBackground$2(android.content.Context):0 -> run
    21:24:void androidx.profileinstaller.ProfileInstallerInitializer$$InternalSyntheticLambda$2$03a6ae1fad12ddf91cb6ffc3c686c10ad059d5325c1df7cdae6dc2cb5a8d8b96$0.run$bridge():0 -> run
    25:26:void androidx.profileinstaller.ProfileInstallerInitializer$$InternalSyntheticLambda$2$03a6ae1fad12ddf91cb6ffc3c686c10ad059d5325c1df7cdae6dc2cb5a8d8b96$0.run$bridge():0:0 -> run
    27:52:void androidx.profileinstaller.ProfileInstallerInitializer.writeInBackground(android.content.Context):0:0 -> run
    27:52:void androidx.profileinstaller.ProfileInstallerInitializer.lambda$installAfterDelay$1(android.content.Context):0 -> run
    27:52:void androidx.profileinstaller.ProfileInstallerInitializer$$InternalSyntheticLambda$2$03a6ae1fad12ddf91cb6ffc3c686c10ad059d5325c1df7cdae6dc2cb5a8d8b96$0.run$bridge():0 -> run
    53:58:void androidx.profileinstaller.ProfileInstallerInitializer$$InternalSyntheticLambda$2$03a6ae1fad12ddf91cb6ffc3c686c10ad059d5325c1df7cdae6dc2cb5a8d8b96$0.run$bridge():0:0 -> run
    59:61:void androidx.lifecycle.ProcessLifecycleOwner.delayedPauseRunnable$lambda$0(androidx.lifecycle.ProcessLifecycleOwner):0:0 -> run
    59:61:void androidx.profileinstaller.ProfileInstallerInitializer$$InternalSyntheticLambda$2$03a6ae1fad12ddf91cb6ffc3c686c10ad059d5325c1df7cdae6dc2cb5a8d8b96$0.run$bridge():0 -> run
    62:74:void androidx.lifecycle.ProcessLifecycleOwner.dispatchPauseIfNeeded$lifecycle_process_release():0:0 -> run
    62:74:void androidx.lifecycle.ProcessLifecycleOwner.delayedPauseRunnable$lambda$0(androidx.lifecycle.ProcessLifecycleOwner):0 -> run
    62:74:void androidx.profileinstaller.ProfileInstallerInitializer$$InternalSyntheticLambda$2$03a6ae1fad12ddf91cb6ffc3c686c10ad059d5325c1df7cdae6dc2cb5a8d8b96$0.run$bridge():0 -> run
    75:90:void androidx.lifecycle.ProcessLifecycleOwner.dispatchStopIfNeeded$lifecycle_process_release():0:0 -> run
    75:90:void androidx.lifecycle.ProcessLifecycleOwner.delayedPauseRunnable$lambda$0(androidx.lifecycle.ProcessLifecycleOwner):0 -> run
    75:90:void androidx.profileinstaller.ProfileInstallerInitializer$$InternalSyntheticLambda$2$03a6ae1fad12ddf91cb6ffc3c686c10ad059d5325c1df7cdae6dc2cb5a8d8b96$0.run$bridge():0 -> run
androidx.profileinstaller.ProfileInstallerInitializer$Choreographer16Impl -> f.k:
    1:1:void postFrameCallback(java.lang.Runnable):0:0 -> a
androidx.profileinstaller.ProfileInstallerInitializer$Choreographer16Impl$$ExternalSyntheticLambda0 -> f.j:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    java.lang.Runnable androidx.profileinstaller.ProfileInstallerInitializer$Choreographer16Impl$$InternalSyntheticLambda$2$dd4b7bded0037cdb0fa34ef5820826a5e0fd89e1034ce4aa9969280fa8f012f3$0.f$0 -> a
    1:1:void androidx.profileinstaller.ProfileInstallerInitializer$Choreographer16Impl$$InternalSyntheticLambda$2$dd4b7bded0037cdb0fa34ef5820826a5e0fd89e1034ce4aa9969280fa8f012f3$0.<init>(java.lang.Runnable):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:6:void androidx.profileinstaller.ProfileInstallerInitializer$Choreographer16Impl.lambda$postFrameCallback$0(java.lang.Runnable,long):0:0 -> doFrame
    1:6:void androidx.profileinstaller.ProfileInstallerInitializer$Choreographer16Impl$$InternalSyntheticLambda$2$dd4b7bded0037cdb0fa34ef5820826a5e0fd89e1034ce4aa9969280fa8f012f3$0.doFrame(long):0 -> doFrame
      # {"id":"com.android.tools.r8.synthesized"}
androidx.profileinstaller.ProfileInstallerInitializer$Handler28Impl -> f.m:
    1:1:android.os.Handler createAsync(android.os.Looper):0:0 -> a
androidx.profileinstaller.ProfileInstallerInitializer$Handler28Impl$$ExternalSyntheticApiModelOutline0 -> f.l:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.graphics.Bitmap io.flutter.embedding.engine.FlutterJNI$$InternalSyntheticApiModelOutline$1$2a5524ed219e708ff31c82ad8e0395d5d0898b08cb74f1a02a2f346a4db7f98c$2.m(android.graphics.ImageDecoder$Source,android.graphics.ImageDecoder$OnHeaderDecodedListener):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/graphics/ImageDecoder$Source;Lj/c;)Landroid/graphics/Bitmap;"}
    1:1:android.graphics.ImageDecoder$Source io.flutter.embedding.engine.FlutterJNI$$InternalSyntheticApiModelOutline$1$2a5524ed219e708ff31c82ad8e0395d5d0898b08cb74f1a02a2f346a4db7f98c$0.m(java.nio.ByteBuffer):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:android.os.Handler androidx.profileinstaller.ProfileInstallerInitializer$Handler28Impl$$InternalSyntheticApiModelOutline$3$8d52cf30b98a04962970f0c5e6c7c8573caae9b733781b8847fa0ec96d6a0ee8$0.m(android.os.Looper):0:0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:android.util.Size io.flutter.embedding.engine.FlutterJNI$$InternalSyntheticApiModelOutline$1$2ca0fe582a9db9d2350370c904ee14f01e2f7fb5b73338825d8c63007f5abfe0$4.m(android.graphics.ImageDecoder$ImageInfo):0:0 -> d
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.embedding.engine.FlutterJNI$$InternalSyntheticApiModelOutline$1$2ca0fe582a9db9d2350370c904ee14f01e2f7fb5b73338825d8c63007f5abfe0$3.m(android.graphics.ImageDecoder,int):0:0 -> e
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/graphics/ImageDecoder;)V"}
    1:1:void io.flutter.embedding.engine.FlutterJNI$$InternalSyntheticApiModelOutline$1$2ca0fe582a9db9d2350370c904ee14f01e2f7fb5b73338825d8c63007f5abfe0$2.m(android.graphics.ImageDecoder,android.graphics.ColorSpace):0:0 -> f
      # {"id":"com.android.tools.r8.synthesized"}
androidx.profileinstaller.ProfileVerifier -> f.q:
    androidx.concurrent.futures.ResolvableFuture sFuture -> a
    java.lang.Object SYNC_OBJ -> b
    androidx.profileinstaller.ProfileVerifier$CompilationStatus sCompilationStatus -> c
    1:5:androidx.concurrent.futures.ResolvableFuture androidx.concurrent.futures.ResolvableFuture.create():0:0 -> <clinit>
    1:5:void <clinit>():0 -> <clinit>
    6:18:void <clinit>():0:0 -> <clinit>
    13:24:boolean androidx.concurrent.futures.AbstractResolvableFuture.set(java.lang.Object):0:0 -> a
    13:24:boolean androidx.concurrent.futures.ResolvableFuture.set(java.lang.Object):0 -> a
    13:24:androidx.profileinstaller.ProfileVerifier$CompilationStatus setCompilationStatus(int,boolean,boolean):0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(IZZ)Lf/p;"}
    25:27:androidx.profileinstaller.ProfileVerifier$CompilationStatus setCompilationStatus(int,boolean,boolean):0:0 -> a
    105:135:long androidx.profileinstaller.ProfileVerifier.getPackageLastUpdateTime(android.content.Context):0:0 -> b
    105:135:androidx.profileinstaller.ProfileVerifier$CompilationStatus writeProfileVerification(android.content.Context,boolean):0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Z)V"}
    136:255:androidx.profileinstaller.ProfileVerifier$CompilationStatus writeProfileVerification(android.content.Context,boolean):0:0 -> b
androidx.profileinstaller.ProfileVerifier$Api33Impl -> f.n:
    1:1:android.content.pm.PackageInfo getPackageInfo(android.content.pm.PackageManager,android.content.Context):0:0 -> a
androidx.profileinstaller.ProfileVerifier$Cache -> f.o:
    int mSchema -> a
    int mResultCode -> b
    long mPackageLastUpdateTime -> c
    long mInstalledCurrentProfileSize -> d
    1:1:void <init>(int,int,long,long):0:0 -> <init>
    1:1:androidx.profileinstaller.ProfileVerifier$Cache readFromFile(java.io.File):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/File;)Lf/o;"}
    1:1:void writeOnFile(java.io.File):0:0 -> b
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
androidx.profileinstaller.ProfileVerifier$CompilationStatus -> f.p:
    1:1:void io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutator.<init>(io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack,android.graphics.Rect,float[]):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)V"}
    2:2:void io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutator.<init>(io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack,android.graphics.Matrix):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/graphics/Matrix;)V"}
androidx.profileinstaller.WritableFileSection -> f.r:
    androidx.profileinstaller.FileSectionType mType -> a
    byte[] mContents -> b
    boolean mNeedsCompression -> c
    1:1:void <init>(androidx.profileinstaller.FileSectionType,int,byte[],boolean):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I[BZ)V"}
androidx.startup.AppInitializer -> g.a:
    java.util.Map mInitialized -> a
    java.util.Set mDiscovered -> b
    android.content.Context mContext -> c
    androidx.startup.AppInitializer sInstance -> d
    java.lang.Object sLock -> e
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(android.content.Context):0:0 -> <init>
    1:1:void discoverAndInitialize(android.os.Bundle):0:0 -> a
    1:13:boolean androidx.tracing.Trace.isEnabled():0:0 -> b
    1:13:java.lang.Object doInitialize(java.lang.Class,java.util.Set):0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Class;Ljava/util/HashSet;)V"}
    14:70:boolean androidx.tracing.Trace.isEnabledFallback():0:0 -> b
    14:70:boolean androidx.tracing.Trace.isEnabled():0 -> b
    14:70:java.lang.Object doInitialize(java.lang.Class,java.util.Set):0 -> b
    71:101:void androidx.tracing.Trace.handleException(java.lang.String,java.lang.Exception):0:0 -> b
    71:101:boolean androidx.tracing.Trace.isEnabledFallback():0 -> b
    71:101:boolean androidx.tracing.Trace.isEnabled():0 -> b
    71:101:java.lang.Object doInitialize(java.lang.Class,java.util.Set):0 -> b
    102:105:java.lang.Object doInitialize(java.lang.Class,java.util.Set):0:0 -> b
    106:118:java.lang.String androidx.tracing.Trace.truncatedTraceSectionLabel(java.lang.String):0:0 -> b
    106:118:void androidx.tracing.Trace.beginSection(java.lang.String):0 -> b
    106:118:java.lang.Object doInitialize(java.lang.Class,java.util.Set):0 -> b
    119:125:void androidx.tracing.TraceApi18Impl.beginSection(java.lang.String):0:0 -> b
    119:125:void androidx.tracing.Trace.beginSection(java.lang.String):0 -> b
    119:125:java.lang.Object doInitialize(java.lang.Class,java.util.Set):0 -> b
    126:216:java.lang.Object doInitialize(java.lang.Class,java.util.Set):0:0 -> b
    217:224:void androidx.tracing.TraceApi18Impl.endSection():0:0 -> b
    217:224:void androidx.tracing.Trace.endSection():0 -> b
    217:224:java.lang.Object doInitialize(java.lang.Class,java.util.Set):0 -> b
    225:240:java.lang.Object doInitialize(java.lang.Class,java.util.Set):0:0 -> b
    241:243:void androidx.tracing.TraceApi18Impl.endSection():0:0 -> b
    241:243:void androidx.tracing.Trace.endSection():0 -> b
    241:243:java.lang.Object doInitialize(java.lang.Class,java.util.Set):0 -> b
    244:244:java.lang.Object doInitialize(java.lang.Class,java.util.Set):0:0 -> b
androidx.startup.InitializationProvider -> androidx.startup.InitializationProvider:
    13:37:androidx.startup.AppInitializer androidx.startup.AppInitializer.getInstance(android.content.Context):0:0 -> onCreate
    13:37:boolean onCreate():0 -> onCreate
    38:41:void androidx.startup.AppInitializer.discoverAndInitialize():0:0 -> onCreate
    38:41:boolean onCreate():0 -> onCreate
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    42:44:void androidx.tracing.TraceApi18Impl.beginSection(java.lang.String):0:0 -> onCreate
    42:44:void androidx.tracing.Trace.beginSection(java.lang.String):0 -> onCreate
    42:44:void androidx.startup.AppInitializer.discoverAndInitialize():0 -> onCreate
    42:44:boolean onCreate():0 -> onCreate
    45:74:void androidx.startup.AppInitializer.discoverAndInitialize():0:0 -> onCreate
    45:74:boolean onCreate():0 -> onCreate
    75:81:void androidx.tracing.TraceApi18Impl.endSection():0:0 -> onCreate
    75:81:void androidx.tracing.Trace.endSection():0 -> onCreate
    75:81:void androidx.startup.AppInitializer.discoverAndInitialize():0 -> onCreate
    75:81:boolean onCreate():0 -> onCreate
    82:87:void androidx.startup.AppInitializer.discoverAndInitialize():0:0 -> onCreate
    82:87:boolean onCreate():0 -> onCreate
    88:90:void androidx.tracing.TraceApi18Impl.endSection():0:0 -> onCreate
    88:90:void androidx.tracing.Trace.endSection():0 -> onCreate
    88:90:void androidx.startup.AppInitializer.discoverAndInitialize():0 -> onCreate
    88:90:boolean onCreate():0 -> onCreate
    91:93:void androidx.startup.AppInitializer.discoverAndInitialize():0:0 -> onCreate
    91:93:boolean onCreate():0 -> onCreate
    94:99:boolean onCreate():0:0 -> onCreate
androidx.startup.Initializer -> g.b:
    java.lang.Object create(android.content.Context) -> a
    java.util.List dependencies() -> b
androidx.startup.StartupException -> g.c:
    1:1:void <init>(java.lang.String):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"()V"}
androidx.tracing.TraceApi29Impl -> h.a:
    1:1:boolean isEnabled():0:0 -> a
androidx.versionedparcelable.ParcelImpl -> androidx.versionedparcelable.ParcelImpl:
    androidx.versionedparcelable.VersionedParcelable mParcel -> a
androidx.versionedparcelable.ParcelImpl$1 -> i.a:
    1:6:androidx.versionedparcelable.ParcelImpl androidx.versionedparcelable.ParcelImpl$1.createFromParcel(android.os.Parcel):0:0 -> createFromParcel
    1:6:java.lang.Object createFromParcel(android.os.Parcel):0 -> createFromParcel
    1:3:androidx.versionedparcelable.ParcelImpl[] androidx.versionedparcelable.ParcelImpl$1.newArray(int):0:0 -> newArray
    1:3:java.lang.Object[] newArray(int):0 -> newArray
androidx.versionedparcelable.VersionedParcel -> i.b:
    androidx.collection.ArrayMap mReadCache -> a
    androidx.collection.ArrayMap mWriteCache -> b
    androidx.collection.ArrayMap mParcelizerCache -> c
    1:1:void <init>(androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.ArrayMap):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc/b;Lc/b;Lc/b;)V"}
    androidx.versionedparcelable.VersionedParcel createSubParcel() -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Li/c;"}
    5:11:java.lang.Object androidx.collection.SimpleArrayMap.get(java.lang.Object):0:0 -> b
    5:11:java.lang.Class findParcelClass(java.lang.Class):0 -> b
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
      # {"id":"com.android.tools.r8.synthesized"}
    12:54:java.lang.Class findParcelClass(java.lang.Class):0:0 -> b
    55:58:java.lang.Class findParcelClass(java.lang.Class):0:0 -> b
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(0)"]}
    1:7:java.lang.Object androidx.collection.SimpleArrayMap.get(java.lang.Object):0:0 -> c
    1:7:java.lang.reflect.Method getReadMethod(java.lang.String):0 -> c
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
      # {"id":"com.android.tools.r8.synthesized"}
    8:36:java.lang.reflect.Method getReadMethod(java.lang.String):0:0 -> c
    37:40:java.lang.reflect.Method getReadMethod(java.lang.String):0:0 -> c
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(0)"]}
    5:11:java.lang.Object androidx.collection.SimpleArrayMap.get(java.lang.Object):0:0 -> d
    5:11:java.lang.reflect.Method getWriteMethod(java.lang.Class):0 -> d
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
      # {"id":"com.android.tools.r8.synthesized"}
    12:43:java.lang.reflect.Method getWriteMethod(java.lang.Class):0:0 -> d
    44:47:java.lang.reflect.Method getWriteMethod(java.lang.Class):0:0 -> d
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(0)"]}
    boolean readField(int) -> e
    11:17:int androidx.versionedparcelable.VersionedParcelParcel.readInt():0:0 -> f
    11:17:int readInt(int,int):0 -> f
    11:23:android.os.Parcelable androidx.versionedparcelable.VersionedParcelParcel.readParcelable():0:0 -> g
    11:23:android.os.Parcelable readParcelable(android.os.Parcelable,int):0 -> g
    4:13:java.lang.String androidx.versionedparcelable.VersionedParcelParcel.readString():0:0 -> h
    4:13:androidx.versionedparcelable.VersionedParcelable readVersionedParcelable():0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Li/d;"}
    14:17:androidx.versionedparcelable.VersionedParcelable readVersionedParcelable():0:0 -> h
    18:85:androidx.versionedparcelable.VersionedParcelable androidx.versionedparcelable.VersionedParcel.readFromParcel(java.lang.String,androidx.versionedparcelable.VersionedParcel):0:0 -> h
    18:85:androidx.versionedparcelable.VersionedParcelable readVersionedParcelable():0 -> h
    void setOutputField(int) -> i
    7:12:void androidx.versionedparcelable.VersionedParcelParcel.writeString(java.lang.String):0:0 -> j
    7:12:void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable):0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li/d;)V"}
    13:27:void androidx.versionedparcelable.VersionedParcel.writeVersionedParcelableCreator(androidx.versionedparcelable.VersionedParcelable):0:0 -> j
    13:27:void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable):0 -> j
    28:32:void androidx.versionedparcelable.VersionedParcelParcel.writeString(java.lang.String):0:0 -> j
    28:32:void androidx.versionedparcelable.VersionedParcel.writeVersionedParcelableCreator(androidx.versionedparcelable.VersionedParcelable):0 -> j
    28:32:void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable):0 -> j
    33:36:void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable):0:0 -> j
    37:56:void androidx.versionedparcelable.VersionedParcel.writeToParcel(androidx.versionedparcelable.VersionedParcelable,androidx.versionedparcelable.VersionedParcel):0:0 -> j
    37:56:void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable):0 -> j
    57:85:void androidx.versionedparcelable.VersionedParcelParcel.closeField():0:0 -> j
    57:85:void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable):0 -> j
    86:136:void androidx.versionedparcelable.VersionedParcel.writeToParcel(androidx.versionedparcelable.VersionedParcelable,androidx.versionedparcelable.VersionedParcel):0:0 -> j
    86:136:void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable):0 -> j
    137:156:void androidx.versionedparcelable.VersionedParcel.writeVersionedParcelableCreator(androidx.versionedparcelable.VersionedParcelable):0:0 -> j
    137:156:void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable):0 -> j
androidx.versionedparcelable.VersionedParcelParcel -> i.c:
    android.util.SparseIntArray mPositionLookup -> d
    android.os.Parcel mParcel -> e
    int mOffset -> f
    int mEnd -> g
    java.lang.String mPrefix -> h
    int mCurrentField -> i
    int mNextRead -> j
    int mFieldId -> k
    1:1:void <init>(android.os.Parcel):0:0 -> <init>
    2:2:void <init>(android.os.Parcel,int,int,java.lang.String,androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.ArrayMap):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/Parcel;IILjava/lang/String;Lc/b;Lc/b;Lc/b;)V"}
    1:1:androidx.versionedparcelable.VersionedParcel createSubParcel():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Li/c;"}
    1:1:boolean readField(int):0:0 -> e
    1:27:void androidx.versionedparcelable.VersionedParcelParcel.closeField():0:0 -> i
    1:27:void setOutputField(int):0 -> i
    28:37:void setOutputField(int):0:0 -> i
    38:44:void androidx.versionedparcelable.VersionedParcelParcel.writeInt(int):0:0 -> i
    38:44:void setOutputField(int):0 -> i
androidx.versionedparcelable.VersionedParcelable -> i.d:
io.flutter.embedding.engine.FlutterEngine -> j.b:
io.flutter.embedding.engine.FlutterEngine$EngineLifecycleListener -> j.a:
io.flutter.embedding.engine.FlutterJNI -> io.flutter.embedding.engine.FlutterJNI:
    1:1:void $r8$lambda$2fUF03zsar2dpLbGJv6IUmJU-0A(long,android.graphics.ImageDecoder,android.graphics.ImageDecoder$ImageInfo,android.graphics.ImageDecoder$Source):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void addEngineLifecycleListener(io.flutter.embedding.engine.FlutterEngine$EngineLifecycleListener):0:0 -> addEngineLifecycleListener
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/a;)V"}
    26:30:void io.flutter.Log.e(java.lang.String,java.lang.String,java.lang.Throwable):0:0 -> decodeImage
    26:30:android.graphics.Bitmap decodeImage(java.nio.ByteBuffer,long):0 -> decodeImage
    44:47:void io.flutter.Log.w(java.lang.String,java.lang.String):0:0 -> dispatchEmptyPlatformMessage
    44:47:void dispatchEmptyPlatformMessage(java.lang.String,int):0 -> dispatchEmptyPlatformMessage
    1:1:void io.flutter.Log.w(java.lang.String,java.lang.String):0:0 -> dispatchPlatformMessage
    1:1:void dispatchPlatformMessage(java.lang.String,java.nio.ByteBuffer,int,int):0 -> dispatchPlatformMessage
    1:1:void dispatchSemanticsAction(int,int,java.nio.ByteBuffer,int):0:0 -> dispatchSemanticsAction
    2:2:void dispatchSemanticsAction(int,io.flutter.view.AccessibilityBridge$Action):0:0 -> dispatchSemanticsAction
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILio/flutter/view/a;)V"}
    3:3:java.nio.ByteBuffer io.flutter.plugin.common.StandardMessageCodec.encodeMessage(java.lang.Object):0:0 -> dispatchSemanticsAction
    3:3:void dispatchSemanticsAction(int,io.flutter.view.AccessibilityBridge$Action,java.lang.Object):0 -> dispatchSemanticsAction
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILio/flutter/view/a;Ljava/lang/Object;)V"}
    4:4:void dispatchSemanticsAction(int,io.flutter.view.AccessibilityBridge$Action,java.lang.Object):0:0 -> dispatchSemanticsAction
    1:4:io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue$SentConfiguration io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue.getConfiguration(int):0:0 -> getScaledFontSize
    1:4:android.util.DisplayMetrics io.flutter.embedding.engine.systemchannels.SettingsChannel.getPastDisplayMetrics(int):0 -> getScaledFontSize
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    1:4:float getScaledFontSize(float,int):0 -> getScaledFontSize
    5:36:io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue$SentConfiguration io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue.getConfiguration(int):0:0 -> getScaledFontSize
    5:36:android.util.DisplayMetrics io.flutter.embedding.engine.systemchannels.SettingsChannel.getPastDisplayMetrics(int):0 -> getScaledFontSize
    5:36:float getScaledFontSize(float,int):0 -> getScaledFontSize
    37:39:void io.flutter.Log.e(java.lang.String,java.lang.String):0:0 -> getScaledFontSize
    37:39:io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue$SentConfiguration io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue.getConfiguration(int):0 -> getScaledFontSize
    37:39:android.util.DisplayMetrics io.flutter.embedding.engine.systemchannels.SettingsChannel.getPastDisplayMetrics(int):0 -> getScaledFontSize
    37:39:float getScaledFontSize(float,int):0 -> getScaledFontSize
    40:64:float getScaledFontSize(float,int):0:0 -> getScaledFontSize
    65:70:void io.flutter.Log.e(java.lang.String,java.lang.String):0:0 -> getScaledFontSize
    65:70:float getScaledFontSize(float,int):0 -> getScaledFontSize
    1:1:void io.flutter.Log.w(java.lang.String,java.lang.String):0:0 -> init
    1:1:void init(android.content.Context,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,long):0 -> init
    2:2:void init(android.content.Context,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,long):0:0 -> init
    42:44:void io.flutter.Log.w(java.lang.String,java.lang.String):0:0 -> invokePlatformMessageEmptyResponseCallback
    42:44:void invokePlatformMessageEmptyResponseCallback(int):0 -> invokePlatformMessageEmptyResponseCallback
    45:65:void invokePlatformMessageEmptyResponseCallback(int):0:0 -> invokePlatformMessageEmptyResponseCallback
    52:54:void io.flutter.Log.w(java.lang.String,java.lang.String):0:0 -> invokePlatformMessageResponseCallback
    52:54:void invokePlatformMessageResponseCallback(int,java.nio.ByteBuffer,int):0 -> invokePlatformMessageResponseCallback
    55:83:void invokePlatformMessageResponseCallback(int,java.nio.ByteBuffer,int):0:0 -> invokePlatformMessageResponseCallback
    9:13:void io.flutter.Log.w(java.lang.String,java.lang.String):0:0 -> loadLibrary
    9:13:void loadLibrary():0 -> loadLibrary
    14:20:void loadLibrary():0:0 -> loadLibrary
    9:11:void io.flutter.Log.w(java.lang.String,java.lang.String):0:0 -> prefetchDefaultFontManager
    9:11:void prefetchDefaultFontManager():0 -> prefetchDefaultFontManager
    12:18:void prefetchDefaultFontManager():0:0 -> prefetchDefaultFontManager
    1:1:void removeEngineLifecycleListener(io.flutter.embedding.engine.FlutterEngine$EngineLifecycleListener):0:0 -> removeEngineLifecycleListener
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/a;)V"}
    5:8:void io.flutter.Log.e(java.lang.String,java.lang.String):0:0 -> requestDartDeferredLibrary
    5:8:void requestDartDeferredLibrary(int):0 -> requestDartDeferredLibrary
    1:1:void setAccessibilityDelegate(io.flutter.embedding.engine.FlutterJNI$AccessibilityDelegate):0:0 -> setAccessibilityDelegate
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/d;)V"}
    1:1:void setAsyncWaitForVsyncDelegate(io.flutter.embedding.engine.FlutterJNI$AsyncWaitForVsyncDelegate):0:0 -> setAsyncWaitForVsyncDelegate
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/e;)V"}
    1:1:void setDeferredComponentManager(io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager):0:0 -> setDeferredComponentManager
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/a;)V"}
    1:1:void setLocalizationPlugin(io.flutter.plugin.localization.LocalizationPlugin):0:0 -> setLocalizationPlugin
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lp/a;)V"}
    1:1:void setPlatformMessageHandler(io.flutter.embedding.engine.dart.PlatformMessageHandler):0:0 -> setPlatformMessageHandler
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk/a;)V"}
    1:1:void io.flutter.util.Preconditions.checkState(boolean,java.lang.Object):0:0 -> spawn
    1:1:io.flutter.embedding.engine.FlutterJNI spawn(java.lang.String,java.lang.String,java.lang.String,java.util.List):0 -> spawn
io.flutter.embedding.engine.FlutterJNI$$ExternalSyntheticLambda8 -> j.c:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    long io.flutter.embedding.engine.FlutterJNI$$InternalSyntheticLambda$1$2a5524ed219e708ff31c82ad8e0395d5d0898b08cb74f1a02a2f346a4db7f98c$1.f$0 -> a
    1:1:void io.flutter.embedding.engine.FlutterJNI$$InternalSyntheticLambda$1$2a5524ed219e708ff31c82ad8e0395d5d0898b08cb74f1a02a2f346a4db7f98c$1.<init>(long):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.embedding.engine.FlutterJNI$$InternalSyntheticLambda$1$2a5524ed219e708ff31c82ad8e0395d5d0898b08cb74f1a02a2f346a4db7f98c$1.onHeaderDecoded(android.graphics.ImageDecoder,android.graphics.ImageDecoder$ImageInfo,android.graphics.ImageDecoder$Source):0:0 -> onHeaderDecoded
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.engine.FlutterJNI$AccessibilityDelegate -> j.d:
io.flutter.embedding.engine.FlutterJNI$AsyncWaitForVsyncDelegate -> j.e:
io.flutter.embedding.engine.dart.PlatformMessageHandler -> k.a:
io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager -> l.a:
    void setJNI(io.flutter.embedding.engine.FlutterJNI) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()V"}
io.flutter.embedding.engine.renderer.FlutterRenderer -> io.flutter.embedding.engine.renderer.e:
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer -> io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer:
    34:35:void io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader.close():0:0 -> cleanup
    34:35:void cleanup():0 -> cleanup
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    36:46:void io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader.close():0:0 -> cleanup
    36:46:void cleanup():0 -> cleanup
    47:66:void cleanup():0:0 -> cleanup
    67:78:void io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader.close():0:0 -> cleanup
    67:78:void cleanup():0 -> cleanup
    79:90:void cleanup():0:0 -> cleanup
    24:25:io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImage io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader.dequeueImage():0:0 -> dequeueImage
    24:25:io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImage dequeueImage():0 -> dequeueImage
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lio/flutter/embedding/engine/renderer/b;"}
    26:43:io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImage io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader.dequeueImage():0:0 -> dequeueImage
    26:43:io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImage dequeueImage():0 -> dequeueImage
    44:65:io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImage dequeueImage():0:0 -> dequeueImage
    13:14:android.os.Handler io.flutter.embedding.engine.renderer.FlutterRenderer.access$500(io.flutter.embedding.engine.renderer.FlutterRenderer):0:0 -> finalize
    13:14:void finalize():0 -> finalize
    15:18:void finalize():0:0 -> finalize
    23:24:java.util.ArrayDeque io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader.access$900(io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader):0:0 -> numImages
    23:24:int numImages():0 -> numImages
    25:35:int numImages():0:0 -> numImages
    8:14:io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImage io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader.queueImage(android.media.Image):0:0 -> onImage
    8:14:void onImage(android.media.ImageReader,android.media.Image):0 -> onImage
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    15:48:io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImage io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader.queueImage(android.media.Image):0:0 -> onImage
    15:48:void onImage(android.media.ImageReader,android.media.Image):0 -> onImage
    49:52:void onImage(android.media.ImageReader,android.media.Image):0:0 -> onImage
    53:54:void io.flutter.embedding.engine.renderer.FlutterRenderer.access$600(io.flutter.embedding.engine.renderer.FlutterRenderer):0:0 -> onImage
    53:54:void onImage(android.media.ImageReader,android.media.Image):0 -> onImage
    55:56:void onImage(android.media.ImageReader,android.media.Image):0:0 -> onImage
    20:41:boolean io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader.canPrune():0:0 -> pruneImageReaderQueue
    20:41:void pruneImageReaderQueue():0 -> pruneImageReaderQueue
    42:53:void pruneImageReaderQueue():0:0 -> pruneImageReaderQueue
    54:63:void io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader.close():0:0 -> pruneImageReaderQueue
    54:63:void pruneImageReaderQueue():0 -> pruneImageReaderQueue
    10:10:void io.flutter.embedding.engine.renderer.FlutterRenderer.access$300(io.flutter.embedding.engine.renderer.FlutterRenderer,long):0:0 -> release
    10:10:void release():0 -> release
    8:8:java.util.List io.flutter.embedding.engine.renderer.FlutterRenderer.access$100(io.flutter.embedding.engine.renderer.FlutterRenderer):0:0 -> releaseInternal
    8:8:void releaseInternal():0 -> releaseInternal
    2:2:void io.flutter.embedding.engine.renderer.FlutterRenderer.access$600(io.flutter.embedding.engine.renderer.FlutterRenderer):0:0 -> scheduleFrame
    2:2:void scheduleFrame():0 -> scheduleFrame
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$$ExternalSyntheticApiModelOutline0 -> io.flutter.embedding.engine.renderer.a:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.hardware.SyncFence io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$$InternalSyntheticApiModelOutline$1$685e711b6a86eca5f914a3e20520c224bfc614c662da16953495279006885cfd$0.m(android.media.Image):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:android.media.ImageReader$Builder io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$$InternalSyntheticApiModelOutline$8$38fd5b78e06d091b60f0e5b6a1d96357f24d81029ca46c23e1073e66c97166de$0.m(int,int):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:android.media.ImageReader io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$$InternalSyntheticApiModelOutline$1$38fd5b78e06d091b60f0e5b6a1d96357f24d81029ca46c23e1073e66c97166de$3.m(android.media.ImageReader$Builder):0:0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$$InternalSyntheticApiModelOutline$8$38fd5b78e06d091b60f0e5b6a1d96357f24d81029ca46c23e1073e66c97166de$1.m():0:0 -> d
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$$InternalSyntheticApiModelOutline$1$685e711b6a86eca5f914a3e20520c224bfc614c662da16953495279006885cfd$1.m(android.hardware.SyncFence):0:0 -> e
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/hardware/SyncFence;)V"}
    1:1:android.media.ImageReader$Builder io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$$InternalSyntheticApiModelOutline$1$38fd5b78e06d091b60f0e5b6a1d96357f24d81029ca46c23e1073e66c97166de$0.m(android.media.ImageReader$Builder,int):0:0 -> f
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/media/ImageReader$Builder;)V"}
    1:1:android.media.ImageReader$Builder io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$$InternalSyntheticApiModelOutline$1$38fd5b78e06d091b60f0e5b6a1d96357f24d81029ca46c23e1073e66c97166de$1.m(android.media.ImageReader$Builder,int):0:0 -> g
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/media/ImageReader$Builder;)V"}
    1:1:android.media.ImageReader$Builder io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$$InternalSyntheticApiModelOutline$1$38fd5b78e06d091b60f0e5b6a1d96357f24d81029ca46c23e1073e66c97166de$2.m(android.media.ImageReader$Builder,long):0:0 -> h
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/media/ImageReader$Builder;)V"}
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImage -> io.flutter.embedding.engine.renderer.b:
    android.media.Image image -> a
    io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer this$1 -> b
    1:1:void <init>(io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer,android.media.Image,long):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/engine/renderer/FlutterRenderer$ImageReaderSurfaceProducer;Landroid/media/Image;)V"}
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader -> io.flutter.embedding.engine.renderer.d:
    android.media.ImageReader reader -> a
    java.util.ArrayDeque imageQueue -> b
    boolean closed -> c
    io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer this$1 -> d
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader$$ExternalSyntheticLambda0 -> io.flutter.embedding.engine.renderer.c:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader$$InternalSyntheticLambda$1$fbd8cf905037c3de078ec66e7223e3298cff8af27e641bd1b0ba7b197b23c7ed$0.f$0 -> a
    1:1:void io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader$$InternalSyntheticLambda$1$fbd8cf905037c3de078ec66e7223e3298cff8af27e641bd1b0ba7b197b23c7ed$0.<init>(io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/engine/renderer/d;)V"}
    6:27:void io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader.lambda$new$0(android.media.ImageReader):0:0 -> onImageAvailable
    6:27:void io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader$$InternalSyntheticLambda$1$fbd8cf905037c3de078ec66e7223e3298cff8af27e641bd1b0ba7b197b23c7ed$0.onImageAvailable(android.media.ImageReader):0 -> onImageAvailable
      # {"id":"com.android.tools.r8.synthesized"}
    28:34:void io.flutter.Log.e(java.lang.String,java.lang.String):0:0 -> onImageAvailable
    28:34:void io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader.lambda$new$0(android.media.ImageReader):0 -> onImageAvailable
    28:34:void io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader$$InternalSyntheticLambda$1$fbd8cf905037c3de078ec66e7223e3298cff8af27e641bd1b0ba7b197b23c7ed$0.onImageAvailable(android.media.ImageReader):0 -> onImageAvailable
    35:55:void io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader.lambda$new$0(android.media.ImageReader):0:0 -> onImageAvailable
    35:55:void io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader$$InternalSyntheticLambda$1$fbd8cf905037c3de078ec66e7223e3298cff8af27e641bd1b0ba7b197b23c7ed$0.onImageAvailable(android.media.ImageReader):0 -> onImageAvailable
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry -> io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry:
    22:23:android.os.Handler io.flutter.embedding.engine.renderer.FlutterRenderer.access$500(io.flutter.embedding.engine.renderer.FlutterRenderer):0:0 -> finalize
    22:23:void finalize():0 -> finalize
    24:27:void finalize():0:0 -> finalize
    18:20:void io.flutter.Log.e(java.lang.String,java.lang.String):0:0 -> pushImage
    18:20:void pushImage(android.media.Image):0 -> pushImage
    21:27:void pushImage(android.media.Image):0:0 -> pushImage
    28:29:void io.flutter.embedding.engine.renderer.FlutterRenderer.access$600(io.flutter.embedding.engine.renderer.FlutterRenderer):0:0 -> pushImage
    28:29:void pushImage(android.media.Image):0 -> pushImage
    30:31:void pushImage(android.media.Image):0:0 -> pushImage
    19:19:void io.flutter.embedding.engine.renderer.FlutterRenderer.access$300(io.flutter.embedding.engine.renderer.FlutterRenderer,long):0:0 -> release
    19:19:void release():0 -> release
io.flutter.embedding.engine.renderer.FlutterUiDisplayListener -> io.flutter.embedding.engine.renderer.f:
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper -> io.flutter.embedding.engine.renderer.SurfaceTextureWrapper:
    1:1:void <init>(android.graphics.SurfaceTexture):0:0 -> <init>
    2:2:void <init>(android.graphics.SurfaceTexture,java.lang.Runnable):0:0 -> <init>
io.flutter.embedding.engine.systemchannels.SettingsChannel -> n.b:
    io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue CONFIGURATION_QUEUE -> a
    1:1:void <clinit>():0:0 -> <clinit>
io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue -> n.a:
    java.util.concurrent.ConcurrentLinkedQueue sentQueue -> a
    1:1:void <init>():0:0 -> <init>
io.flutter.plugin.common.StandardMessageCodec -> o.b:
    boolean LITTLE_ENDIAN -> a
    java.nio.charset.Charset UTF8 -> b
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void writeAlignment(java.io.ByteArrayOutputStream,int):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/a;I)V"}
    1:1:void writeInt(java.io.ByteArrayOutputStream,int):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/a;I)V"}
    1:1:void writeLong(java.io.ByteArrayOutputStream,long):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/a;J)V"}
    17:37:void io.flutter.plugin.common.StandardMessageCodec.writeChar(java.io.ByteArrayOutputStream,int):0:0 -> d
    17:37:void writeSize(java.io.ByteArrayOutputStream,int):0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/a;I)V"}
    38:44:void writeSize(java.io.ByteArrayOutputStream,int):0:0 -> d
    102:111:void io.flutter.plugin.common.StandardMessageCodec.writeBytes(java.io.ByteArrayOutputStream,byte[]):0:0 -> e
    102:111:void writeValue(java.io.ByteArrayOutputStream,java.lang.Object):0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/a;Ljava/lang/Object;)V"}
    112:148:void writeValue(java.io.ByteArrayOutputStream,java.lang.Object):0:0 -> e
    149:158:void io.flutter.plugin.common.StandardMessageCodec.writeDouble(java.io.ByteArrayOutputStream,double):0:0 -> e
    149:158:void writeValue(java.io.ByteArrayOutputStream,java.lang.Object):0 -> e
    159:188:void writeValue(java.io.ByteArrayOutputStream,java.lang.Object):0:0 -> e
    189:198:void io.flutter.plugin.common.StandardMessageCodec.writeBytes(java.io.ByteArrayOutputStream,byte[]):0:0 -> e
    189:198:void writeValue(java.io.ByteArrayOutputStream,java.lang.Object):0 -> e
    199:207:void writeValue(java.io.ByteArrayOutputStream,java.lang.Object):0:0 -> e
    208:217:void io.flutter.plugin.common.StandardMessageCodec.writeBytes(java.io.ByteArrayOutputStream,byte[]):0:0 -> e
    208:217:void writeValue(java.io.ByteArrayOutputStream,java.lang.Object):0 -> e
    218:298:void writeValue(java.io.ByteArrayOutputStream,java.lang.Object):0:0 -> e
    299:308:void io.flutter.plugin.common.StandardMessageCodec.writeDouble(java.io.ByteArrayOutputStream,double):0:0 -> e
    299:308:void writeValue(java.io.ByteArrayOutputStream,java.lang.Object):0 -> e
    309:420:void writeValue(java.io.ByteArrayOutputStream,java.lang.Object):0:0 -> e
    421:430:void io.flutter.plugin.common.StandardMessageCodec.writeFloat(java.io.ByteArrayOutputStream,float):0:0 -> e
    421:430:void writeValue(java.io.ByteArrayOutputStream,java.lang.Object):0 -> e
    431:471:void writeValue(java.io.ByteArrayOutputStream,java.lang.Object):0:0 -> e
io.flutter.plugin.common.StandardMessageCodec$ExposedByteArrayOutputStream -> o.a:
    1:1:byte[] buffer():0:0 -> a
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$$ExternalSyntheticApiModelOutline0 -> io.flutter.plugin.editing.a:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$$InternalSyntheticApiModelOutline$1$bd1cd9d0943ca231e7274d929fa7c010412d008ae6662d31a63e4bf50757d82d$0.m():0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:int io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback$$InternalSyntheticApiModelOutline$1$2cc005fa53a8049e244b5ffce5b2e308ea0dcdb0fed28f3a858d514c163d0b4f$0.m(android.view.WindowInsetsAnimation):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:android.graphics.Insets io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback$$InternalSyntheticApiModelOutline$1$b71cd158c488321664a8a05513cc1b2518b00c695b826cc4b8c6f88bf5c5e43d$3.m(android.view.WindowInsets,int):0:0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.WindowInsets io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$InsetsListener$$InternalSyntheticApiModelOutline$2$7621ae6b31d73989a7db55d84f222be8c49f3925f8ce880690142b667165942e$0.m():0:0 -> d
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.WindowInsetsAnimation io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback$$InternalSyntheticApiModelOutline$1$b71cd158c488321664a8a05513cc1b2518b00c695b826cc4b8c6f88bf5c5e43d$0.m(java.lang.Object):0:0 -> e
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.WindowMetrics io.flutter.plugin.platform.SingleViewWindowManager$$InternalSyntheticApiModelOutline$1$512bd08af4a4826aa6bf69ffea8b7559cd1ea1887827bdbe0ea32b6c735136b2$0.m(android.view.WindowManager):0:0 -> f
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$$InternalSyntheticApiModelOutline$1$4c819f8c8ad227d9802b1a549dcea82babc035996fc947c4508511c1b3807738$0.m(android.view.View,android.view.WindowInsetsAnimation$Callback):0:0 -> g
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;)V"}
    1:1:void io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$$InternalSyntheticApiModelOutline$1$524166dcacb1ec2521be0b4cc9c9bbb9c4da57519381d013591dedc3f0213233$0.m(android.view.View,android.view.WindowInsetsAnimation$Callback):0:0 -> h
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.WindowInsets$Builder io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback$$InternalSyntheticApiModelOutline$1$b71cd158c488321664a8a05513cc1b2518b00c695b826cc4b8c6f88bf5c5e43d$8.m(android.view.WindowInsets$Builder,int,android.graphics.Insets):0:0 -> i
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/WindowInsets$Builder;ILandroid/graphics/Insets;)V"}
    1:1:int io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback$$InternalSyntheticApiModelOutline$1$b71cd158c488321664a8a05513cc1b2518b00c695b826cc4b8c6f88bf5c5e43d$2.m():0:0 -> j
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.WindowMetrics io.flutter.plugin.platform.SingleViewWindowManager$$InternalSyntheticApiModelOutline$1$b5695396496141d2a4a17509d3a51c5da8d47d4a7cc9fb47cc5063a45bafcaeb$0.m(android.view.WindowManager):0:0 -> k
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$InsetsListener -> io.flutter.plugin.editing.b:
    io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback this$0 -> a
    1:6:void <init>(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback):0:0 -> <init>
    1:6:void <init>(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$1):0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/editing/ImeSyncDeferringInsetsCallback;)V"}
io.flutter.plugin.localization.LocalizationPlugin -> p.a:
io.flutter.plugin.platform.AccessibilityEventsDelegate -> io.flutter.plugin.platform.a:
io.flutter.plugin.platform.PlatformView -> io.flutter.plugin.platform.b:
io.flutter.plugin.platform.PlatformViewsController -> io.flutter.plugin.platform.c:
io.flutter.plugin.platform.SingleViewFakeWindowViewGroup -> io.flutter.plugin.platform.d:
    android.graphics.Rect viewBounds -> a
    android.graphics.Rect childRect -> b
    12:29:int atMost(int):0:0 -> onMeasure
    12:29:void onMeasure(int,int):0 -> onMeasure
    30:39:void onMeasure(int,int):0:0 -> onMeasure
io.flutter.plugin.platform.SingleViewPresentation -> io.flutter.plugin.platform.SingleViewPresentation:
    1:1:void io.flutter.plugin.platform.SingleViewPresentation$ImmContext.<init>(android.content.Context):0:0 -> <init>
    1:1:void <init>(android.content.Context,android.view.Display,io.flutter.plugin.platform.AccessibilityEventsDelegate,io.flutter.plugin.platform.SingleViewPresentation$PresentationState,android.view.View$OnFocusChangeListener,boolean):0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Landroid/view/Display;Lio/flutter/plugin/platform/a;Lio/flutter/plugin/platform/h;Landroid/view/View$OnFocusChangeListener;Z)V"}
    2:2:void <init>(android.content.Context,android.view.Display,io.flutter.plugin.platform.AccessibilityEventsDelegate,io.flutter.plugin.platform.SingleViewPresentation$PresentationState,android.view.View$OnFocusChangeListener,boolean):0:0 -> <init>
    3:3:void io.flutter.plugin.platform.SingleViewPresentation$ImmContext.<init>(android.content.Context):0:0 -> <init>
    3:3:void <init>(android.content.Context,android.view.Display,io.flutter.plugin.platform.PlatformView,io.flutter.plugin.platform.AccessibilityEventsDelegate,int,android.view.View$OnFocusChangeListener):0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Landroid/view/Display;Lio/flutter/plugin/platform/b;Lio/flutter/plugin/platform/a;ILandroid/view/View$OnFocusChangeListener;)V"}
    4:4:void <init>(android.content.Context,android.view.Display,io.flutter.plugin.platform.PlatformView,io.flutter.plugin.platform.AccessibilityEventsDelegate,int,android.view.View$OnFocusChangeListener):0:0 -> <init>
    3:7:io.flutter.plugin.platform.PlatformView io.flutter.plugin.platform.SingleViewPresentation$PresentationState.access$000(io.flutter.plugin.platform.SingleViewPresentation$PresentationState):0:0 -> getView
    3:7:io.flutter.plugin.platform.PlatformView getView():0 -> getView
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lio/flutter/plugin/platform/b;"}
    19:22:io.flutter.plugin.platform.SingleViewFakeWindowViewGroup io.flutter.plugin.platform.SingleViewPresentation$PresentationState.access$100(io.flutter.plugin.platform.SingleViewPresentation$PresentationState):0:0 -> onCreate
    19:22:void onCreate(android.os.Bundle):0 -> onCreate
    23:31:void onCreate(android.os.Bundle):0:0 -> onCreate
    32:33:io.flutter.plugin.platform.SingleViewFakeWindowViewGroup io.flutter.plugin.platform.SingleViewPresentation$PresentationState.access$102(io.flutter.plugin.platform.SingleViewPresentation$PresentationState,io.flutter.plugin.platform.SingleViewFakeWindowViewGroup):0:0 -> onCreate
    32:33:void onCreate(android.os.Bundle):0 -> onCreate
    34:35:void onCreate(android.os.Bundle):0:0 -> onCreate
    36:39:io.flutter.plugin.platform.WindowManagerHandler io.flutter.plugin.platform.SingleViewPresentation$PresentationState.access$200(io.flutter.plugin.platform.SingleViewPresentation$PresentationState):0:0 -> onCreate
    36:39:void onCreate(android.os.Bundle):0 -> onCreate
    40:55:void onCreate(android.os.Bundle):0:0 -> onCreate
    56:57:io.flutter.plugin.platform.SingleViewFakeWindowViewGroup io.flutter.plugin.platform.SingleViewPresentation$PresentationState.access$100(io.flutter.plugin.platform.SingleViewPresentation$PresentationState):0:0 -> onCreate
    56:57:void onCreate(android.os.Bundle):0 -> onCreate
    58:60:void onCreate(android.os.Bundle):0:0 -> onCreate
    61:62:io.flutter.plugin.platform.WindowManagerHandler io.flutter.plugin.platform.SingleViewPresentation$PresentationState.access$202(io.flutter.plugin.platform.SingleViewPresentation$PresentationState,io.flutter.plugin.platform.WindowManagerHandler):0:0 -> onCreate
    61:62:void onCreate(android.os.Bundle):0 -> onCreate
    63:81:void onCreate(android.os.Bundle):0:0 -> onCreate
    82:83:io.flutter.plugin.platform.WindowManagerHandler io.flutter.plugin.platform.SingleViewPresentation$PresentationState.access$200(io.flutter.plugin.platform.SingleViewPresentation$PresentationState):0:0 -> onCreate
    82:83:void onCreate(android.os.Bundle):0 -> onCreate
    84:90:void onCreate(android.os.Bundle):0:0 -> onCreate
    91:94:io.flutter.plugin.platform.PlatformView io.flutter.plugin.platform.SingleViewPresentation$PresentationState.access$000(io.flutter.plugin.platform.SingleViewPresentation$PresentationState):0:0 -> onCreate
    91:94:void onCreate(android.os.Bundle):0 -> onCreate
    95:95:void onCreate(android.os.Bundle):0:0 -> onCreate
io.flutter.plugin.platform.SingleViewPresentation$AccessibilityDelegatingFrameLayout -> io.flutter.plugin.platform.e:
io.flutter.plugin.platform.SingleViewPresentation$ImmContext -> io.flutter.plugin.platform.f:
    android.view.inputmethod.InputMethodManager inputMethodManager -> a
io.flutter.plugin.platform.SingleViewPresentation$PresentationContext -> io.flutter.plugin.platform.g:
    io.flutter.plugin.platform.WindowManagerHandler windowManagerHandler -> a
    android.view.WindowManager windowManager -> b
    android.content.Context flutterAppWindowContext -> c
    9:64:boolean isCalledFromAlertDialog():0:0 -> getSystemService
    9:64:java.lang.Object getSystemService(java.lang.String):0 -> getSystemService
    65:71:java.lang.Object getSystemService(java.lang.String):0:0 -> getSystemService
    72:82:android.view.WindowManager getWindowManager():0:0 -> getSystemService
    72:82:java.lang.Object getSystemService(java.lang.String):0 -> getSystemService
    83:87:java.lang.Object getSystemService(java.lang.String):0:0 -> getSystemService
io.flutter.plugin.platform.SingleViewPresentation$PresentationState -> io.flutter.plugin.platform.h:
    io.flutter.plugin.platform.WindowManagerHandler windowManagerHandler -> a
    io.flutter.plugin.platform.SingleViewFakeWindowViewGroup fakeWindowViewGroup -> b
io.flutter.plugin.platform.SingleViewWindowManager$$ExternalSyntheticApiModelOutline1 -> io.flutter.plugin.platform.i:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.plugin.platform.SingleViewWindowManager$$InternalSyntheticApiModelOutline$1$9f3564965ce31d288bde81f28853716eb3fae64fc3aab63ca1d7fbaecc73ea7a$0.m(android.view.WindowManager,java.util.concurrent.Executor,java.util.function.Consumer):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.plugin.platform.SingleViewWindowManager$$InternalSyntheticApiModelOutline$1$573fc38649fc257e28a079cf4377be00db9d882e093f28e1ee82d89fe072ef33$0.m(android.view.WindowManager,java.util.function.Consumer):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean io.flutter.plugin.platform.SingleViewWindowManager$$InternalSyntheticApiModelOutline$1$953a50dd753cf993668a5b905947d63b7720120083cc0cc67dc3ddce466ca3e4$0.m(android.view.WindowManager):0:0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.plugin.platform.SingleViewWindowManager$$InternalSyntheticApiModelOutline$1$9b7d142d148c8d8a447edf4d1839198704c3a116777d705c82e3b6107b939476$0.m(android.view.WindowManager,java.util.function.Consumer):0:0 -> d
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.platform.WindowManagerHandler -> io.flutter.plugin.platform.j:
    android.view.WindowManager io.flutter.plugin.platform.SingleViewWindowManager.delegate -> a
    io.flutter.plugin.platform.SingleViewFakeWindowViewGroup io.flutter.plugin.platform.SingleViewWindowManager.fakeWindowRootView -> b
    1:8:void io.flutter.plugin.platform.SingleViewWindowManager.<init>(android.view.WindowManager,io.flutter.plugin.platform.SingleViewFakeWindowViewGroup):0:0 -> <init>
    1:8:void <init>(android.view.WindowManager,io.flutter.plugin.platform.SingleViewFakeWindowViewGroup):0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/WindowManager;Lio/flutter/plugin/platform/d;)V"}
    1:1:void io.flutter.plugin.platform.SingleViewWindowManager.addCrossWindowBlurEnabledListener(java.util.concurrent.Executor,java.util.function.Consumer):0:0 -> a
    1:1:void addCrossWindowBlurEnabledListener(java.util.concurrent.Executor,java.util.function.Consumer):0:0 -> addCrossWindowBlurEnabledListener
      # {"id":"com.android.tools.r8.synthesized"}
    2:2:void addCrossWindowBlurEnabledListener(java.util.function.Consumer):0:0 -> addCrossWindowBlurEnabledListener
      # {"id":"com.android.tools.r8.synthesized"}
    1:4:void addView(android.view.View,android.view.ViewGroup$LayoutParams):0:0 -> addView
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.plugin.platform.SingleViewWindowManager.addCrossWindowBlurEnabledListener(java.util.function.Consumer):0:0 -> b
    9:12:void io.flutter.Log.w(java.lang.String,java.lang.String):0:0 -> c
    9:12:void io.flutter.plugin.platform.SingleViewWindowManager.addView(android.view.View,android.view.ViewGroup$LayoutParams):0 -> c
    13:16:void io.flutter.plugin.platform.SingleViewWindowManager.addView(android.view.View,android.view.ViewGroup$LayoutParams):0:0 -> c
    1:1:android.view.WindowMetrics io.flutter.plugin.platform.SingleViewWindowManager.getCurrentWindowMetrics():0:0 -> d
    1:1:android.view.Display io.flutter.plugin.platform.SingleViewWindowManager.getDefaultDisplay():0:0 -> e
    1:1:android.view.WindowMetrics io.flutter.plugin.platform.SingleViewWindowManager.getMaximumWindowMetrics():0:0 -> f
    1:1:boolean io.flutter.plugin.platform.SingleViewWindowManager.isCrossWindowBlurEnabled():0:0 -> g
    1:5:android.view.WindowMetrics getCurrentWindowMetrics():0:0 -> getCurrentWindowMetrics
      # {"id":"com.android.tools.r8.synthesized"}
    1:5:android.view.Display getDefaultDisplay():0:0 -> getDefaultDisplay
      # {"id":"com.android.tools.r8.synthesized"}
    1:5:android.view.WindowMetrics getMaximumWindowMetrics():0:0 -> getMaximumWindowMetrics
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.plugin.platform.SingleViewWindowManager.removeCrossWindowBlurEnabledListener(java.util.function.Consumer):0:0 -> h
    9:12:void io.flutter.Log.w(java.lang.String,java.lang.String):0:0 -> i
    9:12:void io.flutter.plugin.platform.SingleViewWindowManager.removeView(android.view.View):0 -> i
    13:16:void io.flutter.plugin.platform.SingleViewWindowManager.removeView(android.view.View):0:0 -> i
    1:5:boolean isCrossWindowBlurEnabled():0:0 -> isCrossWindowBlurEnabled
      # {"id":"com.android.tools.r8.synthesized"}
    9:12:void io.flutter.Log.w(java.lang.String,java.lang.String):0:0 -> j
    9:12:void io.flutter.plugin.platform.SingleViewWindowManager.removeViewImmediate(android.view.View):0 -> j
    13:19:void io.flutter.plugin.platform.SingleViewWindowManager.removeViewImmediate(android.view.View):0:0 -> j
    9:12:void io.flutter.Log.w(java.lang.String,java.lang.String):0:0 -> k
    9:12:void io.flutter.plugin.platform.SingleViewWindowManager.updateViewLayout(android.view.View,android.view.ViewGroup$LayoutParams):0 -> k
    13:16:void io.flutter.plugin.platform.SingleViewWindowManager.updateViewLayout(android.view.View,android.view.ViewGroup$LayoutParams):0:0 -> k
    1:4:void removeCrossWindowBlurEnabledListener(java.util.function.Consumer):0:0 -> removeCrossWindowBlurEnabledListener
      # {"id":"com.android.tools.r8.synthesized"}
    1:4:void removeView(android.view.View):0:0 -> removeView
      # {"id":"com.android.tools.r8.synthesized"}
    1:4:void removeViewImmediate(android.view.View):0:0 -> removeViewImmediate
      # {"id":"com.android.tools.r8.synthesized"}
    1:4:void updateViewLayout(android.view.View,android.view.ViewGroup$LayoutParams):0:0 -> updateViewLayout
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugins.GeneratedPluginRegistrant -> io.flutter.plugins.GeneratedPluginRegistrant:
    1:1:void registerWith(io.flutter.embedding.engine.FlutterEngine):0:0 -> registerWith
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/b;)V"}
io.flutter.view.AccessibilityBridge$Action -> io.flutter.view.a:
    int value -> a
    io.flutter.view.AccessibilityBridge$Action[] $VALUES -> b
io.flutter.view.AccessibilityViewEmbedder -> io.flutter.view.AccessibilityViewEmbedder:
    11:12:java.lang.Long io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors.getChildId(android.view.accessibility.AccessibilityNodeInfo,int):0:0 -> addChildrenToFlutterNode
    11:12:java.lang.Long io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors.access$500(io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors,android.view.accessibility.AccessibilityNodeInfo,int):0 -> addChildrenToFlutterNode
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    11:12:void addChildrenToFlutterNode(android.view.accessibility.AccessibilityNodeInfo,android.view.View,android.view.accessibility.AccessibilityNodeInfo):0 -> addChildrenToFlutterNode
    13:87:java.lang.Long io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors.getChildId(android.view.accessibility.AccessibilityNodeInfo,int):0:0 -> addChildrenToFlutterNode
    13:87:java.lang.Long io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors.access$500(io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors,android.view.accessibility.AccessibilityNodeInfo,int):0 -> addChildrenToFlutterNode
    13:87:void addChildrenToFlutterNode(android.view.accessibility.AccessibilityNodeInfo,android.view.View,android.view.accessibility.AccessibilityNodeInfo):0 -> addChildrenToFlutterNode
    88:94:void io.flutter.Log.w(java.lang.String,java.lang.String,java.lang.Throwable):0:0 -> addChildrenToFlutterNode
    88:94:java.lang.Long io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors.getChildId(android.view.accessibility.AccessibilityNodeInfo,int):0 -> addChildrenToFlutterNode
    88:94:java.lang.Long io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors.access$500(io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors,android.view.accessibility.AccessibilityNodeInfo,int):0 -> addChildrenToFlutterNode
    88:94:void addChildrenToFlutterNode(android.view.accessibility.AccessibilityNodeInfo,android.view.View,android.view.accessibility.AccessibilityNodeInfo):0 -> addChildrenToFlutterNode
    95:147:void addChildrenToFlutterNode(android.view.accessibility.AccessibilityNodeInfo,android.view.View,android.view.accessibility.AccessibilityNodeInfo):0:0 -> addChildrenToFlutterNode
    7:15:java.lang.Long io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors.getSourceNodeId(android.view.accessibility.AccessibilityNodeInfo):0:0 -> getRootNode
    7:15:java.lang.Long io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors.access$100(io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors,android.view.accessibility.AccessibilityNodeInfo):0 -> getRootNode
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    7:15:android.view.accessibility.AccessibilityNodeInfo getRootNode(android.view.View,int,android.graphics.Rect):0 -> getRootNode
    16:31:java.lang.Long io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors.getSourceNodeId(android.view.accessibility.AccessibilityNodeInfo):0:0 -> getRootNode
    16:31:java.lang.Long io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors.access$100(io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors,android.view.accessibility.AccessibilityNodeInfo):0 -> getRootNode
    16:31:android.view.accessibility.AccessibilityNodeInfo getRootNode(android.view.View,int,android.graphics.Rect):0 -> getRootNode
    32:38:void io.flutter.Log.w(java.lang.String,java.lang.String,java.lang.Throwable):0:0 -> getRootNode
    32:38:java.lang.Long io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors.getSourceNodeId(android.view.accessibility.AccessibilityNodeInfo):0 -> getRootNode
    32:38:java.lang.Long io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors.access$100(io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors,android.view.accessibility.AccessibilityNodeInfo):0 -> getRootNode
    32:38:android.view.accessibility.AccessibilityNodeInfo getRootNode(android.view.View,int,android.graphics.Rect):0 -> getRootNode
    39:59:android.view.accessibility.AccessibilityNodeInfo getRootNode(android.view.View,int,android.graphics.Rect):0:0 -> getRootNode
    3:11:java.lang.Long io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors.getParentNodeId(android.view.accessibility.AccessibilityNodeInfo):0:0 -> setFlutterNodeParent
    3:11:java.lang.Long io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors.access$300(io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors,android.view.accessibility.AccessibilityNodeInfo):0 -> setFlutterNodeParent
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    3:11:void setFlutterNodeParent(android.view.accessibility.AccessibilityNodeInfo,android.view.View,android.view.accessibility.AccessibilityNodeInfo):0 -> setFlutterNodeParent
    12:33:java.lang.Long io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors.getParentNodeId(android.view.accessibility.AccessibilityNodeInfo):0:0 -> setFlutterNodeParent
    12:33:java.lang.Long io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors.access$300(io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors,android.view.accessibility.AccessibilityNodeInfo):0 -> setFlutterNodeParent
    12:33:void setFlutterNodeParent(android.view.accessibility.AccessibilityNodeInfo,android.view.View,android.view.accessibility.AccessibilityNodeInfo):0 -> setFlutterNodeParent
    34:36:void io.flutter.Log.w(java.lang.String,java.lang.String,java.lang.Throwable):0:0 -> setFlutterNodeParent
    34:36:java.lang.Long io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors.getParentNodeId(android.view.accessibility.AccessibilityNodeInfo):0 -> setFlutterNodeParent
    34:36:java.lang.Long io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors.access$300(io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors,android.view.accessibility.AccessibilityNodeInfo):0 -> setFlutterNodeParent
    34:36:void setFlutterNodeParent(android.view.accessibility.AccessibilityNodeInfo,android.view.View,android.view.accessibility.AccessibilityNodeInfo):0 -> setFlutterNodeParent
    37:45:java.lang.Long io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors.yoinkParentIdFromParcel(android.view.accessibility.AccessibilityNodeInfo):0:0 -> setFlutterNodeParent
    37:45:java.lang.Long io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors.getParentNodeId(android.view.accessibility.AccessibilityNodeInfo):0 -> setFlutterNodeParent
    37:45:java.lang.Long io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors.access$300(io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors,android.view.accessibility.AccessibilityNodeInfo):0 -> setFlutterNodeParent
    37:45:void setFlutterNodeParent(android.view.accessibility.AccessibilityNodeInfo,android.view.View,android.view.accessibility.AccessibilityNodeInfo):0 -> setFlutterNodeParent
    46:50:void io.flutter.Log.w(java.lang.String,java.lang.String):0:0 -> setFlutterNodeParent
    46:50:java.lang.Long io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors.yoinkParentIdFromParcel(android.view.accessibility.AccessibilityNodeInfo):0 -> setFlutterNodeParent
    46:50:java.lang.Long io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors.getParentNodeId(android.view.accessibility.AccessibilityNodeInfo):0 -> setFlutterNodeParent
    46:50:java.lang.Long io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors.access$300(io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors,android.view.accessibility.AccessibilityNodeInfo):0 -> setFlutterNodeParent
    46:50:void setFlutterNodeParent(android.view.accessibility.AccessibilityNodeInfo,android.view.View,android.view.accessibility.AccessibilityNodeInfo):0 -> setFlutterNodeParent
    51:123:java.lang.Long io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors.yoinkParentIdFromParcel(android.view.accessibility.AccessibilityNodeInfo):0:0 -> setFlutterNodeParent
    51:123:java.lang.Long io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors.getParentNodeId(android.view.accessibility.AccessibilityNodeInfo):0 -> setFlutterNodeParent
    51:123:java.lang.Long io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors.access$300(io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors,android.view.accessibility.AccessibilityNodeInfo):0 -> setFlutterNodeParent
    51:123:void setFlutterNodeParent(android.view.accessibility.AccessibilityNodeInfo,android.view.View,android.view.accessibility.AccessibilityNodeInfo):0 -> setFlutterNodeParent
    124:156:void setFlutterNodeParent(android.view.accessibility.AccessibilityNodeInfo,android.view.View,android.view.accessibility.AccessibilityNodeInfo):0:0 -> setFlutterNodeParent
io.flutter.view.AccessibilityViewEmbedder$$ExternalSyntheticApiModelOutline0 -> io.flutter.view.b:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.view.AccessibilityViewEmbedder$$InternalSyntheticApiModelOutline$1$5748db92e5ea0bf57e589b03ebff6c44bee4cdfa760f588503b01ab99cdc139b$1.m(android.view.accessibility.AccessibilityNodeInfo,boolean):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean io.flutter.view.AccessibilityViewEmbedder$$InternalSyntheticApiModelOutline$1$5748db92e5ea0bf57e589b03ebff6c44bee4cdfa760f588503b01ab99cdc139b$0.m(android.view.accessibility.AccessibilityNodeInfo):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.view.AccessibilityViewEmbedder$$ExternalSyntheticApiModelOutline10 -> io.flutter.view.c:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.graphics.ColorSpace$Named io.flutter.embedding.engine.FlutterJNI$$InternalSyntheticApiModelOutline$1$2ca0fe582a9db9d2350370c904ee14f01e2f7fb5b73338825d8c63007f5abfe0$0.m():0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:android.graphics.ColorSpace io.flutter.embedding.engine.FlutterJNI$$InternalSyntheticApiModelOutline$1$2ca0fe582a9db9d2350370c904ee14f01e2f7fb5b73338825d8c63007f5abfe0$1.m(android.graphics.ColorSpace$Named):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.lang.CharSequence io.flutter.view.AccessibilityViewEmbedder$$InternalSyntheticApiModelOutline$1$5748db92e5ea0bf57e589b03ebff6c44bee4cdfa760f588503b01ab99cdc139b$8.m(android.view.accessibility.AccessibilityNodeInfo):0:0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.util.List io.flutter.view.AccessibilityViewEmbedder$$InternalSyntheticApiModelOutline$1$5748db92e5ea0bf57e589b03ebff6c44bee4cdfa760f588503b01ab99cdc139b$6.m(android.view.accessibility.AccessibilityNodeInfo):0:0 -> d
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.view.AccessibilityViewEmbedder$$InternalSyntheticApiModelOutline$1$5748db92e5ea0bf57e589b03ebff6c44bee4cdfa760f588503b01ab99cdc139b$9.m(android.view.accessibility.AccessibilityNodeInfo,java.lang.CharSequence):0:0 -> e
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.view.AccessibilityViewEmbedder$$InternalSyntheticApiModelOutline$1$5748db92e5ea0bf57e589b03ebff6c44bee4cdfa760f588503b01ab99cdc139b$7.m(android.view.accessibility.AccessibilityNodeInfo,java.util.List):0:0 -> f
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.view.AccessibilityViewEmbedder$$InternalSyntheticApiModelOutline$1$5748db92e5ea0bf57e589b03ebff6c44bee4cdfa760f588503b01ab99cdc139b$11.m(android.view.accessibility.AccessibilityNodeInfo,boolean):0:0 -> g
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean io.flutter.view.AccessibilityViewEmbedder$$InternalSyntheticApiModelOutline$1$5748db92e5ea0bf57e589b03ebff6c44bee4cdfa760f588503b01ab99cdc139b$10.m(android.view.accessibility.AccessibilityNodeInfo):0:0 -> h
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors -> io.flutter.view.d:
    java.lang.reflect.Method getSourceNodeId -> a
    java.lang.reflect.Method getParentNodeId -> b
    java.lang.reflect.Method getRecordSourceNodeId -> c
    java.lang.reflect.Method getChildId -> d
    java.lang.reflect.Field childNodeIdsField -> e
    java.lang.reflect.Method longArrayGetIndex -> f
    3:20:void <init>():0:0 -> <init>
    3:20:void <init>(io.flutter.view.AccessibilityViewEmbedder$1):0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"()V"}
    21:24:void io.flutter.Log.w(java.lang.String,java.lang.String):0:0 -> <init>
    21:24:void <init>():0 -> <init>
    21:24:void <init>(io.flutter.view.AccessibilityViewEmbedder$1):0 -> <init>
    25:35:void <init>():0:0 -> <init>
    25:35:void <init>(io.flutter.view.AccessibilityViewEmbedder$1):0 -> <init>
    36:39:void io.flutter.Log.w(java.lang.String,java.lang.String):0:0 -> <init>
    36:39:void <init>():0 -> <init>
    36:39:void <init>(io.flutter.view.AccessibilityViewEmbedder$1):0 -> <init>
    40:57:void <init>():0:0 -> <init>
    40:57:void <init>(io.flutter.view.AccessibilityViewEmbedder$1):0 -> <init>
    58:65:void io.flutter.Log.w(java.lang.String,java.lang.String):0:0 -> <init>
    58:65:void <init>():0 -> <init>
    58:65:void <init>(io.flutter.view.AccessibilityViewEmbedder$1):0 -> <init>
    66:76:void <init>():0:0 -> <init>
    66:76:void <init>(io.flutter.view.AccessibilityViewEmbedder$1):0 -> <init>
    77:86:void io.flutter.Log.w(java.lang.String,java.lang.String):0:0 -> <init>
    77:86:void <init>():0 -> <init>
    77:86:void <init>(io.flutter.view.AccessibilityViewEmbedder$1):0 -> <init>
    87:117:void <init>():0:0 -> <init>
    87:117:void <init>(io.flutter.view.AccessibilityViewEmbedder$1):0 -> <init>
    118:123:void io.flutter.Log.w(java.lang.String,java.lang.String):0:0 -> <init>
    118:123:void <init>():0 -> <init>
    118:123:void <init>(io.flutter.view.AccessibilityViewEmbedder$1):0 -> <init>
    124:136:void <init>():0:0 -> <init>
    124:136:void <init>(io.flutter.view.AccessibilityViewEmbedder$1):0 -> <init>
    1:9:java.lang.Long getRecordSourceNodeId(android.view.accessibility.AccessibilityRecord):0:0 -> a
    1:9:java.lang.Long access$600(io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors,android.view.accessibility.AccessibilityRecord):0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/d;Landroid/view/accessibility/AccessibilityRecord;)Ljava/lang/Long;"}
    10:26:java.lang.Long getRecordSourceNodeId(android.view.accessibility.AccessibilityRecord):0:0 -> a
    10:26:java.lang.Long access$600(io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors,android.view.accessibility.AccessibilityRecord):0 -> a
    27:30:void io.flutter.Log.w(java.lang.String,java.lang.String,java.lang.Throwable):0:0 -> a
    27:30:java.lang.Long getRecordSourceNodeId(android.view.accessibility.AccessibilityRecord):0 -> a
    27:30:java.lang.Long access$600(io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors,android.view.accessibility.AccessibilityRecord):0 -> a
    1:1:boolean isBitSet(long,int):0:0 -> b
io.flutter.view.AccessibilityViewEmbedder$ViewAndId -> io.flutter.view.e:
    android.view.View view -> a
    int id -> b
    1:8:void <init>(android.view.View,int):0:0 -> <init>
    1:8:void <init>(android.view.View,int,io.flutter.view.AccessibilityViewEmbedder$1):0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;I)V"}
io.flutter.view.TextureRegistry$ImageTextureEntry -> io.flutter.view.TextureRegistry$ImageTextureEntry:
    long id() -> id
      # {"id":"com.android.tools.r8.synthesized"}
    void release() -> release
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.view.TextureRegistry$OnFrameConsumedListener -> io.flutter.view.f:
io.flutter.view.TextureRegistry$OnTrimMemoryListener -> io.flutter.view.g:
io.flutter.view.TextureRegistry$SurfaceProducer -> io.flutter.view.TextureRegistry$SurfaceProducer:
    long id() -> id
      # {"id":"com.android.tools.r8.synthesized"}
    void release() -> release
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.view.TextureRegistry$SurfaceProducer$Callback -> io.flutter.view.h:
io.flutter.view.TextureRegistry$SurfaceTextureEntry -> io.flutter.view.TextureRegistry$SurfaceTextureEntry:
    long id() -> id
      # {"id":"com.android.tools.r8.synthesized"}
    void release() -> release
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.view.TextureRegistry$SurfaceTextureEntry$-CC -> io.flutter.view.i:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void $default$setOnFrameConsumedListener(io.flutter.view.TextureRegistry$SurfaceTextureEntry,io.flutter.view.TextureRegistry$OnFrameConsumedListener):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/TextureRegistry$SurfaceTextureEntry;Lio/flutter/view/f;)V"}
    1:1:void $default$setOnTrimMemoryListener(io.flutter.view.TextureRegistry$SurfaceTextureEntry,io.flutter.view.TextureRegistry$OnTrimMemoryListener):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/TextureRegistry$SurfaceTextureEntry;Lio/flutter/view/g;)V"}
kotlin.collections.EmptyIterator -> q.a:
    kotlin.collections.EmptyIterator INSTANCE -> a
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void add(java.lang.Object):0:0 -> add
    1:1:boolean hasNext():0:0 -> hasNext
    1:1:boolean hasPrevious():0:0 -> hasPrevious
    1:6:java.lang.Void kotlin.collections.EmptyIterator.next():0:0 -> next
    1:6:java.lang.Object next():0 -> next
    1:1:int nextIndex():0:0 -> nextIndex
    1:6:java.lang.Void kotlin.collections.EmptyIterator.previous():0:0 -> previous
    1:6:java.lang.Object previous():0 -> previous
    1:1:int previousIndex():0:0 -> previousIndex
    1:1:void remove():0:0 -> remove
    1:1:void set(java.lang.Object):0:0 -> set
kotlin.collections.EmptyList -> q.b:
    kotlin.collections.EmptyList INSTANCE -> a
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void add(int,java.lang.Object):0:0 -> add
    2:2:boolean add(java.lang.Object):0:0 -> add
    1:1:boolean addAll(int,java.util.Collection):0:0 -> addAll
    2:2:boolean addAll(java.util.Collection):0:0 -> addAll
    1:1:void clear():0:0 -> clear
    11:14:boolean kotlin.collections.EmptyList.contains(java.lang.Void):0:0 -> contains
    11:14:boolean contains(java.lang.Object):0 -> contains
    1:1:boolean containsAll(java.util.Collection):0:0 -> containsAll
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:25:java.lang.Void kotlin.collections.EmptyList.get(int):0:0 -> get
    1:25:java.lang.Object get(int):0 -> get
    1:1:int hashCode():0:0 -> hashCode
    11:14:int kotlin.collections.EmptyList.indexOf(java.lang.Void):0:0 -> indexOf
    11:14:int indexOf(java.lang.Object):0 -> indexOf
    1:1:boolean isEmpty():0:0 -> isEmpty
    1:1:java.util.Iterator iterator():0:0 -> iterator
    11:14:int kotlin.collections.EmptyList.lastIndexOf(java.lang.Void):0:0 -> lastIndexOf
    11:14:int lastIndexOf(java.lang.Object):0 -> lastIndexOf
    1:1:java.util.ListIterator listIterator():0:0 -> listIterator
    2:2:java.util.ListIterator listIterator(int):0:0 -> listIterator
    1:1:java.lang.Object remove(int):0:0 -> remove
    2:2:boolean remove(java.lang.Object):0:0 -> remove
    1:1:boolean removeAll(java.util.Collection):0:0 -> removeAll
    1:1:boolean retainAll(java.util.Collection):0:0 -> retainAll
    1:1:java.lang.Object set(int,java.lang.Object):0:0 -> set
    1:1:int size():0:0 -> size
    1:1:java.util.List subList(int,int):0:0 -> subList
    1:1:java.lang.Object[] kotlin.jvm.internal.CollectionToArray.toArray(java.util.Collection):0:0 -> toArray
    1:1:java.lang.Object[] toArray():0 -> toArray
    2:2:java.lang.Object[] kotlin.jvm.internal.CollectionToArray.toArray(java.util.Collection,java.lang.Object[]):0:0 -> toArray
    2:2:java.lang.Object[] toArray(java.lang.Object[]):0 -> toArray
    1:1:java.lang.String toString():0:0 -> toString
kotlinx.coroutines.flow.StateFlowImpl -> s.a:
    int sequence -> r
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater _state$FU -> s
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.Object):0:0 -> <init>
